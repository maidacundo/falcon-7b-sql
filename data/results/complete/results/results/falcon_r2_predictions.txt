select count(*) from singer;
select count(*) from singer;
select name,  country,  age from singer order by age desc;
select name,  country,  age from singer order by age desc;
select avg(age),  min(age),  max(age) from singer where country  =  'france';
select avg(age),  min(age),  max(age) from singer where country  =  'france';
select t1.name,  t2.song_release_year from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where t1.age  =  (select min(age) from singer);
select name,  song_release_year from singer where age  =  (select min(age) from singer);
select country from singer where age  >  20 group by country having count(*)  >  1;
select country from singer where age  >  20 group by country having count(*)  >  1;
select country,  count(*) from singer group by country;
select country,  count(*) from singer group by country;
select name from singer where age  >  (select avg(age) from singer);
select t1.name from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where t1.age  >  ( select avg(age) from singer );
select location,  name from stadium where capacity between 5000 and 10000;
select location,  name from stadium where capacity between 5000 and 10000;
select max(t1.capacity),  avg(t1.capacity) from stadium as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id;
select avg(t1.capacity),  max(t1.capacity) from stadium as t1;
select t1.name,  t2.average from stadium as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id order by t2.average desc limit 1;
select t1.name,  t2.capacity from stadium as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id order by avg(t2.attendance) desc limit 1;
select count(*) from concert where year  =  2014 or year  =  2015;
select count(*) from concert where year  =  2014 or year  =  2015;
select t1.name,  count(*) from stadium as t1 join singer_in_concert as t2 on t1.stadium_id  =  t2.stadium_id group by t1.stadium_id;
select t1.name,  count(*) from stadium as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id group by t1.stadium_id;
select t1.name,  max(t2.capacity) from stadium as t1 join stadium_in_concert as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >=  2014 group by t1.name;
select t1.name,  t1.capacity from stadium as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t2.year  >  2013 order by t1.name limit 1;
select year from concert group by year order by count(*) desc limit 1;
select year from concert group by year order by count(*) desc limit 1;
select name from stadium where name!= "concert";
select name from stadium where name!= "concert";
select country from singer where age  >  40 intersect select country from singer where age  <  30;
select name from stadium where stadium_id not in ( select stadium_id from stadium as t1 join singer_in_concert as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  =  2014 );
select name from stadium where location!= "2014";
select t1.concert_name,  count(*) from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id group by t1.concert_name;
select t1.concert_name,  t2.theme,  count(*) from concert as t1 join singer as t2 on t1.concert_id  =  t2.concert_id group by t1.concert_name;
select t1.name,  count(*) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id group by t1.singer_id;
select t1.name,  count(*) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id group by t1.singer_id;
select t1.name from singer as t1 join concert as t2 on t1.concert_id  =  t2.concert_id where t2.year  =  2014;
select t1.name from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where t2.year  =  2014;
select t1.name,  t2.country from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where t2.song_name like '%hey%';
select t1.name,  t2.country from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where t2.song_name like '%hey%';
select t1.name,  t1.location from stadium as t1 join singer_in_concert as t2 on t1.stadium_id  =  t2.stadium_id where t2.year  =  2014 intersect select t1.name,  t1.location from stadium as t1 join singer_in_concert as t2 on t1.stadium_id  =  t2.stadium_id where t2.year  =  2015;
select t1.name,  t1.location from stadium as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t2.year  =  2014 intersect select t1.name,  t1.location from stadium as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t2.year  =  2015;
select count(*) from stadium as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.highest  =  (select max(t1.highest) from stadium);
select count(*) from stadium as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.highest  =  ( select max(t1.highest) from stadium );
select count(*) from pets where weight  >  10;
select count(*) from pets where weight  >  10;
select t1.weight from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid where t2.petid  =  (select min(petid) from pets as t3 group by petid having count(*)  =  1);
select t2.weight from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid where t1.fname  =  'youngest' order by t1.fname asc limit 1;
select max(t1.weight),  t2.pettype from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t1.pettype;
select max(t1.weight),  t2.pettype from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid;
select count(*) from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t1.age  >  20;
select count(*) from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid where t1.age  >  20;
select count(*) from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid where t1.sex  =  'f' and t2.petid  =  t1.petid group by t1.sex;
select count(*) from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.sex  =  'f' and t1.petid  =  t2.petid group by t1.petid having t2.sex  =  'f';
select count(distinct pettype) from pets;
select count(distinct pettype) from pets;
select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  (select max(petid) from has_pet group by petid having pet_type  =  'cat' or pet_type  =  'dog') ;
select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  (select max(petid) from pets group by petid having pet_type  =  "cat" or pet_type  =  "dog") ;
select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  (select max(petid) from has_pet group by petid having count(*)  >=  2) );
select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  (select petid from pets where pettype  =  "cat" intersect select petid from pets where pettype  =  "dog") ;
select t1.major,  t1.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid!= "cat";
select t1.major,  t2.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t1.sex  = 'm' and t1.age  >  25 and t2.petid!=  1;
select stuid from has_pet where petid not in ( select petid from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid where t1.petid  =  t2.petid and t1.pettype  =  'cat' );
select stuid from has_pet where petid not in ( select petid from pets where pet_type  =  "cat" );
select t1.fname,  t1.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  1 except select t1.fname,  t1.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  2;
select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  1 except select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  2;
select t1.pettype,  t1.weight from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid where t2.stuid  =  (select min(stuid) from has_pet);
select t1.pettype,  sum(t2.weight) from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t1.petid order by t2.weight desc limit 1;
select petid,  weight from pets where pet_age  >  1;
select t2.petid,  t1.weight from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid where t1.pet_age  >  1;
select avg(t1.pet_age),  max(t1.pet_age),  t2.pettype from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t1.pettype;
select avg(t1.pet_age),  max(t1.pet_age),  t2.pettype from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t1.pettype;
select pettype,  avg(weight) from pets group by pettype;
select pettype,  avg(weight) from pets group by pettype;
select t1.fname,  t1.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  (select min(petid) from has_pet);
select t1.fname,  t1.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t1.stuid =  t2.stuid group by t1.stuid;
select t1.petid from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.lname  = 'smith';
select t1.petid from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.lname  = 'smith';
select t1.stuid,  count(*) from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid group by t1.stuid;
select t1.stuid,  count(*) from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid group by t1.stuid;
select t1.fname,  t1.lname,  t1.sex from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid having count(*)  >  1;
select t1.fname,  t1.sex from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid having count(*)  >  1;
select t2.lname from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid where t1.petid  =  t2.petid and t2.pet_age  =  3;
select t2.lname from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid where t1.petid  =  2 and t2.pet_age  =  3;
select avg(t2.age) from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t1.stuid not in ( select stuid from has_pet where petid  =  '');
select avg(t2.age) from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t1.stuid not in ( select stuid from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid where t1.stuid!=  null );
select count(*) from continents;
select count(*) from continents;
select continentid,  continent,  count(*) from countries group by continent;
select continentid,  continentname,  count(*) from continents group by continentid;
select count(*) from countries;
select count(*) from countries;
select t1.maker,  t2.maker,  t1.id from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.maker;
select t1.fullname,  count(*) from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id;
select t1.model from car_makers as t1 join car_names as t2 on t1.id  =  t2.make where t2.horsepower  =  (select min(horsepower) from car_names);
select t1.model from car_makers as t1 join cars_data as t2 on t1.id  =  t2.id order by t2.horsepower asc limit 1;
select t1.model from cars_data as t1 join model_list as t2 on t1.id  =  t2.model where t1.weight  <  (select avg(t3.weight) from cars_data as t3 join model_list as t4 on t3.id  =  t4.model);
select t1.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.make where t1.weight  <  (select avg(t2.weight) from car_names as t2);
select t1.maker from maker as t1 join car_makers as t2 on t1.id  =  t2.maker where t2.year  =  1970;
select t1.maker,  count(*) from car_makers as t1 join cars_data as t2 on t1.id  =  t2.makeid where t2.year  =  1970 group by t1.maker;
select t1.maker,  t2.production from car_makers as t1 join cars_data as t2 on t1.id  =  t2.makeid where t1.year  =  (select min(year) from cars_data);
select t1.maker,  t2.year from car_makers as t1 join cars_data as t2 on t1.id  =  t2.makeid where t2.year  =  (select min(t3.year) from cars_data as t3 join car_makers as t4 on t3.make  =  t4.id);
select t1.model from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker where t2.year  >  1980;
select distinct t1.model from car_makers as t1 join cars_data as t2 on t1.id  =  t2.id where t2.year  >  1980;
select t1.continent,  count(*) from continents as t1 join model_list as t2 on t1.continent  =  t2.continent group by t1.continent;
select t1.continent,  count(*) from continents as t1 join model_list as t2 on t1.continent  =  t2.continent group by t1.continent;
select t1.countryname from countries as t1 join car_makers as t2 on t1.continent  =  t2.country; select t1.countryname from countries as t1 join car_makers as t2 on t1.continent  =  t2.country order by count(*) desc limit 1;
select t1.country from countries as t1 join model_list as t2 on t1.continent  =  t2.continent group by t1.continent order by count(*) desc limit 1;
select t1.maker,  count(*),  t2.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.maker;
select t1.maker,  t1.fullname,  count(*) from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.maker;
select t1.accelerate from cars_data as t1 join car_makers as t2 on t1.id  =  t2.id where t2.maker  =  "amc hornet sportabout";
select t1.accelerate from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t2.name  =  "amc hornet sportabout" ;
select count(*) from car_makers as t1 join countries as t2 on t1.country  =  t2.continent where t2.continent  =  'france';
select count(*) from car_makers as t1 join countries as t2 on t1.country  =  t2.continent  =  t2.continent where t2.countryname  =  "france";
select count(*) from cars_data as t1 join model_list as t2 on t1.id  =  t2.model where t1.continent  =  'usa';
select count(*) from cars_data as t1 join model_list as t2 on t1.id  =  t2.model where t1.continent  =  'united states';
select avg(t2.mpg) from cars_data as t1 join car_makers as t2 on t1.id  =  t2.id where t1.cylinders  =  4;
select avg(t1.mpg) from cars_data as t1 join car_makers as t2 on t1.id  =  t2.id where t2.cylinders  =  4;
select min(t1.weight) from cars_data as t1 join car_makers as t2 on t1.id  =  t2.id where t2.cylinders  =  8 and t1.year  =  1974;
select min(t1.weight) from cars_data as t1 join car_makers as t2 on t1.id  =  t2.id where t2.cylinders  =  8 and t1.year  =  1974;
select maker,  model from car_makers; select makeid,  model from car_makers; select maker,  model from model_list; select maker,  model from model_list; select maker,  model from car_makers; select maker,  model from model_list; select maker,  model from car_makers; select maker,  model from model_list; select maker,  model from car_makers; select maker,  model from model_list; select maker,  model from car_makers; select maker,  model from model_list; select maker,  model from model_list; select maker,  model from model_list; select maker, 
select maker,  model from car_makers; select makeid,  model from car_makers; select maker,  model from model_list; select maker,  model from car_makers; select maker,  model from model_list; select maker,  model from car_makers; select maker,  model from model_list; select maker,  model from car_makers; select maker,  model from model_list; select maker,  model from car_makers; select maker,  model from model_list; select maker,  model from car_makers; select maker,  model from model_list; select maker,  model from car_makers; select maker, 
select t1.countryname,  t1.countryid from countries as t1 join model_list as t2 on t1.continent  =  t2.contid group by t1.continent having count(*)  >=  1;
select t1.countryname,  t1.countryid from countries as t1 join model_list as t2 on t1.continent  =  t2.continent group by t1.continent having count(*)  >=  1;
select count(*) from cars_data where horsepower  >  150;
select count(*) from cars_data where horsepower  >  150;
select avg(t2.weight),  t1.year from cars_data as t1 join cars_data as t2 on t1.id  =  t2.id group by t1.year;
select avg(t1.weight),  t2.year from cars_data as t1 join years as t2 on t1.year  =  t2.year group by t1.year;
select t1.country from countries as t1 join continents as t2 on t1.continent  =  t2.continent where t2.continent  =  'europe' group by t1.continent having count(*)  >=  3;
select t1.country from countries as t1 join continents as t2 on t1.continent  =  t2.continent where t2.continent  =  'europe' group by t1.continent having count(*)  >=  3;
select max(t1.horsepower),  t2.make from cars_data as t1 join model_list as t2 on t1.make  =  t2.maker where t1.cylinders  =  3;
select max(t1.horsepower),  t2.maker from cars_data as t1 join model_list as t2 on t1.make  =  t2.maker where t1.cylinders  =  3 group by t1.maker;
select t1.model from car_names as t1 join cars_data as t2 on t1.id  =  t2.id group by t1.model order by sum(t2.mpg) desc limit 1;
select t1.model from car_makers as t1 join car_names as t2 on t1.id  =  t2.make where t2.mpg  =  ( select max(t2.mpg) from car_names as t1 join cars_data as t2 on t1.id  =  t2.make where t2.mpg  >  0 group by t1.id order by t2.mpg desc limit 1);
select avg(t1.horsepower) from cars_data as t1 where year  <  1980;
select avg(t1.horsepower) from cars_data as t1 join cars_data as t2 on t1.year  <  1980 and t2.year  <  1980;
select avg(t1.edispl) from cars as t1 join cars_data as t2 on t1.id  =  t2.id where t1.maker  =  "volvo";
select avg(edispl) from cars_data where make  =  "volvo";
select max(accelerate),  cyl from cars_data group by cyl;
select max(accelerate),  cyl from cars_data group by cyl;
select t1.maker,  count(*) from car_makers as t1 join cars_data as t2 on t1.id  =  t2.makeid group by t1.maker order by count(*) desc limit 1;
select t1.model from model_list as t1 join model_list as t2 on t1.maker  =  t2.maker group by t1.maker order by count(*) desc limit 1;
select count(*) from cars_data where cylinders  >  4;
select count(*) from cars_data where cylinders  >  4;
select count(*) from cars_data where year  =  1980;
select count(*) from cars_data where year  =  1980;
select count(*) from car_makers as t1 join model_list as t2 on t1.maker  =  t2.maker where t1.fullname  =  "american motor company";
select count(*) from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker where t1.maker  =  "american motor company";
select maker,  id from car_makers where maker has at least 3 car models;
select maker,  id from car_makers where maker  >  3;
select distinct t1.maker from car_makers as t1 join model_list as t2 on t1.maker  =  t2.maker where t1.fullname  =  "general motors" and t2.weight  >  3500;
select distinct t1.model from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker where t1.maker  =  "general motors" or t2.weight  >  3500;
select year from cars_data where weight  >=  3000 and weight  <=  4000;
select distinct t1.year from cars_data as t1 join cars_data as t2 on t1.id  =  t2.id where t1.weight  <  4000 intersect select distinct t1.year from cars_data as t1 join cars_data as t2 on t1.id  =  t2.id where t1.weight  >  3000;
select t1.horsepower from cars_data as t1 join cars_data as t2 on t1.id  =  t2.id order by t2.accelerate desc limit 1;
select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id  =  t2.id order by t2.accelerate desc limit 1;
select t1.model,  count(*) from cars_data as t1 join model_list as t2 on t1.model  =  t2.modelid group by t1.model order by t2.cylinders asc limit 1;
select t1.model,  count(*) from car_makers as t1 join cars_data as t2 on t1.id  =  t2.makeid where t2.accelerate  =  (select min(t3.accelerate) from car_makers as t3 join cars_data as t4 on t3.id  =  t4.makeid) for t4.year  =  1990;
select count(*) from cars_data as t1 join cars_data as t2 on t1.id  =  t2.id where t1.accelerate  >  t2.accelerate group by t1.accelerate having count(*)  =  max(select count(*) from cars_data as t1 join cars_data as t2 on t1.id  =  t2.id where t1.accelerate  >  t2.accelerate);
select count(*) from cars_data as t1 join cars_data as t2 on t1.id  =  t2.id where t1.accelerate  >  t2.accelerate order by t1.accelerate desc limit 1;
select count(*) from countries as t1 join model_list as t2 on t1.continent  =  t2.continent group by t1.continent having count(*)  >  2;
select count(*) from countries as t1 join model_list as t2 on t1.continent  =  t2.continent group by t1.continent having count(*)  >  2;
select count(*) from cars_data where cylinders  >  6;
select count(*) from cars_data where cylinders  >  6;
select t1.make from car_makers as t1 join cars_data as t2 on t1.id  =  t2.make where t2.hp  =  ( select max(t2.hp) from cars_data as t3 join car_makers as t4 on t3.id  =  t4.id where t4.cylinders  =  4 group by t4.cylinders order by sum(t2.hp) desc limit 1);
select t1.model from cars_data as t1 join model_list as t2 on t1.model  =  t2.model where t1.cylinders  =  4 group by t2.model order by sum(t2.horsepower) desc limit 1;
select t1.maker,  t1.make from car_makers as t1 join cars_data as t2 on t1.id  =  t2.makeid where t2.horsepower  >  (select min(horsepower) from cars_data);
select t1.make,  t1.maker from car_makers as t1 join cars_data as t2 on t1.id  =  t2.makeid where t2.horsepower  <  4;
select max(t1.mpg) from cars_data as t1 join car_makers as t2 on t1.make  =  t2.id where t2.cylinders  =  8 or t2.year  <  1980;
select max(t1.mpg) from cars_data as t1 join cars_data as t2 on t1.id  =  t2.id where t1.cylinders  =  8 or t1.year  <  1980;
select t1.model from model_list as t1 join cars_data as t2 on t1.model  =  t2.model where t2.weight  <  3500 except select t1.model from model_list as t1 join cars_data as t2 on t1.model  =  t2.model where t2.maker  =  'ford motor company';
select distinct t1.model from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker where t2.horsepower  <  3500 except select t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker where t2.maker  =  "ford";
select t2.country from countries as t1 join model_list as t2 on t1.continent  =  t2.continent where t1.continent!= "all" group by t1.continent;
select country from countries where continent = "none";
select t1.maker,  count(*) from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.maker having count(*)  >=  3 intersect select t1.maker,  count(*) from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.maker having count(*)  >=  2;
select t1.maker,  t1.id from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker where t1.makers  >  3 and t2.model  >=  2;
select t1.countryname,  t2.maker from countries as t1 join model_list as t2 on t1.continent  =  t2.continent where t1.continent  =  "europe" and t2.maker  =  "fiat" group by t1.continent having count(*)  >  3;
select t1.country,  t2.country from countries as t1 join model_list as t2 on t1.continent  =  t2.continent where t1.continent  =  "europe" intersect select t1.country,  t2.country from countries as t1 join model_list as t2 on t1.continent  =  t2.continent where t1.continent  =  "america" intersect select t1.country,  t2.country from countries as t1 join model_list as t2 on t1.continent  =  t2.continent where t1.continent  =  "asia" intersect select t1.
select t1.country from airlines as t1 join table airlines as t2 on t1.uid  =  t2.uid where t1.airline  =  "jetblue airways";
select t1.country from airlines as t1 join airlines as t2 on t1.uid  =  t2.uid where t2.airline  =  "jetblue airways";
select t1.abbreviation from airlines as t1 join airlines as t2 on t1.uid  =  t2.parent where t1.airline  =  "jetblue airways";
select t1.abbreviation from airlines as t1 join airlines as t2 on t1.uid  =  t2.parent where t1.abbreviation  =  "jetblue";
select t1.airline,  t1.abbreviation from airlines as t1 join airlines as t2 on t1.uid  =  t2.uid where t1.country  =  "usa";
select t1.airline,  t1.abbreviation from airlines as t1 join table countries as t2 on t1.country  =  t2.country where t2.country  =  'usa';
select airportcode,  airportname from airports where country  =  'antony';
select airportname,  airportcode from airports where city  =  'anthony';
select count(*) from airlines;
select count(*) from airlines;
select count(*) from airports;
select count(*) from airports;
select count(*) from flights;
select count(*) from flights;
select t1.airline from airlines as t1 join airlines as t2 on t1.uid  =  t2.uid where t2.abbreviation  =  'ual';
select airline from airlines where abbreviation  =  'ual';
select count(*) from airlines where country  =  'usa';
select count(*) from airlines where country  =  'usa';
select t1.city,  t2.country from airports as t1 join cities as t2 on t1.airportname  =  t2.city;
select city,  country from airports where airportname  =  "alton";
select t2.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport where t1.airportname  =  'ako';
select t2.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport where t1.airportcode  =  'ako';
select t2.airportname from airports as t1 join cities as t2 on t1.airportcode  =  t2.airportcode where t1.country  =  'aberdeen';
select airportname from airports where city  =  "aberdeen";
select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.airportname  =  'apg';
select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.airportname  =  'apg';
select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.airportname  =  "ato";
select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.country  =  'ato';
select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportname where t2.airportname  =  "aberdeen";
select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname  =  "aberdeen";
select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.airportname  =  "aberdeen" and t1.sourceairport  =  "aberdeen";
select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.airportname  =  "aberdeen";
select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname  =  'aberdeen' and t1.destairport  =  'ashley';
select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname  =  "ashley" and t1.destairport  =  t2.airportcode;
select count(*) from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airline  =  'jetblue airways';
select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.uid where t2.airline  =  'jetblue airways';
select count(*) from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airline  =  'united' and t2.destairport  =  'asy';
select count(*) from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airline  =  'united' and t2.destairport  =  'asy';
select count(*) from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airline  =  'united' and t2.destairport  =  'ahd';
select count(*) from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airline  =  'united' and t2.destairport  =  'ahd';
select count(*) from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airline  =  'united' and t2.destairport  =  'aberdeen';
select count(*) from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'aberdeen';
select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.city order by count(*) desc limit 1;
select t1.city,  count(*) from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.airportcode order by count(*) desc limit 1;
select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.city order by count(*) desc limit 1;
select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport group by t1.airportcode order by count(*) desc limit 1;
select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.airportcode order by count(*) desc limit 1;
select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.airportcode order by count(*) desc limit 1;
select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.airportcode order by count(*) asc limit 1;
select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.airportcode order by count(*) desc limit 1;
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline group by t1.airline order by count(*) desc limit 1;
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline group by t1.airline order by count(*) desc limit 1;
select t1.abbreviation,  t1.country from airlines as t1 join flights as t2 on t1.uid  =  t2.airline group by t1.abbreviation order by count(*) desc limit 1;
select t1.abbreviation,  t2.country from airlines as t1 join flights as t2 on t1.uid  =  t2.airline group by t1.abbreviation order by count(*) desc limit 1;
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'ahd';
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.country  =  'ahd';
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'ahd';
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'ahd';
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airportname  =  'apg' intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airportname  =  'cvo';
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airportname  =  "apg" intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airportname  =  "cvo";
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airportcode  =  'cvo' except select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airportcode  =  'apg';
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airportcode  =  'cvo' except select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airportcode  =  'apg';
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline group by t1.uid having count(*)  >=  10;
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline group by t1.uid having count(*)  >=  10;
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.count  <  200;
select airline from airlines where t1.uid in ( select airline from flights group by airline having count(*)  <  200 );
select t1.flightno from flights as t1 join airlines as t2 on t1.airline  =  t2.uid where t2.airline  =  "united airlines";
select t1.flightno from flights as t1 join airlines as t2 on t1.airline  =  t2.uid where t2.airline  =  'united';
select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname  =  "apg";
select t1.flightno from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.airportname  =  'apg';
select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname  =  "apg";
select t1.flightno from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.airportname  =  "apg";
select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname  =  "aberdeen";
select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.country  =  'aberdeen';
select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname  =  "aberdeen";
select t1.flightno from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.country  =  'aberdeen';
select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.countryabbrev  =  'aberdeen' or t2.countryabbrev  =  'abilene';
select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.airportname  =  "aberdeen" or t2.airportname  =  "abilene";
select t2.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport where t1.airportname!= "airports" group by t1.airportname having count(*)  =  0;
select airportcode from airports where country!= "arrival" union select airportcode from airports where country!= "departure";
select count(*) from employee;
select count(*) from employee;
select name from employee order by age asc;
select name from employee order by age asc;
select t1.city,  count(*) from employee as t1 join city as t2 on t1.city  =  t2.city group by t1.city;
select city,  count(*) from employee group by city;
select city from employee where age  >  30 group by city having count(*)  >  1;
select city from employee where age  >  30 group by city having count(*)  >  1;
select district,  count(*) from shop group by district;
select district,  count(*) from shop group by district;
select manager_name,  district from shop order by number_products desc limit 1;
select manager_name,  district from shop order by number_products desc limit 1;
select min(number_products),  max(number_products) from shop;
select min(number_products),  max(number_products) from shop;
select name,  location,  district from shop order by number_products desc;
select name,  location,  district from shop order by number_products desc;
select name from shop where number_products  >  (select avg(number_products) from shop);
select name from shop where number_products  >  (select avg(number_products) from shop);
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t1.name order by count(*) desc limit 1;
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t1.name order by count(*) desc limit 1;
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id order by t2.year_awarded desc limit 1;
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id order by t2.bonus desc limit 1;
select name from employee where name not in ( select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id where t2.year_awarded  =  'never');
select name from employee where employee_id not in (select employee_id from evaluation);
select t2.name from hiring as t1 join shop as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;
select t1.name from shop as t1 join employee as t2 on t1.shop_id  =  t2.shop_id group by t1.name order by count(*) desc limit 1;
select name from shop where shop_id not in ( select shop_id from hiring );
select name from shop where number_products  =  0;
select t1.name,  count(*),  t2.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.name;
select t1.name,  count(*),  t2.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id;
select sum(t2.bonus) from evaluation as t1 join hiring as t2 on t1.employee_id  =  t2.employee_id;
select sum(t2.bonus) from evaluation as t1 join hiring as t2 on t1.employee_id  =  t2.employee_id;
select * from hiring;
select * from hiring;
select district from shop where number_products  <  3000 intersect select district from shop where number_products  >  10000;
select district from shop where number_products  <  3000 intersect select district from shop where number_products  >  10000;
select count(district) from shop;
select count(district) from shop;
select count(*) from documents;
select count(*) from documents;
select document_id,  document_name,  document_description from documents;
select document_id,  document_name,  document_description from documents;
select t1.document_name,  t2.template_id from documents as t1 join ref_template_types as t2 on t1.document_id  =  t2.template_id where t1.document_description like '%w%';
select document_name,  document_template_type_code from documents where document_description like "%w%";
select t1.document_id,  t2.template_id,  t3.document_description from documents as t1 join ref_template_types as t2 on t1.document_id  =  t2.document_id join templates as t3 on t2.template_id  =  t3.template_id where t1.document_name  =  "robbin cv";
select document_id,  template_id,  document_description from documents where document_name  =  "robbin cv";
select count(distinct template_id) from documents;
select count(distinct template_type_code) from templates;
select count(*) from documents as t1 join templates as t2 on t1.document_id  =  t2.document_id where t2.template_type_code  =  'ppt';
select count(*) from documents where document_name  =  "ppt";
select t1.template_id,  count(*) from templates as t1 join documents as t2 on t1.template_id  =  t2.template_id group by t1.template_id;
select t1.template_id,  count(*) from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id group by t2.template_id;
select t1.template_id,  t2.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code group by t1.template_type_code order by count(*) desc limit 1;
select t1.template_id,  t1.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code group by t1.template_type_code order by count(*) desc limit 1;
select t1.template_id from templates as t1 join documents as t2 on t1.template_id  =  t2.template_id group by t1.template_id having count(*)  >  1;
select t1.template_id from templates as t1 join documents as t2 on t1.template_id  =  t2.template_id group by t1.template_id having count(*)  >  1;
select template_id from templates where template_type_code!= "ref_template_types.template_type_code";
select template_id from templates where template_type_code!= "ref_template_types.template_type_code";
select count(*) from templates;
select count(*) from templates;
select template_type_code,  version_number,  template_type_code from templates;
select template_id,  version_number,  template_type_code from templates;
select distinct t1.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code;
select distinct template_type_code from ref_template_types;
select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_description  =  "pp" or t2.template_type_description  =  "ppt";
select template_id from templates where template_type_code  =  "pp" intersect select template_id from templates where template_type_code  =  "ppt";
select count(*) from templates where template_type_code  =  "cv";
select count(*) from templates as t join ref_template_types as t1 on t.template_type_code  =  t1.template_type_code where t1.template_type_description  =  'cv';
select t1.version_number,  t2.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t1.version_number  >  5;
select version_number,  template_type_code from templates where version_number  >  5;
select template_type_code,  count(*) from templates group by template_type_code;
select template_type_code,  count(*) from templates group by template_type_code;
select template_type_code from templates group by template_type_code order by count(*) desc limit 1;
select t2.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code group by t1.template_type_code order by count(*) desc limit 1;
select template_type_code from ref_template_types group by template_type_code having count(*)  <  3;
select template_type_code from ref_template_types group by template_type_code having count(*)  <  3;
select min(version_number),  template_type_code from templates group by template_type_code;
select t1.version_number,  t2.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code order by t1.version_number desc limit 1;
select t1.template_type_code from ref_template_types as t1 join documents as t2 on t1.template_type_code  =  t2.template_id where t2.document_name  =  "data base";
select t1.template_type_code from ref_template_types as t1 join documents as t2 on t1.template_type_code  =  t2.template_id where t2.document_name  =  "data base";
select t1.document_name from documents as t1 join templates as t2 on t1.document_id  =  t2.document_id where t2.template_type_code  =  'bk';
select t1.document_name from documents as t1 join templates as t2 on t1.document_id  =  t2.document_id where t2.template_type_code  =  'bk';
select t1.template_type_code,  count(*) from ref_template_types as t1 join documents as t2 on t1.template_type_code  =  t2.template_id group by t1.template_type_code;
select t1.template_type_code,  count(*) from ref_template_types as t1 join documents as t2 on t1.template_type_code  =  t2.template_id group by t1.template_type_code;
select t2.template_type_code from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_type_code group by t2.template_type_code order by count(*) desc limit 1;
select t2.template_type_code from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_type_code group by t2.template_type_code order by count(*) desc limit 1;
select template_type_code from ref_template_types where template_type_code!= " ";
select template_type_code from ref_template_types where template_type_code!= ( select template_type_code from templates );
select template_type_code,  template_type_description from ref_template_types;
select template_type_code,  template_type_description from ref_template_types;
select t2.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_code  =  "ad";
select t2.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_description  =  'ad';
select t2.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_description  =  "book";
select t1.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_description  =  "book";
select t2.template_type_description from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id group by t1.template_id having count(*)  >  0;
select distinct t2.other_details from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id;
select t1.template_id from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_description  =  "presentation";
select template_id from ref_template_types where template_type_description  =  'presentation';
select count(*) from paragraphs;
select count(*) from paragraphs;
select count(*) from paragraphs as t1 join documents as t2 on t1.document_id  =  t2.document_id where t2.document_name  = 'summer show';
select count(*) from paragraphs as t1 join documents as t2 on t1.document_id  =  t2.document_id where t2.document_name  = 'summer show';
select other_details from paragraphs where document_name  =  'korea';
select other_details from paragraphs where document_name  =  "korea ";
select t1.paragraph_id,  t2.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id  =  t2.document_id where t2.document_name  =  'welcome to ny';
select t1.paragraph_id,  t2.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id  =  t2.document_id where t2.document_name  =  'welcome to ny';
select t2.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  "customer reviews";
select t2.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  'customer reviews';
select document_id,  count(*) from paragraphs group by document_id;
select document_id,  count(*) from paragraphs order by document_id;
select document_id,  document_name,  count(*) from documents group by document_name;
select document_name,  count(*) from documents group by document_name;
select document_id from documents group by document_id having count(*)  >=  2;
select document_id from documents group by document_id having count(*)  >=  2;
select t1.document_id,  t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by count(*) desc limit 1;
select t1.document_id,  t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_name order by count(*) desc limit 1;
select t1.document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by count(*) asc limit 1;
select t1.document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by count(*) asc limit 1;
select t3.document_id from paragraphs as t1 join documents as t2 on t1.document_id  =  t2.document_id join ref_template_types as t3 on t1.paragraph_text  =  t3.template_type_code where t1.paragraph_count  =  1 intersect select t1.paragraph_count from paragraphs as t1 join documents as t2 on t1.paragraph_id  =  t2.paragraph_id join ref_template_types as t3 on t1.paragraph_text  =  t3.template_type_code where t1.paragraph_count  =  2;
select document_id from documents where document_name like '%paragraph%' group by document_name having count(*) between 1 and 2;
select document_id,  paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t2.paragraph_text  =  'ireland' and t1.document_name  =  'brazil';
select document_id from documents where document_description  =  "brazil" intersect select document_id from documents where document_description  =  "ireland";
select count(*) from teacher;
select count(*) from teacher;
select name from teacher order by age asc;
select name from teacher order by age asc;
select name,  age,  hometown from teacher;
select t1.name,  t2.hometown,  t1.age from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id;
select t1.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id where t1.hometown!= "little lever urban district";
select name from teacher where hometown!= "little lever urban district";
select t2.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id where t1.age  =  32 intersect select t2.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id where t1.age  =  33;
select t2.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id where t1.age  =  32 or t1.age  =  33;
select t2.hometown from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id order by t1.name asc limit 1;
select t1.name,  t1.age from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id order by t1.age desc limit 1;
select t2.hometown,  count(*) from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id group by t1.hometown;
select t1.hometown,  count(*) from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id group by t1.hometown;
select t2.hometown from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id group by t1.hometown order by count(*) desc limit 1;
select t2.hometown from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id group by t1.hometown order by count(*) desc limit 1;
select t2.hometown from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id group by t1.teacher_id having count(*)  >=  2;
select t2.hometown from course as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id group by t1.teacher_id having count(*)  >=  2;
select t2.name,  t1.course from course_arrange as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id;
select t1.name,  t2.course from teacher as t1 join course as t2 on t1.teacher_id  =  t2.teacher_id;
select t2.name,  t1.course from course_arrange as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id order by t2.name;
select t1.name,  t2.course from teacher as t1 join course as t2 on t1.teacher_id  =  t2.teacher_id order by t1.name;
select t2.name from course as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id where t1.course  =  "math";
select t2.name from course as t1 join course_arrange as t2 on t1.course_id  =  t2.course_id where t1.name  = 'math';
select t1.name,  count(*) from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id group by t1.teacher_id;
select t1.name,  count(*) from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id group by t1.teacher_id;
select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id group by t1.teacher_id having count(*)  >=  2;
select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id group by t1.teacher_id having count(*)  >=  2;
select name from teacher where teacher_id not in (select teacher_id from course_arrange);
select t1.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id where t1.name not in (select t3.name from course as t3 join course_arrange as t2 on t3.course_id  =  t2.course_id);
select count(*) from visitor where age  <  30;
select name from visitor where level_of_membership  >  4 order by level_of_membership;
select avg(t1.age) from visitor as t1 join visit as t2 on t1.id  =  t2.visitor_id where t1.level_of_membership!= 4;
select t1.name,  t2.level_of_membership from visitor as t1 join visitor as t2 on t1.id  =  t2.id where t2.level_of_membership  >  4 order by t1.age;
select t1.name,  t1.num_of_staff from museum as t1 join visit as t2 on t1.museum_id  =  t2.museum_id group by t1.num_of_staff order by count(*) desc limit 1;
select avg(num_of_staff) from museum where open_year  <  2009;
select open_year,  num_of_staff from museum where name  =  "plaza museum";
select name from museum where num_of_staff  >  (select min(num_of_staff) from museum where open_year  >=  2010);
select t1.id,  t1.name,  t1.age from visitor as t1 join visit as t2 on t1.id  =  t2.visitor_id group by t1.id having count(*)  >  1;
select t1.id,  t1.name,  t1.level_of_membership from visitor as t1 join visit as t2 on t1.id  =  t2.visitor_id group by t1.id order by sum(t2.total_spent) desc limit 1;
select t1.name,  count(*) from visit as t1 join museum as t2 on t1.museum_id  =  t2.museum_id group by t1.museum_id order by count(*) desc limit 1;
select t1.name from museum as t1 join visit as t2 on t1.museum_id  =  t2.museum_id where t1.museum_id not in (select museum_id from visitor);
select t2.name,  t1.age from visit as t1 join visitor as t2 on t1.visitor_id  =  t2.id group by t1.visitor_id order by sum(t1.num_of_ticket) desc limit 1;
select avg(t1.num_of_ticket),  max(t1.num_of_ticket) from visit as t1 join museum as t2 on t1.museum_id  =  t2.museum_id;
select t2.total_spent from visit as t1 join visitor as t2 on t1.visitor_id  =  t2.id where t2.level_of_membership  =  1;
select t2.name from visit as t1 join visitor as t2 on t1.visitor_id  =  t2.id where t1.open_year  <  2009 intersect select t2.name from visit as t1 join visitor as t2 on t1.visitor_id  =  t2.id where t1.open_year  >  2011;
select count(*) from visit where visitor_id not in ( select visitor_id from visit where open_year  >  2010 );
select count(*) from museum where open_year  >  2008 or open_year  <  2013;
select count(*) from players;
select count(*) from players;
select count(*) from matches;
select count(*) from matches;
select first_name,  birth_date from players where country_code  =  "usa";
select t1.first_name,  t1.birth_date from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id where country_code  =  'usa';
select avg(t1.loser_age),  avg(t2.winner_age) from matches as t1 join matches as t2 on t1.loser_id  =  t2.loser_id;
select avg(t1.loser_age),  avg(t2.winner_age) from matches as t1 join matches as t2 on t1.loser_id  =  t2.loser_id;
select avg(t1.rank) from matches as t1 join winners as t2 on t1.winner_id  =  t2.player_id;
select avg(t1.ranking) from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id;
select max(t1.ranking) from matches as t1 join rankings as t2 on t1.loser_id  =  t2.player_id group by t1.loser_id;
select max(t1.ranking) from matches as t1 join rankings as t2 on t1.loser_id  =  t2.player_id group by t1.loser_id;
select count(distinct country_code) from players;
select count(distinct country_code) from players;
select count(distinct loser_name) from losers;
select count(distinct loser_name) from losers;
select t2.tourney_name from matches as t1 join rankings as t2 on t1.tourney_id  =  t2.tourney_id group by t1.tourney_name having count(*)  >  10;
select tourney_name from matches group by tourney_name having count(*)  >  10;
select winner_name from matches as t1 join winners as t2 on t1.winner_id  =  t2.winner_id where t1.year  =  2013 intersect select winner_name from matches as t1 join winners as t2 on t1.winner_id  =  t2.winner_id where t1.year  =  2016;
select t1.name from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id where t2.year  =  2013 intersect select t1.name from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id where t2.year  =  2016;
select count(*) from matches where year  =  2013 or year  =  2016;
select count(*) from matches as t1 join matches as t2 on t1.match_num  =  t2.match_num where t1.year  =  2013 or t1.year  =  2016;
select t1.country_code,  t1.first_name from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id where t2.tourney_name  =  "australian open" intersect select t1.country_code,  t1.first_name from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id where t2.tourney_name  =  "wta championship";
select t1.first_name,  t1.country_code from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id where t2.tour  =  "australian open" intersect select t1.first_name,  t1.country_code from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id where t2.tour  =  "wta championships";
select first_name,  country_code from players order by birth_date desc limit 1;
select first_name,  country_code from players order by birth_date desc limit 1;
select t1.first_name,  t1.last_name from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id order by t2.ranking;
select first_name,  last_name from players order by birth_date;
select t1.first_name,  t1.last_name from players as t1 join matches as t2 on t1.player_id  =  t2.loser_id where t2.hand  =  'left' order by t1.birth_date;
select t1.first_name,  t1.last_name from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id where t1.hand  =  'left' order by t2.ranking;
select t1.first_name,  t1.country_code from rankings as t1 join players as t2 on t1.player_id  =  t2.player_id group by t1.player_id order by count(*) desc limit 1;
select t1.first_name,  t1.country_code from rankings as t1 join players as t2 on t1.player_id  =  t2.player_id group by t1.player_id order by count(*) desc limit 1;
select t1.year from matches as t1 join matches as t2 on t1.winner_id  =  t2.winner_id group by t1.year order by count(*) desc limit 1;
select t1.year from matches as t1 join matches as t2 on t1.match_num  =  t2.match_num group by t1.year order by count(*) desc limit 1;
select winner_name,  winner_rank_points from matches group by winner_name order by count(*) desc limit 1;
select t1.winner_name,  sum(t2.rank_points) from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id group by t1.winner_id order by count(*) desc limit 1;
select t1.winner_name from winners as t1 join matches as t2 on t1.winner_id  =  t2.winner_id where t2.tourney_name  =  "australian open" order by t1.rank_points desc limit 1;
select t1.winner_name from winners as t1 join matches as t2 on t1.winner_id  =  t2.winner_id where t2.tournament_name  =  "australian open" order by t1.rank_points desc limit 1;
select t1.loser_name,  t1.winner_name from matches as t1 join players as t2 on t1.loser_id  =  t2.player_id group by t1.loser_id order by sum(t1.minutes) desc limit 1;
select t1.name,  t2.name from matches as t1 join losers as t2 on t1.loser_id  =  t2.loser_id order by t1.match_num desc limit 1;
select avg(ranking),  t1.first_name from rankings as t1 join players as t2 on t1.player_id  =  t2.player_id group by t1.first_name;
select t1.first_name,  avg(t2.ranking) from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.player_id;
select t1.first_name,  sum(ranking) from rankings as t1 join players as t2 on t1.player_id  =  t2.player_id group by t1.first_name;
select t1.first_name,  sum(ranking) from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.player_id;
select country_code,  count(*) from players group by country_code;
select country_code,  count(*) from players group by country_code;
select country_code from players group by country_code order by count(*) desc limit 1;
select country_code from players group by country_code order by count(*) desc limit 1;
select country_code from players group by country_code having count(*)  >  50;
select country_code from players group by country_code having count(*)  >  50 order by country_code;
select ranking,  sum(tours) from rankings group by ranking;
select ranking,  count(*) from rankings group by ranking;
select t1.year,  count(*) from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id group by t1.year;
select t1.year,  count(*) from matches as t1 join players as t2 on t1.winner_id  =  t2.player_id group by t1.year;
select winner_name,  winner_rank from winners order by winner_age desc limit 3;
select winner_name,  winner_rank from winners order by winner_age desc limit 3;
select count(*) from matches as t1 join players as t2 on t1.winner_id  =  t2.player_id where t2.hand  =  "left" intersect select count(*) from matches as t1 join players as t2 on t1.loser_id  =  t2.player_id where t2.hand  =  "left" intersect select count(*) from matches as t1 join players as t2 on t1.winner_id  =  t2.player_id where t2.hand  =  "right";
select count(*) from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id where t1.hand  =  "left" and t2.tour  =  "wta championships";
select t1.first_name,  t1.country_code,  t1.birth_date from winners as t1 join matches as t2 on t1.winner_id  =  t2.winner_id order by t2.rank desc limit 1;
select t1.first_name,  t1.country_code,  t1.birth_date from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id order by t2.winner_rank desc limit 1;
select t1.hand,  count(*) from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id group by t1.hand;
select t1.hand,  count(*) from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id group by t1.hand;
select count(*) from ship as t1 join battle as t2 on t1.id  =  t2.id where disposition_of_ship  =  'captured';
select name,  tonnage from ship order by name desc;
select name,  date,  result from battle;
select max(t1.killed),  min(t1.killed) from death as t1 join ship as t2 on t1.caused_by_ship_id  =  t2.id group by t2.id;
select avg(t1.injured) from death as t1 join battle as t2 on t1.caused_by_ship_id  =  t2.id;
select t1.note,  t2.note from death as t1 join ship as t2 on t1.caused_by_ship_id  =  t2.id where t2.tonnage  =  't';
select name,  result from battle where latin_commander!= "boril";
select t1.name,  t1.date from battle as t1 join ship as t2 on t1.id  =  t2.lost_in_battle where t2.ship_type  =  "brig";
select t1.id,  t1.name from battle as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id group by t1.id having count(*)  >  10;
select t1.id,  t2.name from ship as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id group by t1.id order by sum(t2.injured) desc limit 1;
select distinct t1.name from battle as t1 join ship as t2 on t1.id  =  t2.lost_in_battle where t2.name  =  "kaloyan" intersect select distinct t1.name from battle as t1 join ship as t2 on t1.id  =  t2.lost_in_battle where t2.name  =  "baldwin i";
select count(distinct result) from battle;
select count(*) from battle where id not in ( select lost_in_battle from ship where tonnage  =  225 );
select t1.name,  t1.date from battle as t1 join ship as t2 on t1.id  =  t2.lost_in_battle where t2.name  =  'hms atalanta' intersect select t1.name,  t1.date from battle as t1 join ship as t2 on t1.id  =  t2.lost_in_battle where t2.name  =  'lettice';
select t1.name,  t2.result,  t1.bulgarian_commander from battle as t1 join death as t2 on t1.id  =  t2.lost_in_battle where t1.name!= "english channel";
select t2.note from death as t1 join ship as t2 on t1.caused_by_ship_id  =  t2.id where t1.note like '%east%';
select address_id from addresses where line_1 = " " and line_2 = " ";
select t1.line_1,  t1.line_2 from addresses as t1 join addresses as t2 on t1.address_id  =  t2.other_address_details;
select count(*) from courses;
select count(*) from courses;
select t2.course_description from courses as t1 join transcript_contents as t2 on t1.course_id  =  t2.student_course_id where t1.course_name  =  "math" and t2.course_description  =  "mathematics";
select course_description from courses where course_name  =  "math";
select t1.zip_postcode from addresses as t1 join cities as t2 on t1.city  =  t2.city where t1.line_1  =  t2.city;
select t1.zip_postcode from addresses as t1 join cities as t2 on t1.city  =  t2.city where t2.city  =  "port chelsea";
select department_name,  department_id from degree_programs order by count(*) desc limit 1;
select department_name,  department_id from degree_programs order by count(*) desc limit 1;
select count(*) from departments as t1 join degree_programs as t2 on t1.department_id  =  t2.department_id where t1.department_name  =  'any degree';
select count(distinct department_name) from degree_programs;
select count(distinct degree_summary_name) from degree_programs;
select count(distinct degree_summary_name) from degree_programs;
select count(*) from departments as t1 join degree_programs as t2 on t1.department_id  =  t2.department_id where t1.department_name  =  'engineering';
select count(*) from departments as t1 join degree_programs as t2 on t1.department_id  =  t2.department_id where t1.department_name  =  "engineering";
select section_name,  section_description from sections;
select section_name,  section_description from departments as t1 join sections as t2 on t1.department_id  =  t2.department_id;
select course_name,  course_id from courses where course_id in ( select course_id from sections group by course_id having count(*)  <=  2 );
select t1.course_name,  t1.course_id from courses as t1 join degree_programs as t2 on t1.degree_summary_name  =  t2.degree_summary_name where t2.degree_summary_name  =  "undergraduate" group by t1.course_name having count(*)  <  2;
select section_name from sections order by section_name desc;
select section_name from sections order by section_name desc;
select t1.semester_name,  t1.semester_id from semesters as t1 join student_enrolment as t2 on t1.semester_id  =  t2.semester_id group by t1.semester_name order by count(*) desc limit 1;
select t1.semester_name,  t1.semester_id from semesters as t1 join student_enrolment as t2 on t1.semester_id  =  t2.semester_id group by t1.semester_id order by count(*) desc limit 1;
select t1.department_description from departments as t1 join degree_programs as t2 on t1.department_id  =  t2.department_id where t2.degree_summary_name like "%computer%";
select t1.department_description from departments as t1 join degree_programs as t2 on t1.department_id  =  t2.department_id where t2.degree_summary_name  =  "computer";
select t1.first_name,  t1.middle_name,  t1.last_name,  t2.student_enrolment_id from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.semester_id  =  1;
select t1.first_name,  t1.middle_name,  t1.last_name,  t2.semester_name,  t2.student_enrolment_id from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.semester_name  =  'fall' group by t1.student_enrolment_id having count(*)  =  2;
select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id where t2.degree_summary_name  =  'bachelor';
select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join degree_programs as t2 on t1.degree_id  =  t2.degree_id where t2.degree_summary_name  =  'bachelor' and t1.major_code  =  'business';
select t1.degree_summary_name from degree_programs as t1 join students as t2 on t1.degree_summary_name = t2.degree_summary_name group by t1.degree_summary_name order by count(*) desc limit 1;
select t1.degree_summary_name from degree_programs as t1 join students as t2 on t1.degree_summary_name = t2.degree_summary_name group by t1.degree_summary_name order by count(*) desc limit 1;
select t1.department_name,  t1.department_description from departments as t1 join student_enrolment as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1;
select t1.degree_program_id,  t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_program_id order by count(*) desc limit 1;
select t1.student_id,  t1.first_name,  t1.middle_name,  t1.last_name,  count(*),  t1.student_id from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id group by t1.student_id order by count(*) desc limit 1;
select t1.first_name,  t1.middle_name,  t1.last_name,  count(*) from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id group by t1.student_id order by sum(t2.enrollment) desc limit 1;
select t2.semester_name from student_enrolment as t1 join semesters as t2 on t1.semester_id  =  t2.semester_id where t1.student_enrolment_id  =  nil;
select semester_name from semesters where semester_name = "fall" except select t1.semester_name from semesters as t1 join student_enrolment as t2 on t1.semester_id  =  t2.semester_id group by t1.semester_name having count(*)  =  0;
select t1.course_name from courses as t1 join student_enrolment as t2 on t1.course_id  =  t2.course_id where t2.student_id is not null;
select t2.course_name from student_enrolment as t1 join courses as t2 on t1.course_id  =  t2.course_id group by t1.course_id having count(*)  >=  1;
select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id group by t1.course_name order by count(*) desc limit 1;
select t1.course_name from courses as t1 join student_enrolment as t2 on t1.course_id  =  t2.course_id group by t1.course_name order by count(*) desc limit 1;
select t1.last_name from students as t1 join degrees as t2 on t1.degree_id  =  t2.degree_id where t1.current_address_id  =  "north carolina" except select t1.last_name from students as t1 join degrees as t2 on t1.degree_id  =  t2.degree_id where t1.current_address_id  =  "north carolina" and t2.degree_summary_name  =  "undergraduate";
select t1.last_name from students as t1 join degrees as t2 on t1.student_id  =  t2.student_id where t1.current_address_id  =  "nc" except select t1.last_name from students as t1 join degrees as t2 on t1.student_id  =  t2.student_id where t1.permanent_address_id  =  "nc" group by t1.student_id having count(*)  =  0;
select t1.transcript_date,  t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.transcript_id group by t1.transcript_date having count(*)  >=  2;
select t1.transcript_date,  t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.transcript_id group by t1.transcript_date having count(*)  >=  2;
select t1.cell_mobile_number from students as t1 join addresses as t2 on t1.current_address_id = t2.address_id where t1.first_name = "timmothy" and t1.last_name = "ward";
select t1.cell_mobile_number from students as t1 join students as t2 on t1.student_id  =  t2.student_id where t1.first_name  =  "timmothy" and t1.last_name  =  "ward";
select first_name,  middle_name,  last_name from students order by date_first_registered desc limit 1;
select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.semester_id  =  'fall' order by t1.student_id limit 1;
select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id where t2.degree_summary_name  =  "bachelor's degree" order by t1.date_left desc limit 1;
select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join transcripts as t2 on t1.student_id  =  t2.student_id where t1.date_left  =  '1900-01-01';
select t1.first_name from addresses as t1 join students as t2 on t1.address_id = t2.current_address_id where t1.address_id!= t2.permanent_address_id;
select t1.first_name from students as t1 join addresses as t2 on t1.student_id  =  t2.student_id where t2.permanent_address_id!= t2.address_id;
select t1.address_id,  sum(t2.student_count) from addresses as t1 join students as t2 on t1.address_id  =  t2.current_address_id group by t1.address_id order by count(*) desc limit 1;
select t1.address_id,  t1.line_1,  t1.line_2 from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.current_address_id group by t1.address_id order by count(*) desc limit 1;
select avg(t1.transcript_date) from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.transcript_id group by t1.transcript_date;
select avg(t2.transcript_date) from transcripts as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id;
select t1.transcript_date,  t1.other_details from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.transcript_id where t2.student_course_id  =  "first_term";
select t1.transcript_date,  t1.other_details from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.transcript_id group by t1.transcript_date order by t1.transcript_date desc limit 1;
select count(*) from transcripts as t1 join student_enrolment as t2 on t1.transcript_id  =  t2.transcript_id where t2.status  = 'released';
select count(*) from transcripts;
select t1.transcript_release_date from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.transcript_id where t2.student_enrolment_id  =  1;
select t1.transcript_date from transcripts as t1 join student_enrolment_transcripts as t2 on t1.transcript_id  =  t2.transcript_id where t2.transcript_status  = 'released' order by t1.transcript_date desc limit 1;
select t1.course_name,  count(*) from transcript_contents as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id group by t1.course_name having count(*)  <=  1;
select t1.course_name,  count(*) from courses as t1 join transcript_contents as t2 on t1.course_id  =  t2.course_id group by t1.course_name having count(*)  =  ( select t1.course_name from courses as t1 join transcript_contents as t2 on t1.course_id  =  t2.course_id group by t1.course_name having count(*)  =  ( select t1.course_name from courses as t1 join transcript_contents as t2 on t1.course_id  =  t2.course_id group by t1.course_name having count(*)  =  ( select t1.course
select t1.transcript_date,  t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.transcript_id group by t1.transcript_date order by count(*) limit 1;
select t1.transcript_date,  t1.transcript_id from transcript_contents as t1 join transcripts as t2 on t1.transcript_id  =  t2.transcript_id group by t1.transcript_date order by count(*) asc limit 1;
select t2.semester_name from student_enrolment as t1 join degrees as t2 on t1.degree_summary_name  =  t2.degree_summary_name where t1.student_enrolment_id  =  t2.student_enrolment_id and t2.degree_summary_name  = 'master' intersect select t2.semester_name from student_enrolment as t1 join degrees as t2 on t1.degree_summary_name  =  t2.degree_summary_name where t1.student_enrolment_id  =  t2.student_enrolment_id and t2.degree_summary_name  =  
select t1.semester_name from semesters as t1 join student_enrolment as t2 on t1.semester_id = t2.semester_id where t2.student_enrolment_type = "masters" intersect select t1.semester_name from semesters as t1 join student_enrolment as t2 on t1.semester_id = t2.semester_id where t2.student_enrolment_type = "bachelors";
select count(distinct current_address_id) from students;
select distinct t1.address_id from addresses as t1 join students as t2 on t1.address_id  =  t2.current_address_id where t2.permanent_address_id  =  t1.address_id;
select * from students order by first_name,  last_name,  date_left desc;
select other_details from students order by first_name;
select section_name from sections where department_id  =  "h";
select section_description from sections where section_name  =  "h";
select t1.first_name from students as t1 join addresses as t2 on t1.current_address_id  =  t2.address_id where t2.country  =  "haiti" or t2.cell_mobile_number  =  "09700166582";
select t1.first_name from students as t1 join addresses as t2 on t1.current_address_id  =  t2.address_id where t2.country  =  "haiti" or t2.cell_mobile_number  =  "09700166582";
select title from cartoon order by title;
select title from cartoon order by title;
select t1.title from cartoon as t1 join tv_channel as t2 on t1.directed_by  =  t2.id where t2.content  =  "ben jones";
select t1.title from cartoon as t1 join tv_channel as t2 on t1.directed_by  =  t2.id where t2.original_air_date  =  "1999-01-01" and t2.director  =  "ben jones";
select count(*) from cartoon as t1 join tv_series as t2 on t1.directed_by  =  t2.id where t1.directed_by  =  "joseph kuhr";
select count(*) from cartoon as t1 join tv_series as t2 on t1.directed_by  =  t2.id where t1.written_by  =  "joseph kuhr";
select title,  directed_by from cartoon order by original_air_date;
select title,  directed_by from cartoon order by original_air_date;
select t1.title from cartoon as t1 join tv_series as t2 on t1.directed_by  =  t2.id where t1.directed_by  =  "ben jones" or t1.directed_by  =  "brandon vietti";
select t1.title from cartoon as t1 join tv_channel as t2 on t1.directed_by  =  t2.id where t2.original_air_date  =  "1999-01-01" and t2.directors_name  =  "ben jones" or t2.directors_name  =  "brandon vietti";
select country,  count(*) from tv_channel group by country order by count(*) desc limit 1;
select country,  count(*) from tv_channel group by country order by count(*) desc limit 1;
select count(distinct t1.series_name),  count(distinct t2.content) from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t1.series_name;
select count(distinct t1.series),  count(distinct t2.content) from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel;
select content from tv_channel where series_name  =  "sky radio";
select t1.content from tv_series as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.series  =  "sky radio";
select t1.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.series  =  "sky radio";
select t1.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.series_name  =  "sky radio";
select count(*) from tv_channel where language  =  'english';
select count(*) from tv_channel where language  =  'english';
select language,  count(*) from tv_channel group by language order by count(*) desc limit 1;
select t1.language,  count(*) from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t1.language order by count(*) asc limit 1;
select language,  count(*) from tv_channel group by language;
select language,  count(*) from tv_channel group by language;
select t1.series_name from tv_series as t1 join cartoon as t2 on t1.id  =  t2.channel where t2.title  =  "the rise of the blue beetle!";
select t1.series_name from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.title  =  "the rise of the blue beetle";
select t1.title from cartoon as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.series_name  =  "sky radio";
select t1.title from tv_series as t1 join cartoon as t2 on t1.channel  =  t2.channel where t1.series_name  =  "sky radio";
select episode from tv_series order by rating;
select episode from tv_series order by rating;
select t1.episode,  t1.rating from tv_series as t1 join tv_series as t2 on t1.id  =  t2.parent_id order by t2.episode desc limit 3;
select t1.episode,  sum(t2.rating) from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id group by t1.id order by avg(t2.rating) desc limit 3;
select min(share),  max(share) from tv_series;
select max(share),  min(share) from tv_series;
select t1.air_date from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id where t2.episode  =  "a love of a lifetime";
select t1.air_date from tv_series as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.title  =  "a love of a lifetime" and t1.episode  =  "1";
select t1.weekly_rank from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id where t2.episode  =  "a love of a lifetime";
select t1.episode from tv_series as t1 join tv_series as t2 on t1.id  =  t2.episode where t2.title  =  "a love of a lifetime" and t1.channel  =  "cartoon";
select t1.series_name from tv_series as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.id  =  1;
select t1.title from tv_series as t1 join tv_series as t2 on t1.id  =  t2.previous_episode where t2.episode  =  "a love of a lifetime";
select t1.episode from tv_series as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.series_name  =  "sky radio";
select t1.episode from tv_series as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.series  =  "sky radio";
select count(*),  directed_by from cartoon where directed_by  =  ( select distinct director from cartoon group by director order by count(*) desc limit 1 );
select directed_by,  count(*) from cartoon group by directed_by;
select t1.production_code,  t1.channel from cartoon as t1 join tv_series as t2 on t1.id  =  t2.id order by t2.air_date desc limit 1;
select production_code,  channel from cartoon order by original_air_date desc limit 1;
select t1.package_choice,  t2.series_name from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.package_definition  =  'high definition tv';
select t1.package_option,  t2.series_name from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.content  =  "high definition tv" and t2.package_option  =  "ppv";
select t1.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.directed_by  =  t1.id where t2.written_by  =  "todd casey";
select t1.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t2.written_by  =  "todd casey";
select country from tv_channel where content!= "written by todd casey";
select country from tv_channel where original_air_date!= "1999-01-01" and original_air_date!= "1999-01-02" and original_air_date!= "1999-01-03" and original_air_date!= "1999-01-04" and original_air_date!= "1999-01-05" and original_air_date!= "1999-01-06" and original_air_date!= "1999-01-07" and original_air_date!= "1999-01-08" and original_air_date!= "1999-01-09" and
select t1.series_name,  t2.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.directed_by  =  t1.id where t1.series_name  =  "the simpsons" intersect select t1.series_name,  t2.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.directed_by  =  t1.id where t1.series_name  =  "family guy" intersect select t1.series_name,  t2.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t
select t1.series_name,  t2.country from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.directors_name  =  "ben jones" intersect select t1.series_name,  t2.country from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.directors_name  =  "michael chang";
select t1.pixel_aspect_ratio_par,  t2.country from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.language!= "english";
select t1.pixel_aspect_ratio_par,  t2.country from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.language!= "english";
select t1.id from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t1.id having count(*)  >  2 order by count(*) desc limit 1;
select t1.id from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.viewers_m  >  2;
select t1.id from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.directed_by where t2.directed_by!= "ben jones";
select channel from tv_channel where original_air_date!= "1999-01-01" and written_by!= "ben jones";
select t2.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.directors_by !=  1;
select t1.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.directors_name!= "ben jones" and t1.package_option!= "ppv";
select count(*) from poker_player;
select count(*) from poker_player;
select t2.earnings from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.earnings desc;
select t2.earnings from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.earnings desc;
select t1.final_table_made,  t2.best_finish from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id;
select t1.final_table_made,  t1.best_finish from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id;
select avg(t1.earnings) from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id;
select avg(t1.earnings) from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id group by t1.people_id;
select t1.money_rank from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t2.earnings desc limit 1;
select t1.money_rank from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t2.earnings desc limit 1;
select max(t1.best_finish) from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id where t2.earnings  <  200000;
select max(t1.final_table_made) from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id where t2.earnings  <  200000;
select t2.name from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id;
select t1.name from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id;
select t2.name from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id where t1.earnings  >  300000;
select t2.name from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id where t1.earnings  >  300000;
select t2.name from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.final_table_made;
select t1.name from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t2.best_finish;
select t1.birth_date from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t2.earnings limit 1;
select t1.birth_date from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t2.earnings desc limit 1;
select t1.money_rank from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t2.height desc limit 1;
select t1.money_rank from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t1.height desc limit 1;
select avg(t1.earnings) from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id where t1.height  >  200;
select avg(t2.earnings) from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id where t1.height  >  200;
select t2.name from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.earnings desc;
select t1.name from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t2.earnings desc;
select nationality,  count(*) from people group by nationality;
select nationality,  count(*) from people group by nationality;
select nationality from people group by nationality order by count(*) desc limit 1;
select nationality from people group by nationality order by count(*) desc limit 1;
select nationality from people group by nationality having count(*)  >=  2;
select nationality from people group by nationality having count(*)  >=  2;
select name,  birth_date from people order by name asc;
select name,  birth_date from people order by name;
select name from people where nationality!= "russia";
select name from people where nationality!= 'russian';
select name from people where people_id not in (select people_id from poker_player);
select name from people where people_id not in (select people_id from poker_player);
select count(distinct nationality) from people;
select count(distinct nationality) from people;
select count(*) from area_code_state;
select contestant_number,  contastant_name from contestants order by contastant_name desc;
select vote_id,  phone_number,  state from votes;
select max(area_code),  min(area_code) from area_code_state;
select t2.created from votes as t1 join area_code_state as t2 on t1.state  =  t2.state where t1.state  =  'ca' order by t1.created desc limit 1;
select contestant_name from contestants except select t1.contestant_name from contestants as t1 join contestants as t2 on t1.contestant_number  =  t2.contestant_number where t2.contestant_name  =  'jessie alloway';
select distinct t1.state,  t2.created from area_code_state as t1 join votes as t2 on t1.state  =  t2.state group by t1.state;
select t1.contestant_number,  t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number group by t1.contestant_number having count(*)  >=  2;
select t1.contestant_number,  t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number group by t1.contestant_number order by count(*) desc limit 1;
select count(*) from votes where state  =  'ny' or state  =  'ca';
select count(*) from contestants where contestant_name not in (select contestant_name from votes);
select t1.area_code from area_code_state as t1 join votes as t2 on t1.area_code  =  t2.state group by t1.area_code order by count(*) desc limit 1;
select t1.contestant_name,  t1.state,  t1.phone_number from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number where t1.contestant_name  =  'tabatha gehling';
select t1.area_code from area_code_state as t1 join votes as t2 on t1.area_code  =  t2.state where t2.contestant_number  =  1 intersect select t1.area_code from area_code_state as t1 join votes as t2 on t1.area_code  =  t2.state where t2.contestant_number  =  2;
select t1.contestant_name from contestants as t1 join area_code_state as t2 on t1.contestant_number  =  t2.contestant_number where t2.state like '%al%';
select name from country where continent  =  "africa" and indepyear  >  1950;
select name from country where indepyear  >  1950;
select count(*) from country where governmentform  = 'republic';
select count(*) from country where governmentform  = 'republic';
select sum(t1.surfacearea) from country as t1 join country as t2 on t1.region  =  t2.region where t1.name  =  'caribbean' and t2.name!= 'caribbean';
select sum(t1.surfacearea) from country as t1 join country as t2 on t1.code  =  t2.code where t1.continent  =  'carribean' group by t1.continent;
select continent from country where name  =  "anguilla";
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  "anguilla";
select t1.name from city as t1 join country as t2 on t1.countrycode  =  t2.code where t1.name  =  "kabul";
select region from country where name  =  "kabul";
select t1.language from countrylanguage as t1 join sqlite_sequence as t2 on t1.language  =  t2.name where t1.countrycode  =  "aruba" group by t1.language order by count(*) desc limit 1;
select t1.language from countrylanguage as t1 join sqlite_sequence as t2 on t1.countrycode  =  t2.name where t2.name  =  "aruba" group by t1.language order by sum(t2.percentage) desc limit 1;
select t1.population,  t2.lifeexpectancy from city as t1 join country as t2 on t1.countrycode  =  t2.code where t1.name  =  "brazil" and t2.name  =  "brazil";
select t1.population,  t2.lifeexpectancy from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t1.name  =  "brazil" and t2.percentage  >  0;
select region,  population from country where name  =  "angola";
select t1.name,  t1.population from country as t1 join city as t2 on t1.code  =  t2.countrycode where t2.name  =  "angola" and t1.name  =  "region" and t2.population  >  0;
select avg(t1.lifeexpectancy) from country as t1 join country as t2 on t1.region  =  t2.region where t1.continent  =  'africa' and t2.continent  =  'central';
select avg(t1.lifeexpectancy) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  "central africa" group by t1.code;
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  'asia' order by t2.percentage limit 1;
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" order by t2.percentage limit 1;
select sum(population),  max(gnp) from country where continent  =  'asia';
select t1.name,  max(t2.gnp) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where continent  =  'asia' group by t1.name;
select avg(t1.lifeexpectancy) from country as t1 join country as t2 on t1.code  =  t2.code where t2.governmentform  = 'republic' and t2.continent  =  'africa';
select avg(t1.lifeexpectancy) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t1.governmentform  = 'republic' and t2.isofficial  =  'africa' group by t1.governmentform;
select sum(t1.surfacearea) from country as t1 join country as t2 on t1.continent  =  t2.continent where t1.name  =  "asia" intersect select sum(t1.surfacearea) from country as t1 join country as t2 on t1.continent  =  t2.continent where t1.name  =  "europe";
select sum(t1.surfacearea) from country as t1 join country as t2 on t1.continent  =  t2.continent where t1.continent  =  'asia' intersect select sum(t1.surfacearea) from country as t1 join country as t2 on t1.continent  =  t2.continent where t1.continent  =  'europe';
select sum(population) from city where district  =  "gelderland";
select sum(population) from city as t1 join country as t2 on t1.district  =  t2.code where t2.name  =  "gelderland" group by t2.name;
select avg(t1.gnp),  sum(t1.gnp) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t1.governmentform  =  'us territory' group by t1.governmentform;
select avg(t1.gnp),  sum(t1.gnp) from country as t1 join country as t2 on t1.code  =  t2.code where t1.continent  =  'americas' and t2.continent  =  'americas' group by t1.continent;
select count(*) from countrylanguage;
select count(distinct language) from countrylanguage;
select count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where continent  =  'africa' and governmentform  = 'republic';
select count(distinct governmentform) from country where continent  =  'africa';
select sum(t1.percentage) from countrylanguage as t1 join sqlite_sequence as t2 on t1.isofficial  =  t2.name where t1.countrycode  =  "aruba";
select count(*) from countrylanguage where countrycode  =  "aruba";
select count(*) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t2.name  =  "afghanistan" and t1.isofficial  =  "yes";
select count(*) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t2.name  =  "afghanistan" and t1.isofficial  =  "yes";
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.name order by count(*) desc limit 1;
select t1.name from country as t1 join sqlite_sequence as t2 on t1.code  =  t2.name group by t1.code order by sum(t2.seq) desc limit 1;
select t1.continent,  count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.continent order by sum(t2.percentage) desc limit 1;
select t1.continent,  count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.continent order by sum(t2.count) desc limit 1;
select count(*) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t1.language  =  "english" intersect select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t1.language  =  "dutch";
select count(*) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t1.language  =  "english" intersect select count(*) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t1.language  =  "dutch";
select name from country where language  =  "english" intersect select name from country where language  =  "french";
select name from countrylanguage where language  =  "english" intersect select name from countrylanguage where language  =  "french";
select name from countrylanguage where language  =  "english" intersect select name from countrylanguage where language  =  "french";
select name from country where language  =  "english" intersect select name from country where language  =  "french";
select count(distinct continent) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t1.language  =  "chinese" and t2.isofficial  =  "yes";
select count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "chinese" and t1.name  =  "china";
select region from country where localname  =  "english" intersect select region from country where localname  =  "dutch";
select region from country where localname like "%dutch%" or localname like "%english%";
select countrycode from countrylanguage where language  =  "english" intersect select countrycode from countrylanguage where language  =  "dutch";
select countrycode from countrylanguage where language  =  "english" intersect select countrycode from countrylanguage where language  =  "dutch";
select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t1.continent  =  'asia' group by t2.language order by count(*) desc limit 1;
select t1.language from country as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.isofficial  =  'asian' group by t1.language order by count(*) desc limit 1;
select distinct t1.language from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t2.governmentform  = 'republic' group by t1.language having count(*)  =  1;
select distinct t1.language from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t2.governmentform  = 'republic' group by t1.language;
select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.language  =  "english" order by t2.percentage desc limit 1;
select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.language  =  "english" order by t2.percentage desc limit 1;
select t1.name,  t1.population,  t1.lifeexpectancy from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where continent  =  'asia' order by surfacearea desc limit 1;
select t1.name,  t1.population,  t1.lifeexpectancy from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where continent  =  'asia' order by t2.percentage desc limit 1;
select avg(t1.lifeexpectancy) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial!= "english" group by t1.code;
select avg(t1.lifeexpectancy) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial!= "english";
select sum(t1.population) from city as t1 join country as t2 on t1.countrycode  =  t2.code where t2.continent!= "america" and t2.continent!= "europe" and t2.continent!= "asia" and t2.continent!= "africa" and t2.continent!= "oceania";
select count(*) from country where continent!= 'america' and localname!= 'english' group by continent;
select t1.language from country as t0 join countrylanguage as t1 on t0.countrycode  =  t1.countrycode where t0.headofstate  =  "beatrix" and t1.language  =  "dutch";
select t1.name,  t2.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t1.headofstate  =  "beatrix" and t2.language  =  "english";
select sum(t1.language) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t1.founded  <  1930;
select sum(t1.count) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t1.headofstate  <  1930 group by t1.headofstate;
select t1.name from country as t1 join country as t2 on t1.code  =  t2.continent  =  t2.continent where t2.continent  =  'europe' and t1.surfacearea  >  t2.surfacearea;
select t1.name from country as t1 join country as t2 on t1.code  =  t2.continent  =  "europe" where t2.surfacearea  >  (select max(t3.surfacearea) from country as t3 join country as t4 on t3.code  =  t4.code  =  "europe" group by t4.code);
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  <  0.5 order by t1.population limit 0, 1;
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  'african' except select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  'asia' group by t1.name having sum(t2.percentage)  <  sum(select t2.percentage from countrylanguage as t2 join country as t1 on t1.code  =  t2.countrycode where t1.code  =  'asia');
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  >  (select min(t3.percentage) from country as t3 join countrylanguage as t4 on t3.code  =  t4.countrycode where t4.name  =  'africa') order by t1.name;
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  >  (select max(t2.percentage) from countrylanguage as t3 join country as t4 on t3.countrycode  =  t4.code where t4.continent  =  'africa' and t4.population  >  t2.percentage);
select countrycode from country where language!= "english";
select countrycode from country where language!= "english";
select t1.countrycode from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial !=  "english";
select t1.countrycode from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial!= "english" group by t1.code having count(*)  >  0;
select countrycode from country where name!= "english" and governmentform!= "republic";
select countrycode from country where governmentform!= "republic" union select countrycode from country where localname!= "english" and governmentform!= "republic";
select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.isofficial = "english" except select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.isofficial  =  "english";
select name from city where continent  =  'europe' and language!= 'english';
select distinct t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.language  =  "chinese" and t2.isofficial  =  "official" and t2.percentage  >  50;
select distinct t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.language  =  "chinese" and t1.continent  =  "asia";
select t1.name,  t2.indepyear,  t3.surfacearea from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join country as t3 on t1.code  =  t3.code where t3.population  =  ( select min(population) from country );
select t1.name,  t1.yearofindependence,  t1.surfacearea from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  =  ( select min(t3.percentage) from countrylanguage as t3 join country as t4 on t3.countrycode  =  t4.code where t4.population  =  ( select min(t5.population) from country as t5 join countrylanguage as t6 on t5.code  =  t6.countrycode where t5.population  =  ( select max(t7.population) from country as t7 join countrylanguage as t8 on
select t1.name,  t1.population,  t2.headofstate from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t1.area  =  ( select max(t2.area) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.code order by t1.area desc limit 1);
select t1.name,  t1.population,  t1.headofstate from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode order by t1.area desc limit 1;
select t1.name,  count(*) from country as t1 join sqlite_sequence as t2 on t1.code  =  t2.name group by t1.code having count(*)  >=  3;
select t1.name,  count(*) from country as t1 join sqlite_sequence as t2 on t1.code  =  t2.name group by t1.code having count(*)  >  2;
select district,  count(*) from city where population  >  (select avg(population) from city);
select district,  count(*) from city where population  >  (select avg(population) from city);
select t1.name,  sum(t2.population) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t1.lifeexpectancy  >  72 group by t1.lifeexpectancy having avg(t2.population)  >  72;
select t1.governmentform,  sum(t2.population) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t1.lifeexpectancy  >  72 group by t1.governmentform;
select avg(t1.lifeexpectancy),  sum(t1.population) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  <  72 group by t1.continent;
select continent,  sum(population),  avg(lifeexpectancy) from country where continent !=  'asia' group by continent having avg(lifeexpectancy)  <  72;
select name,  area from country order by area desc limit 5;
select name,  surfacearea from country order by surfacearea desc limit 5;
select name from country order by population desc limit 3;
select name from country order by population desc limit 3;
select name from country order by population desc limit 3;
select name from country order by population asc limit 3;
select count(*) from country where continent  =  'asia';
select count(*) from country where continent  =  'asia';
select name from country where continent  =  'europe' and population  =  80000;
select name from country where continent  =  'europe' and population  =  80000;
select sum(t1.population),  avg(t1.surfacearea) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t1.continent  =  'north america' and t2.percentage  >  0.3 group by t1.continent;
select sum(t1.population),  avg(t1.surfacearea) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t1.continent  =  'north america' and t2.percentage  >  0.5 group by t1.continent;
select id from city where population between 160000 and 900000;
select name from city where population between 160000 and 900000;
select t1.language from country as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode group by t1.language order by count(*) desc limit 1;
select t1.language from country as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode group by t1.language order by count(*) desc limit 1;
select t1.name,  count(*) / 100 as percentage from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code group by t1.countrycode order by sum(t1.percentage) desc limit 1;
select t1.name,  max(t2.percentage),  t2.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.code order by sum(t2.percentage) desc;
select sum(t1.population) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "spanish" group by t2.language order by sum(t2.percentage) desc limit 1;
select count(*) from countrylanguage where language  =  "spanish" and percentage  >  50;
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "es" group by t2.language order by sum(t2.percentage) desc limit 1;
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "spanish" group by t1.code having count(*)  >=  50;
select count(*) from conductor;
select count(*) from conductor;
select name from conductor order by age asc;
select name from conductor order by age;
select name from conductor where nationality!= "usa";
select name from conductor where nationality!= "usa";
select record_company from orchestra order by year_of_founded desc;
select record_company from orchestra order by year_of_founded desc;
select avg(t1.attendance) from show as t1 join performance as t2 on t1.performance_id  =  t2.performance_id;
select avg(t1.attendance) from show as t1 join performance as t2 on t1.performance_id  =  t2.performance_id;
select max(share),  min(share) from performance where type!= "live final";
select max(share),  min(share) from performance where type!= "live final";
select count(distinct nationality) from conductor;
select count(distinct nationality) from conductor;
select name from conductor order by year_of_work desc;
select name from conductor order by year_of_work desc;
select name from conductor order by year_of_work desc limit 1;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name order by sum(t2.year_of_work) desc limit 1;
select t1.name,  t2.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id;
select t1.name,  t2.orchestra from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.conductor_id having count(*)  >  1;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.conductor_id having count(*)  >  1;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.conductor_id order by count(*) desc limit 1;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name order by count(*) desc limit 1;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id where t2.year_of_founded  >  2008;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id where t2.year_of_founded  >  2008;
select distinct record_company,  count(*) from orchestra group by record_company;
select record_company,  count(*) from orchestra group by record_company;
select record_format from orchestra order by count desc;
select major_record_format from orchestra group by major_record_format order by count(*) desc;
select record_company from orchestra group by record_company order by count(*) desc limit 1;
select record_company from orchestra group by record_company order by count(*) desc limit 1;
select name from orchestra where orchestra_id not in ( select orchestra_id from performance );
select orchestra from orchestra where orchestra_id not in ( select orchestra_id from performance );
select t1.record_company from orchestra as t1 join orchestra as t2 on t1.orchestra_id  =  t2.orchestra_id where t2.year_of_founded  <  2003 intersect select t1.record_company from orchestra as t1 join orchestra as t2 on t1.orchestra_id  =  t2.orchestra_id where t2.year_of_founded  >  2003;
select record_company from orchestra where year_of_founded  <  2003 intersect select record_company from orchestra where year_of_founded  >  2003;
select count(*) from orchestra where record_company  =  "cd" intersect select count(*) from orchestra where record_company  =  "dvd";
select count(*) from orchestra where record_company  =  "cd" or record_company  =  "dvd";
select t1.year_of_founded from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id group by t1.year_of_founded having count(*)  >  1;
select year_of_founded from orchestra where record_company  =  "major" group by record_company having count(*)  >  1;
select count(*) from highschooler;
select count(*) from highschooler;
select name,  grade from highschooler;
select name,  grade from highschooler;
select t2.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id;
select t1.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id;
select t2.grade from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id where t1.name  =  "kyle";
select t2.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id where t1.name  =  "kyle";
select name from highschooler where grade  =  10;
select name from highschooler where grade  =  10;
select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id where t1.name  =  "kyle";
select t1.id from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id where t2.name  =  "kyle";
select count(*) from highschooler where grade  =  9 or grade  =  10;
select count(*) from highschooler where grade  =  9 or grade  =  10;
select grade,  count(*) from highschooler group by grade;
select t1.grade,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.grade;
select t1.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.grade order by count(*) desc limit 1;
select t1.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.grade order by count(*) desc limit 1;
select t2.grade from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.grade having count(*)  >=  4;
select t1.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.grade having count(*)  >=  4;
select t1.name,  count(*) from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.name;
select count(*),  t1.name from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id group by t1.friend_id;
select t1.name,  count(*) from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.name;
select t1.name,  count(*) from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.id;
select t2.name from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id group by t1.friend_id order by count(*) desc limit 1;
select t2.name from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id group by t1.friend_id order by count(*) desc limit 1;
select t2.name from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id group by t1.friend_id having count(*)  >=  3;
select t2.name from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id group by t1.friend_id having count(*)  >=  3;
select t2.name from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t1.name  =  "kyle";
select t2.name from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t1.name  =  "kyle";
select count(*) from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t2.name  =  "kyle";
select count(*) from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t2.name  =  "kyle";
select student_id from highschooler where id not in ( select student_id from friend );
select t1.id from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id where t1.id not in ( select student_id from friend );
select name from highschooler where id not in ( select student_id from friend );
select name from highschooler where id not in ( select student_id from friend );
select t1.id,  t2.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id where t1.name in ( select t3.name from friend as t3 join likes as t4 on t3.friend_id  =  t4.id ) group by t1.name having count(*)  >=  2;
select t1.id from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t2.name  =  "joe" intersect select t1.friend_id from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t2.name  =  "joe" and t2.grade  =  "a";
select t1.name,  t2.name from friend as t1 join likes as t2 on t1.friend_id  =  t2.liked_id where t1.friend_id!= "0" and t2.liked_id!= "0";
select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id where t1.name in ( select t3.name from friend as t2 join highschooler as t1 on t2.friend_id  =  t1.id ) where t2.liked_id  =  t1.id;
select t1.name,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.id;
select t1.name,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.id;
select t1.name,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.name;
select t1.name,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.liked_id group by t1.name;
select t2.name from likes as t1 join highschooler as t2 on t1.liked_id  =  t2.id group by t1.liked_id order by count(*) desc limit 1;
select t2.name from likes as t1 join highschooler as t2 on t1.liked_id  =  t2.id group by t1.liked_id order by count(*) desc limit 1;
select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.name having count(*)  >=  2;
select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.id having count(*)  >=  2;
select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id where t1.grade  >  5 group by t1.name having count(*)  >=  2;
select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id where t1.grade  >  5 group by t1.name having count(*)  >=  2;
select count(*) from likes as t1 join highschooler as t2 on t1.liked_id  =  t2.id where t2.name  =  "kyle";
select count(*) from likes as t1 join highschooler as t2 on t1.liked_id  =  t2.id where t2.name  =  "kyle";
select avg(t2.grade) from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.id;
select avg(t2.grade) from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id;
select min(t1.grade) from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id where t1.grade  =  "f";
select min(t1.grade) from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id where t1.grade  =  "f" and t2.friend_id  =  "f";
select distinct t1.state,  t2.home_phone from owners as t1 join professionals as t2 on t1.owner_id  =  t2.professional_id where t1.home_phone  =  t2.home_phone;
select t1.state,  t2.state from owners as t1 join professionals as t2 on t1.owner_id  =  t2.professional_id;
select avg(t1.date_of_treatment) from treatments as t1 join dogs as t2 on t1.dog_id  =  t2.dog_id group by t1.dog_id;
select avg(t1.age) from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id group by t1.dog_id;
select t1.professional_id,  t1.last_name,  t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where t1.home_phone  =  "indiana" group by t1.home_phone having count(*)  >  2;
select t1.professional_id,  t1.last_name,  t1.home_phone from professionals as t1 join owners as t2 on t1.professional_id  =  t2.professional_id where t2.home_phone  =  "indiana" or t1.treatment_count  >  2;
select t1.name from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id where t2.cost_of_treatment  >  1000;
select t1.name from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where t2.cost_of_treatment  <  1000;
select distinct t1.first_name from professionals as t1 join owners as t2 on t1.professional_id  =  t2.owner_id where t2.first_name!= "dog";
select distinct t1.first_name from professionals as t1 join owners as t2 on t1.professional_id  =  t2.owner_id where t2.first_name is not null;
select t1.professional_id,  t2.role_code,  t1.email_address from professionals as t1 join owners as t2 on t1.professional_id  =  t2.professional_id where t1.role_code!= "treatment" group by t1.role_code;
select t1.professional_id,  t1.role_code,  t1.email_address from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where t2.treatment_type_code!= "treatment" group by t1.professional_id;
select owner_id,  first_name,  last_name from owners group by owner_id order by count(*) desc limit 1;
select owner_id,  first_name,  last_name from owners group by owner_id order by count(*) desc limit 1;
select t1.professional_id,  t1.role,  t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having count(*)  >=  2;
select t1.professional_id,  t1.role_code,  t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having count(*)  >=  2;
select t1.breed_name from breeds as t1 join dogs as t2 on t1.breed_code  =  t2.breed_code group by t1.breed_code order by count(*) desc limit 1;
select t1.breed_name from breeds as t1 join dogs as t2 on t1.breed_code  =  t2.breed_code group by t1.breed_name order by count(*) desc limit 1;
select t1.owner_id,  t1.last_name from owners as t1 join treatments as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t2.cost_of_treatment) desc limit 1;
select t1.owner_id,  t1.last_name from owners as t1 join treatments as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t2.cost_of_treatment) desc limit 1;
select t2.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code order by sum(t1.cost_of_treatment) desc limit 1;
select t2.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code order by t1.cost_of_treatment limit 1;
select owner_id,  zip_code from owners order by sum(t1.charge_amount) desc limit 1;
select owner_id,  sum(t1.charge_amount),  sum(t2.charge_amount) from charges as t1 join owners as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t1.charge_amount) desc limit 1;
select t1.professional_id,  t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having count(*)  >=  2;
select t1.professional_id,  t1.home_phone from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having count(*)  >=  2;
select t1.first_name,  t1.last_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where t2.cost_of_treatment  <  ( select avg(t2.cost_of_treatment) from treatments as t1 join professionals as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id order by sum(t2.cost_of_treatment) desc limit 1);
select t1.first_name,  t1.last_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where t2.cost_of_treatment  <  ( select avg(t2.cost_of_treatment) from treatments as t3 join professionals as t4 on t3.professional_id  =  t4.professional_id );
select t1.date_of_treatment,  t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id  =  t2.professional_id;
select t1.date_of_treatment,  t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id  =  t2.professional_id;
select t1.cost_of_treatment,  t2.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code;
select t1.cost_of_treatment,  t2.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code;
select t1.first_name,  t1.last_name,  t2.size_code from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;
select t1.first_name,  t1.last_name,  t2.size_code from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;
select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;
select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;
select t1.name,  date_of_treatment from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id group by t1.breed_code order by count(*) desc limit 1;
select t1.name,  t2.date_of_treatment from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id where t1.breed_code  =  "rare" group by t1.breed_code order by count(*) desc limit 1;
select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id where t1.home_state  =  "virginia";
select t1.first_name,  count(*) from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id where t1.home_state  =  'virginia' group by t1.home_state;
select t1.date_arrived,  t1.date_departed from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id where t2.treatment_type_code  =  "treatment" group by t1.date_arrived,  t1.date_departed;
select t1.date_of_arrival,  t1.date_of_departure from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id where t2.treatment_type_code  =  "treatment" group by t1.date_of_arrival,  t1.date_of_departure;
select t1.last_name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id where t2.age  =  (select min(t3.age) from dogs as t3 join owners as t4 on t3.owner_id  =  t4.owner_id where t4.dog_id  =  t2.dog_id);
select t1.last_name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id where t2.age  =  (select min(t3.age) from dogs as t3 join owners as t4 on t3.owner_id  =  t4.owner_id);
select email_address from professionals where home_state  =  "hawaii" intersect select email_address from professionals where home_state  =  "wisconsin";
select email_address from professionals where home_phone  =  "aloha" intersect select email_address from professionals where home_phone  =  "madison";
select date_arrived,  date_departed from dogs;
select date_of_birth,  date_departed from dogs;
select count(*) from treatments as t1 join dogs as t2 on t1.dog_id  =  t2.dog_id group by t1.dog_id having count(*)  >  0;
select count(*) from treatments as t1 join dogs as t2 on t1.dog_id  =  t2.dog_id where t1.treatment_type_code  =  "treatment" and t2.treatment_type_code  =  "treatment";
select count(*) from treatments as t1 join professionals as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having count(*)  =  1;
select count(*) from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id;
select role,  street,  city,  state from professionals where role_code like '%west%';
select t1.role_code,  t1.street,  t1.city,  t1.state from professionals as t1 join owners as t2 on t1.professional_id  =  t2.owner_id where t2.home_city  =  'west';
select t1.first_name,  t1.last_name,  t1.email_address from owners as t1 join professionals as t2 on t1.professional_id  =  t2.professional_id where t2.role_code  =  'owner' and t2.first_name like '%north%';
select t1.first_name,  t1.last_name,  t1.email_address from owners as t1 join professionals as t2 on t1.owner_id  =  t2.owner_id where t2.role_code  =  'professional' and t2.professional_id in ( select professional_id from professionals where role_code  =  'professional' and home_phone like '%north%' );
select count(*) from dogs where age  <  (select avg(age) from dogs);
select count(*) from dogs where age  <  (select avg(age) from dogs);
select t1.cost_of_treatment from treatments as t1 join treatments as t2 on t1.treatment_id  =  t2.treatment_id order by t2.date_of_treatment desc limit 1;
select t1.cost_of_treatment from treatments as t1 join treatments as t2 on t1.treatment_id  =  t2.treatment_id order by t2.date_of_treatment desc limit 1;
select count(*) from dogs where dog_id not in ( select dog_id from treatments );
select count(*) from dogs where dog_id not in ( select dog_id from treatments );
select count(*) from owners where owner_id not in ( select owner_id from dogs );
select count(*) from owners where owner_id not in ( select owner_id from dogs );
select count(*) from professionals where professional_id not in ( select professional_id from treatments );
select count(*) from professionals where professional_id not in ( select professional_id from treatments );
select t2.name,  t1.age,  t1.weight from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where t1.abandoned_yn  =  '1' group by t1.abandoned_yn;
select t2.name,  t1.age,  t1.weight from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where t1.abandoned_yn  =  '1' group by t1.abandoned_yn;
select avg(t1.date_of_birth) from dogs;
select avg(t1.date_of_birth) from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id;
select t1.age from dogs as t1 join breeds as t2 on t1.breed_code  =  t2.breed_code where t1.owner_id  =  ( select owner_id from owners where first_name  =  "joe" and last_name  =  "smith" ) limit 1;
select t1.age from dogs as t1 join breeds as t2 on t1.breed_code  =  t2.breed_code order by t1.age desc limit 1;
select charge_type,  charge_amount from charges;
select charge_type,  charge_amount from charges;
select charge_type from charges group by charge_type order by sum(charge_amount) desc limit 1;
select charge_amount from charges as t1 join charges as t2 on t1.charge_type  =  t2.charge_type where t1.charge_amount  =  ( select max(charge_amount) from charges );
select professional_id,  home_phone,  cell_number from professionals;
select email_address,  cell_number,  home_phone from professionals;
select distinct t1.breed_type,  t2.size_type from breeds as t1 join sizes as t2 on t1.breed_code  =  t2.size_code;
select distinct t1.breed_type,  t2.size_type from breeds as t1 join sizes as t2 on t1.breed_code  =  t2.size_code;
select t1.first_name,  t2.treatment_description from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id;
select t1.first_name,  t2.treatment_description from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id;
select count(*) from singer;
select count(*) from singer;
select name from singer order by net_worth_millions asc;
select name from singer order by net_worth_millions asc;
select birth_year,  citizenship from singer;
select birth_year,  citizenship from singer;
select name from singer where citizenship!= "france";
select name from singer where citizenship!= 'french';
select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t1.birth_year  =  1948 or t1.birth_year  =  1949;
select name from singer where birth_year  =  1948 or birth_year  =  1949;
select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id order by t2.net_worth_millions desc limit 1;
select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id order by t2.sales desc limit 1;
select citizenship,  count(*) from singer group by citizenship;
select citizenship,  count(*) from singer where citizenship  =  'usa';
select citizenship from singer group by citizenship order by count(*) desc limit 1;
select t1.citizenship from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.citizenship order by count(*) desc limit 1;
select citizenship,  max(net_worth_millions) from singer group by citizenship;
select max(t2.net_worth_millions),  citizenship from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where citizenship  =  'american';
select t1.title,  t2.name from song as t1 join singer as t2 on t1.singer_id  =  t2.singer_id;
select t2.title,  t1.name from song as t1 join singer as t2 on t1.singer_id  =  t2.singer_id;
select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t2.sales  >  300000;
select distinct t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t2.sales  >  300000;
select t2.name from song as t1 join singer as t2 on t1.singer_id  =  t2.singer_id group by t1.singer_id having count(*)  >  1;
select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.singer_id having count(*)  >  1;
select t1.name,  sum(t2.sales) from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.singer_id;
select t1.name,  sum(t2.sales) from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.name;
select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t1.name not in (select t3.name from song as t3 join singer as t2 on t3.singer_id  =  t2.singer_id);
select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t1.name not in (select t3.name from song as t3);
select t1.citizenship from singer as t1 join singer as t2 on t1.singer_id  =  t2.singer_id where t1.birth_year  <  1955 intersect select t1.citizenship from singer as t1 join singer as t2 on t1.singer_id  =  t2.singer_id where t1.birth_year  >  1955;
select citizenship from singer where birth_year  <  1945 intersect select citizenship from singer where birth_year  >  1955;
select count(*) from other_available_features;
select t1.feature_type_name from ref_feature_types as t1 join other_available_features as t2 on t1.feature_type_code  =  t2.feature_type_code where t2.feature_name  =  "aircon";
select t2.property_type_description from ref_property_types as t1 join properties as t2 on t1.property_type_code  =  t2.property_type_code where t1.property_type_code  =  1;
select t1.property_name from properties as t1 join other_property_features as t2 on t1.property_id  =  t2.property_id where t2.feature_description  =  "house" intersect select t1.property_name from properties as t1 join other_property_features as t2 on t1.property_id  =  t2.property_id where t2.feature_description  =  "apartment" intersect;
