select count(*) from concert where year = 2015 and capacity > ;
select count(*) from singer;
SELECT name, country, age FROM singer ORDER BY age DESC;
SELECT s.name, s.country, s.song_name, s.song_release_year, s.age, s.is_male FROM singer s ORDER BY s.age DESC;
select avg(age), min(age), max(age) from singer_in_concert where country = 'france';
select avg(age), min(age), max(age) from singer_in_concert where country = 'France';
select * from singer_in_concert where singer_id = 1 order by age desc limit 1;
select name, year from singer where age < 25 order by year asc;
select country, count(*) from singer_in_concert group by country having count(*) > 1;
select country, count(*) from singer group by country having count(*) > 20;
select country, count(*) as singersfrom singer_in_concertgroup by countryorder by singers desclimit 10select country, count(*) as singersfrom singer_in_concertgroup by countryorder by singers desclimit 10select country, count(*) as singersfrom singer_in_concertgroup by countryorder by singers desclimit 10select country, count(*) as singersfrom singer_in_concertgroup by countryorder by singers desclimit 10select country, count(*) as singersfrom singer_in_concertgroup by countryorder by singers desclimit 10select country, count(*) as singersfrom singer_in_concert;
select count(singer.singer_id) as singers, country from singer, singer_in_concert where singer_in_concert.concert_id = 1 and singer.singer_id = singer_in_concert.singer_id group by country order by singers desc;
select name from singer where age > 30 order by name asc;
select song_name from singer_in_concert where singer_id > (select avg(age) from singer);
SELECT stadium.name, stadium.capacity, stadium.location, singer.name, singer.country, singer.song_name, singer.song_release_year, singer.is_male, singer_in_concert.singer_id, singer_in_concert.concert_id, singer_in_concert.stadium_id, singer_in_concert.concert_id, singer_in_concert.singer_id, singer_in_concert.concert_id, singer_in_concert.stadium_id, singer_in_concert.concert_id, singer_in_concert.singer_id, singer_in_concert.concert_id, singer_in_concert.stadium_id, singer_;
select * from stadium where capacity >= 5000 and capacity <= 10000;
select stadium.capacity, stadium.average from stadium where stadium.name = 'Stadium A' and stadium.capacity > stadium.average;
select stadium.capacity, stadium.highest, stadium.lowest, stadium.average from stadium where stadium.capacity > 10000 and stadium.capacity < 20000;
select stadium.name, stadium.capacity from stadium inner join singer_in_concert on singer_in_concert.stadium_id = stadium.stadium_id where singer_in_concert.concert_id = 1 order by stadium.capacity desc limit 1;
select stadium.name, stadium.capacity from stadium inner join singer_in_concert on singer_in_concert.stadium_id = stadium.stadium_id where singer_in_concert.concert_id = 1 order by stadium.capacity desc limit 1;
select count(*) from concert where year = 2014 or year =;
select count(*) from concert where year = 2014 or year = 2015;
SELECT stadium.name, COUNT(concert.concert_id) AS concerts FROM stadium, concert WHERE stadium.stadium_id = concert.stadium_id GROUP BY stadium.name;
select count(*) from stadium, singer_in_concert where stadium.stadium_id = singer_in_concert.stadium_id and singer_in_concert.singer_id = 1;
SELECT stadium.name, stadium.capacity, COUNT(concert.concert_id) AS num_concertsFROM stadiumINNER JOIN concertON stadium.stadium_id = concert.stadium_idWHERE year(concert.concert_date) = 2014GROUP BY stadium.name, stadium.capacityORDER BY stadium.capacity DESCLIMIT 10;
select stadium.name, stadium.capacity from stadium where year = 2013 order by stadium.capacity desc limit 1;
select year, count(*) from concert group by year order by count(*) desc limit 1;
select year from concert where year = (select max(year) from concert);
SELECT stadium.name FROM stadiumWHERE NOT EXISTS (SELECT * FROM singer_in_concert WHERE singer_in_concert.stadium_id = stadium.stadium_id)SELECT stadium.name FROM stadiumWHERE NOT EXISTS (SELECT * FROM singer_in_concert WHERE singer_in_concert.concert_id = stadium.concert_id)SELECT stadium.name FROM stadiumWHERE NOT EXISTS (SELECT * FROM singer_in_concert WHERE singer_in_concert.concert_id = stadium.concert_id)SELECT stadium.name FROM stadiumWHERE NOT EXISTS (SELECT * FROM singer_in_concert WHERE singer_in_concert.concert_;
SELECT stadium.name FROM stadium WHERE NOT EXISTS (SELECT * FROM singer_in_concert WHERE singer_in_concert.stadium_id = stadium.stadium_id);
SELECT * FROM countries WHERE age > 40 AND age < 30;
SELECT * FROM stadium WHERE EXISTS (SELECT * FROM concert WHERE concert.year = 2014) AND EXISTS (SELECT * FROM singer WHERE singer.name = 'Foo Bar')query:show names for all stadiums having a concert in year 2014;
SELECT * FROM stadium WHERE year = 2014 AND NOT EXISTS (SELECT * FROM concert WHERE concert.year = 2014 AND stadium.stadium_id = concert.stadium_id);
SELECT concert.name, singer.name, COUNT(singer.singer_id) AS singers FROM concert INNER JOIN singer ON concert.singer_id = singer.singer_id GROUP BY concert.name, singer.name;
select name, theme, count(*) from concert group by name, theme order by name, theme;
select name, count(*) from singer group by nameselect name, count(*) from singer group by name having count(*) > 1select name, count(*) from singer group by name having count(*) > 2select name, count(*) from singer group by name having count(*) > 3select name, count(*) from singer group by name having count(*) > 4select name, count(*) from singer group by name having count(*) > 5select name, count(*) from singer group by name having count(*) > 6select name, count(*) from singer group by name having count(*) > 7select name, count(*) from singer group by name having count(*) >;
select name, count(*) from singer_in_concert group by name having count(*) > 1;
SELECT name FROM singer WHERE year = 2014;
SELECT name FROM singer WHERE year = 2014;
SELECT name, country FROM singer WHERE name LIKE '%hey%';
SELECT s.name, s.country, s.song_name, s.song_release_year, s.age, s.is_maleFROM singer sWHERE s.song_name LIKE '%hey%';
SELECT stadium.name, stadium.locationFROM stadiumWHERE year = 2014 OR year = 2015AND concert.year = 2014 OR concert.year = 2015AND singer_in_concert.concert_id = concert.concert_idORDER BY stadium.name ASC, stadium.location ASCLIMIT 10;
SELECT * FROM stadium WHERE year = 2014 AND year = 2015;
SELECT COUNT(s.stadium_id) FROM stadium s WHERE s.capacity = (SELECT MAX(c.capacity) FROM stadium c WHERE c.stadium_id = s.stadium_id)The result is 1.The query is:SELECT COUNT(s.stadium_id) FROM stadium s WHERE s.capacity = (SELECT MAX(c.capacity) FROM stadium c WHERE c.stadium_id = s.stadium_id)The result is 1.The query is:SELECT COUNT(s.stadium_id) FROM stadium s WHERE s.capacity = (SELECT MAX(c.capacity) FROM stadium c WHERE;
select count(*) from stadium where capacity > (select max(capacity) from stadium);
select count(*) from pets where weight > 10;
select count(*) from pets where weight > 10;
select weight from pets where pet_age = 1 order by weight desc limit 1;
select weight from pets where pet_age = 1 and pettype = 'dog';
select max(weight),pet_type from has_pet group by pet_type order by weight desc;
select max(weight), max(pet_type) from pets group by pet_type;
select count(*) from pets where pet_age > 20 and stuid in (select stuid from has_pet where pet_age > 20)foreign_keys:foreign_keys = [student.stuid,pets.petid]primary_keys = [has_pet.stuid = student.stuid,has_pet.petid = pets.petid];
select count(*) from has_pet where petid in (select petid from pets where pet_age > 20);
select count(*) from has_pet where stuid =? and petid =? and sex =?;
select count(*) from has_pet where has_pet.stuid = student.stuid and has_pet.petid = pets.petid and has_pet.sex = 'female';
select count(*) from pets where pettype <> 'dog';
select count(*) from pets where pettype = 'dog';
select * from student where has_pet.petid in (select petid from pets where pettype = 'cat' or pettype = 'dog');
select st.lname, st.fname, st.age, st.sex, st.major, st.advisor, st.city_code from student st inner join pets p on st.stuid = p.petid where p.petid in (select petid from has_pet) order by st.lname, st.fname, st.age, st.sex, st.major, st.advisor, st.city_code;
select * from student where has_pet.petid in (select petid from pets where pettype = 'cat') and has_pet.petid in (select petid from pets where pettype = 'dog');
select st.lname, st.fname, st.age, st.sex, st.major, st.advisor, st.city_code from student st inner join pets p on st.petid = p.petid where p.petid in (select petid from has_pet) and p.petid = 1 order by st.lname, st.fname, st.age, st.sex, st.major, st.advisor, st.city_code;
select st.lname, st.fname, st.age, st.sex, st.major, st.advisor, st.city_codefrom student stwhere st.petid is nulland st.major = 'CS'and st.advisor = 'John Doe'and st.city_code = 'CA'and st.stuid = '123456789';
select st.lname, st.fname, st.age, st.sex, st.major, st.advisor, st.city_code from student st where st.petid is null and st.lname <> 'cat' and st.fname <> 'cat' and st.age > 18 and st.sex <>'male' and st.major <> 'computer science' and st.advisor <> 'joe' and st.city_code <> 'los angeles';
select stuid from student where not exists (select petid from pets where petid = student.stuid);
select stuid from has_pet where petid not in (select petid from pets where pettype = 'cat');
select st.lname, st.fname, st.age, st.sex, st.major, st.advisor, st.city_code from student st where st.has_pet.petid = 1 and st.has_pet.petid = 2 and st.has_pet.petid = 3 and st.has_pet.petid = 4 and st.has_pet.petid = 5 and st.has_pet.petid = 6 and st.has_pet.petid = 7 and st.has_pet.petid = 8 and st.has_pet.petid = 9 and st.has_pet.;
select st.lname, st.fname, st.age, st.sex, st.major, st.advisor, st.city_code from student st where st.petid in (select petid from pets where pettype = 'dog') and st.petid not in (select petid from pets where pettype = 'cat');
select pet.pettype, pet.pet_age, pet.weight from pets where pet.petid = 1 order by pet.petid desc limit 1;
select pet.pettype, sum(pet.weight) from pets, has_pet where pets.petid = has_pet.petid group by pettype order by pettype desc limit 1;
select pet.petid, pet.pet_age, pet.weight from pets pet where pet.pet_age > 1;
select pet.petid, pet.pet_age, pet.weight from pets pet where pet.pet_age > 1 and pet.weight > 10;
select avg(age) as "Average Age", max(age) as "Max Age" from pets group by pettype;
select avg(age) as avg_age, max(age) as max_age from pets group by pet_type;
select avg(weight) from pets where pettype = 'dog';
select avg(weight) from pets where pettype = 'dog';
select st.lname, st.fname, st.age, st.sex, st.major, st.advisor, st.city_codefrom student stwhere st.has_pet.petid = 1and st.has_pet.petid = 2order by st.age desclimit 1;
select st.lname, st.fname, st.age, st.sex, st.major, st.advisor, st.city_code from student st inner join pets p on st.stuid = p.petid where p.petid is not null order by st.lname, st.fname, st.age, st.sex, st.major, st.advisor, st.city_code;
select * from pets where stuid =? and petid =?;
SELECT stuid, petid FROM has_pet WHERE stuid ='smith' AND petid = '1';
select count(*) from has_pet where stuid in (select stuid from student) and petid in (select petid from pets);
select stuid, count(*) as cnt from has_pet group by stuid having cnt > 1;
select st.lname, st.fname, st.age, st.sex, st.major, st.advisor, st.city_codefrom student stwhere st.petid in (select petid from pets)group by st.lname, st.fname, st.age, st.sex, st.major, st.advisor, st.city_codehaving count(*) > 1;
select st.lname, st.fname, st.age, st.sex, st.major, st.advisor, st.city_code from student st inner join pets p on st.petid = p.petid where p.petid in (select petid from has_pet) group by st.lname, st.fname, st.age, st.sex, st.major, st.advisor, st.city_code order by st.lname, st.fname, st.age, st.sex, st.major, st.advisor, st.city_code;
select * from student where petid = 3 and pet_age = 3;
SELECT lname FROM student WHERE petid = 3 AND age = 3;
select avg(age) from student where has_pet.petid is null;
select avg(age) from student where not exists (select * from pets where petid = student.stuid);
SELECT COUNT(*) FROM continents;
SELECT count(*) FROM continents;
select continent.continent, continent.continentname, count(country.countryid) as cnt from continents, countries group by continent.continent, continent.continentname order by continent.continentname, cnt desc limit 10;
select cars.id, cars.make, cars.model, count(cylinders.id) as cylinders from cars, cylinders group by cars;
select count(*) from countriesquery:how;
select count(*) from cars_data where country ;
select * from car_makers, car_names, cars_data where car_makers.maker = car_names.maker and car_names.model = cars_data.model and cars_data.id = car_makers.id order by car_makers.maker, car_names.model, cars_data.id;
select * from car_makers where id in (select id from car_makers group by id having count(*) > 1)select * from car_makers where id in (select id from car_makers group by id having count(*) > 1)select * from car_makers where id in (select id from car_makers group by id having count(*) > 1)select * from car_makers where id in (select id from car_makers group by id having count(*) > 1)select * from car_makers where id in (select id from car_makers group by id having count(*) > 1)select * from car_makers where id in;
select * from cars_data where horsepower = (select min(horsepower) from cars_data);
SELECT * FROM cars_data WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data);
select * from cars_data where weight < (select avg(weight) from cars_data);
select * from cars_data where weight < (select avg(weight) from cars_data);
select * from cars_data where year = 1970 and make = 'Volkswagen';
SELECT * FROM car_makers WHERE year = 1970;
select * from cars_data where year = '1950';
SELECT * FROM car_makers WHERE year = 2000;
select distinct model from cars_data where year >= 1980;
SELECT * FROM cars_data WHERE year >= 1980;
SELECT continent, COUNT(*) FROM car_makers GROUP BY continent;
SELECT continent, COUNT(*) FROM car_makers WHERE continent IN (SELECT continent FROM countries) GROUP BY continent;
select country, count(*) as cnt from car_makers group by country having cnt > (select count(*) from car_makers) order by cnt desc;
SELECT country.countryname, COUNT(country.countryid) AS cnt FROM countries GROUP BY country.countryname ORDER BY cnt DESC LIMIT 1;
select count(maker) as count, maker from car_makers group by makerselect count(maker) as count, maker from car_makers group by makerselect count(maker) as count, maker from car_makers group by makerselect count(maker) as count, maker from car_makers group by makerselect count(maker) as count, maker from car_makers group by makerselect count(maker) as count, maker from car_makers group by makerselect count(maker) as count, maker from car_makers group by makerselect count(maker) as count, maker from car_makers group by makerselect count(maker) as count, maker from car_makers group by makerselect count(maker) as count;
SELECT count(id), maker, fullname FROM car_makers, car_names WHERE car_makers.maker = car_names.maker AND car_names.fullname = 'Ford';
select * from cars_data where id = 1 and year = 1980 and make = 'amc' and model = 'hornet sportabout';
select * from cars_data where id = 1 and year = 1990 and weight > 2000 and cylinders > 4 and horsepower > 200 and accelerate > 0.5 and make = 'amc hornet sportabout';
SELECT COUNT(*) FROM car_makers WHERE country = 'france';
SELECT count(*) FROM car_makers WHERE country = 'france';
SELECT COUNT(id) FROM cars_data WHERE continent = 'usa';
select count(*) from car_makers where country = 'United States';
select avg(mpg) from cars_data where cylinders = 4;
select avg(mpg) from cars_data where cylinders = 4;
SELECT * FROM cars_data WHERE cylinders = 8 AND year = 1974;
select * from cars_data where cylinders = 8 and year = 1974;
SELECT * FROM car_makers, model_list, cars_dataWHERE car_makers.maker = model_list.maker AND cars_data.model = model_list.model;
SELECT * FROM car_makers, model_list, cars_data WHERE car_makers.maker = model_list.maker AND cars_data.model = model_list.model;
SELECT countries.continent, countries.countryname, car_makers.maker, car_names.model, cars_data.mpg, cars_data.cylinders, cars_data.edispl, cars_data.horsepower, cars_data.weight, cars_data.accelerate, cars_data.year FROM countries INNER JOIN car_makers ON countries.continent = car_makers.continent INNER JOIN car_names ON car_makers.maker = car_names.maker INNER JOIN cars_data ON car_names.model = cars_data.maker WHERE cars_data.mpg > 20 AND cars_data.cylinders > 4 AND cars_;
SELECT country.country, car_makers.maker FROM countries, car_makers WHERE car_makers.country = countries.continent AND car_makers.maker > 0;
select count(*) from cars_data where horsepower > 150;
select count(*) from cars_data where horsepower > 150;
select avg(weight) from cars_data where year = 2010;
select avg(weight), avg(year) from cars_data group by year;
select * from countries where continent = 'Europe' and (count(country) >= 3);
SELECT country.country, count(country.country) as cnt FROM countries, model_list, car_makers, car_names, cars_data WHERE countries.continent = car_makers.country AND car_makers.country = car_names.country AND car_names.model = model_list.model AND cars_data.id = car_names.makeid GROUP BY country.country ORDER BY cnt DESC;
SELECT max(horsepower) AS max_hp, make FROM cars_data WHERE cylinders = 3;
SELECT MAX(horsepower) FROM cars_data WHERE cylinders = 3 AND maker = 'BMW';
select * from cars_data where mpg > 30 order by mpg desc limit 10;
select * from cars_data where mpg > (select max(mpg) from cars_data);
select avg(horsepower) from cars_data where year < 1980;
select avg(horsepower) from cars_data where year < 1980;
select avg(edispl) from cars_data where make = 'volvo';
select avg(edispl) from cars_data where make = 'volvo';
select max(accelerate) from cars_data where cylinders = 4;
select max(accelerate) from cars_data group by cylinders;
select * from cars_data where id in (select id from model where make = 'Ford');
select * from cars_data where id in (select id from model where name = 'Ford');
select count(*) from cars_data where cylinders > 4;
select count(*) from cars_data where cylinders > 4;
select count(*) from cars_data where year = 1980;
select count(*) from cars_data where year = 1980;
select count(*) from cars_data where make = 'american motor company';
SELECT count(*) FROM car_makers WHERE maker = 'american motor company';
select * from makers where count(model) > 3;
SELECT maker, COUNT(model) FROM car_makers GROUP BY maker HAVING COUNT(model) > 3;
select distinct model, sum(weight) from cars_data group by model having sum(weight) > 3500;
select * from cars_data where weight > 3500 and make = 'general motors';
select * from cars_data where weight > 3000 and weight < 4000;
SELECT * FROM cars_data WHERE weight < 4000 AND weight > 3000;
select * from cars_data where accelerate > (select max(accelerate) from cars_data);
select * from cars_data where horsepower > (select max(horsepower) from cars_data);
SELECT * FROM cars_data WHERE model = 'volvo' AND cylinders = (SELECT MIN(cylinders) FROM cars_data WHERE model = 'volvo');
select count(cylinders) from cars_data where makeid = 'volvo' and model ='s40';
select count(*) from cars_data where accelerate > (select max(horsepower) from cars_data);
select count(*) from cars_data where accelerate > (select max(horsepower) from cars_data);
select count(*) from countries where continents.continent = 'Europe' and car_makers.country > 2;
select count(*) from countries where continents.continent = 'Europe' and car_makers.country > 2;
select count(*) from cars_data where cylinders > 6;
select count(*) from cars_data where cylinders > 6;
select * from cars_data where cylinders = 4 order by horsepower desc limit 1;
select * from cars_data where cylinders = 4 order by horsepower desc limit 1;
SELECT * FROM cars_data WHERE horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cylinders < 4;
select * from cars_data where horsepower < 4 and cylinders < 4;
select max(mpg) from cars_data where cylinders = 8 and year < 1980;
select max(mpg) from cars_data where cylinders = 8 or year < 1980;
SELECT * FROM cars_data WHERE mpg > 3500 AND NOT (maker = 'ford' OR maker = 'ford motor company');
SELECT * FROM cars_data WHERE mpg > 3500 AND weight < 3500 AND year > 2000 AND year < 2010 AND makeid!= 1 AND makeid!= 2 AND makeid!= 3 AND makeid!= 4 AND makeid!= 5 AND makeid!= 6 AND makeid!= 7 AND makeid!= 8 AND makeid!= 9 AND makeid!= 10 AND makeid!= 11 AND makeid!= 12 AND makeid!= 13 AND makeid!= 14 AND makeid!= 15 AND makeid!= 16 AND makeid!= 17 AND makeid!= ;
SELECT country FROM countries WHERE NOT EXISTS (SELECT * FROM car_makers WHERE car_makers.country = countries.continent);
SELECT country FROM countries WHERE countryid NOT IN (SELECT countryid FROM car_makers);
select * from car_makers where (count(id) >= 2 and count(maker) >= 3);
SELECT * FROM car_makers WHERE (maker = 'Ford' OR maker = 'GM') AND (cars_data.id > 2) AND (cars_data.id < 4) AND (cars_data.id > 3) AND (cars_data.id < 5);
SELECT country.country, count(country.country) as cnt FROM countries GROUP BY country.country HAVING cnt > 3;
SELECT countries.continent, countries.countryname, car_makers.maker, car_names.model, cars_data.id FROM countries, car_makers, car_names, cars_data WHERE car_makers.country = countries.continent AND car_makers.maker = car_names.model AND cars_data.id = car_names.makeid AND car_makers.country = countries.continent AND car_makers.maker = car_names.model AND cars_data.id = car_names.makeid AND car_makers.country = countries.continent AND car_makers.maker = car_names.model AND cars_data.id = car_names.makeid AND;
select country from airlines where airline = 'jetblue airways';
select country from airlines where airline = 'jetblue';
select abbreviation from airlines where airline = 'jetblue airways';
select * from flights where sourceairport = 'BOS' and destairport = 'JFK' and airline = 'jetblue airways';
select airline,abbreviation from airlines where country = 'usa';
SELECT airline,abbreviation FROM airlines WHERE country = 'USA';
select airportcode,airportname from airports where city = 'anthony';
SELECT * FROM flights WHERE destairport = 'LHR' AND sourceairport = 'LON';
select count(*) from flights where destairport = 'JFK';
select count(*) from flights where flights.passengers > 1000 and flights.count > 100;
select count(*) from flights where destairport = 'LHR' and sourceairport = 'JFK' and date(;
select count(*) from airports;
select count(*) from flights where destairport = 'LON' and sourceairport = 'PAR' and date(departure) >= '2010-01-01' and date(departure) <= '2010-01-03';
select count(*) from flights;
select airline from airlines where abbreviation = 'ual';
SELECT * FROM flights WHERE airline = 'UAL';
;
select count(*) from airlines where country = 'usa';
select * from flights where destairport = 'ALN' and sourceairport = 'ALN';
SELECT city, country FROM airports WHERE airportcode = 'ALN'SELECT city, country FROM airports WHERE airportcode = 'ALN'SELECT city, country FROM airports WHERE airportcode = 'ALN'SELECT city, country FROM airports WHERE airportcode = 'ALN'SELECT city, country FROM airports WHERE airportcode = 'ALN'SELECT city, country FROM airports WHERE airportcode = 'ALN'SELECT city, country FROM airports WHERE airportcode = 'ALN'SELECT city, country FROM airports WHERE airportcode = 'ALN'SELECT city, country FROM airports WHERE airportcode = 'ALN;
SELECT airportname FROM airports WHERE airportcode = 'ako';
select * from airports where airportcode = 'ako';
SELECT airportname FROM airports WHERE airportcode = 'ABZ';
SELECT airportname FROM airports WHERE airportcode = 'ABZ';
select count(*) from flights where destairport = 'apg';
select count(*) from flights where destairport = 'apg';
select count(*) from flights where destairport = 'ato';
select count(*) as count from flightswhere sourceairport = 'LHR' and destairport = 'CDG'group by airlineorder by count desclimit 10;
select count(*) from flights where destairport = 'aberdeen' and sourceairport = 'aberdeen';
select count(*) from flights where destairport = 'ABZ' and sourceairport = 'EDI';
select count(*) from flights where destairport = 'ABZ' and sourceairport = 'EDI';
select count(*) from flights where destairport = 'ABZ' and sourceairport = 'EDI';
select count(*) from flights where destairport = 'aberdeen' and sourceairport = 'ashley';
select count(*) from flights where destairport = 'ABZ' and sourceairport = 'ASH';
select count(*) from flights where airline = 'jetblue airways';
SELECT flights.destairport, flights.sourceairport, flights.airline, flights.airportcode, flights.flightno, flights.airline, flights.airportcode, flights.sourceairport, flights.airline, flights.airportcode, flights.flightno, flights.airline, flights.airportcode, flights.sourceairport, flights.airline, flights.airportcode, flights.flightno, flights.airline, flights.airportcode, flights.sourceairport, flights.airline, flights.airportcode, flights.flightno, flights.airline, flights.airportcode, flights.sourceairport, flights.airline, flights.airportcode, flights.flight;
select count(*) from flights where destairport = 'asy';
select count(*) from flights where airline = 'united' and destairport = 'asy';
select count(*) from flights where sourceairport = 'ahd' and destairport ='sfo';
select count(*) from flights where sourceairport = 'ahd';
select count(*) from flights where airline = 'united' and destairport = 'aberdeen';
select count(*) from flights where destairport = 'ABZ';
select * from flights where destairport = 'SFO' and sourceairport = 'LAX' order by flights.airline, flights.destairport, flights.sourceairport limit 10;
select * from flights where destairport = 'SFO' order by count(*) desc limit 1;
select * from flights where destairport = 'JFK' and sourceairport = 'LAX' order by flights.destairport asc, flights.sourceairport asc limit 10;
select * from flights where destairport = 'SFO' order by count(*) desc limit 10;
select * from flights where flights.destairport = airports.airportcode order by flights.destairport asc limit 1;
select airportcode from airports where flights.destairport = airports.airportcode order by flights.destairport asc limit 1;
select * from flights where destairport = 'JFK' and sourceairport = 'LAX' order by destairport asc, sourceairport asc limit 1;
SELECT airportcode, COUNT(*) AS flights FROM flights GROUP BY airportcode ORDER BY flights DESC LIMIT 1;
select airline, count(*) from flights group by airline order by count(*) desc limit 10;
select airline, count(*) from flights group by airline order by count(*) desc limit 10;
select airline, country from flights where flights.airline = (select min(airline) from flights group by airline having count(*) = 1);
select u.airline, u.abbreviation, u.country from airlines u where u.country = 'US' and u.abbreviation = 'UA' and u.country = 'US' and u.abbreviation = 'UA' and u.country = 'US' and u.abbreviation = 'UA' and u.country = 'US' and u.abbreviation = 'UA' and u.country = 'US' and u.abbreviation = 'UA' and u.country = 'US' and u.abbreviation = 'UA' and u.country = 'US';
select airline, count(*) from flights where destairport = 'ahd' and sourceairport = 'ahd' group by airline order by airline;
select * from flights where sourceairport = 'AHN';
SELECT airlines.uid, airlines.airline, airports.airportcode, airports.airportname, airports.country, airports.countryabbrev FROM airlines, airports WHERE airports.airportcode = airlines.airportcode AND airports.airportname = 'ahd';
select * from flights where destairport = 'ahd';
select * from airlines where (airports.airportcode = 'apg' and flights.destairport = airports.airportcode) or (airports.airportcode = 'cvo' and flights.sourceairport = airports.airportcode);
select * from flights where destairport in (apg,cvo) and sourceairport in (apg,cvo);
select * from airlines where (airports.airportcode = 'cvo' and flights.destairport = airports.airportcode) or (airports.airportcode = 'apg' and flights.sourceairport = airports.airportcode);
select airline, country from airlines where country <> 'apg' and country <> 'cvo';
select * from airlines where flights.count >= 10;
select * from flights where flights.destairport = airports.airportcode and flights.sourceairport = airports.airportcode and flights.destairport = airports.airportcode and flights.sourceairport = airports.airportcode and flights.destairport = airports.airportcode and flights.sourceairport = airports.airportcode and flights.destairport = airports.airportcode and flights.sourceairport = airports.airportcode and flights.destairport = airports.airportcode and flights.sourceairport = airports.airportcode and flights.destairport = airports.airportcode and flights.sourceairport = airports.airport;
select airline, count(*) from flights group by airline having count(*) < 200;
select airline, count(*) from flights group by airline having count(*) < 200;
SELECT flights.destairport, flights.sourceairport, flights.airline FROM flights WHERE flights.airline = 'united airlines';
select * from flights where airline = 'united' and sourceairport = 'ORD' and destairport = 'LAX';
select * from flights where destairport = 'apg' and sourceairport = 'apg';
SELECT flights.destairport, flights.sourceairport, flights.airline, flights.airportcode, flights.flightnoFROM flightsWHERE flights.sourceairport = 'apg'AND flights.destairport = 'lhr'ORDER BY flights.flightno;
select * from flights where destairport = 'apg' and sourceairport = 'apg';
SELECT flights.destairport, flights.sourceairport, flights.airline, flights.airportcode, flights.flightno, airports.airportname, airports.airportcode, airports.countryabbrev, airports.country FROM flights, airports WHERE flights.destairport = airports.airportcode AND flights.sourceairport = airports.airportcode;
SELECT flights.flightno FROM flights WHERE airports.airportcode = 'ABZ' AND flights.destairport = airports.airportcode;
SELECT flights.destairport, flights.sourceairport, flights.airline, flights.airportcode, flights.flightno FROM flights WHERE flights.sourceairport = 'ABZ' AND flights.destairport = 'LHR'The result is:Aberdeen (ABZ) -> London (LHR)The query is:SELECT flights.destairport, flights.sourceairport, flights.airline, flights.airportcode, flights.flightno FROM flights WHERE flights.sourceairport = 'ABZ' AND flights.destairport = 'LHR'The result is:Aberdeen (ABZ) -> London ;
SELECT flights.airline, flights.destairport, flights.sourceairport FROM flights WHERE flights.destairport = airports.airportcode AND flights.sourceairport = airports.airportcode;
SELECT flights.airline, flights.destairport, flights.sourceairport, flights.flightnoFROM flightsWHERE flights.destairport = 'ABZ'ORDER BY flights.flightno;
select count(*) from flights where destairport = 'aberdeen' or destairport = 'abilene';
select count(*) from flights where destairport = 'ABZ' or destairport = 'ABE';
select airportname from airports where not exists (select * from flights where destairport = airports.airportcode and sourceairport = airports.airportcode);
select * from airports where country <> 'US' and country <> 'CA';
select count(*) from employee where name;
select count(*) from employeeselect * from employeeselect * from evaluationselect * from hiringselect * from shopselect * from evaluationselect * from hiringselect * from shopselect * from evaluationselect * from hiringselect * from shopselect * from evaluationselect * from hiringselect * from shopselect * from evaluationselect * from hiringselect * from shopselect * from evaluationselect * from hiringselect * from shopselect * from evaluationselect * from hiringselect * from shop;
select * from employee;
select name, age from employee order by age desc limit 10 offset 10 limit 10query:list the names of employees and sort in descending order of age;
select count(employee.employee_id) from employee, evaluation, hiring where employee.employee_id = evaluation.employee_id and evaluation.employee_id = hiring.employee_id and hiring.shop_id = 'London' and evaluation.shop_id = 'London' and hiring.shop_id = 'London' and evaluation.employee_id = 'John' and hiring.employee_id = 'John';
select count(employee.employee_id) as count, city from employee, evaluation where employee.city = evaluation.city group by city;
select city from evaluation where employee_id in (select employee_id from hiring where year_awarded > 2000) and age > 30;
select city from evaluation where employee_id in (select employee_id from hiring where year_awarded > 2000) and employee_id in (select employee_id from hiring where year_awarded < 2000);
select count(*) from shop where location = 'London' and manager_name = 'John' and is_full_time = false and is_full_time = falsequery:find the;
select count(*) from employee where shop_id = 5query:how;
select manager_name, district from shop where number_products = (select max(number_products) from shop);
select manager_name, district from shop where number_products = (select max(number_products) from shop);
select shop.name, count(*) as number_products from shop group by shop order by number_products desc limit 1, 10;
select count(*) from products group by shopwhat are the minimum and maximum number of products across all the shops?;
select shop.name, shop.location, shop.district from shop, evaluation where shop.shop_id = evaluation.shop_id order by count(*) desc limit 10;
select shop.name, shop.location, shop.district from shop order by shop.number_products desc;
select name from shop where number_products > (select avg(number_products) from shop);
select shop_name from shop where number_products > (select avg(number_products) from shop);
select * from evaluation where employee_id in (select employee_id from hiring) and year_awarded > 1;
select employee.name, count(*) as total_awards from evaluation group by employee.name having total_awards = (select max(total_awards) from evaluation) order by total_awards desc;
select name from evaluation where employee_id = 1 order by bonus desc limit 1;
select employee.name, bonus from evaluation, employee where evaluation.employee_id = employee.employee_id order by bonus desc limit 1;
select * from evaluation where employee_id not in (select employee_id from shop);
select name from evaluation where employee_id not in (select employee_id from hiring);
select name from shop where number_products > (select count(*) from hiring);
select shop.name from shop, employee where shop.employee_id = employee.employee_id order by count(*) desc limit 1;
select shop_name from shop where not exists (select 1 from hiring where hiring.shop_id = shop.shop_id);
select shop_name from shop where employee_count = 0;
select count(employee.employee_id) as number_of_employees, shop.name as shop_name from hiring inner join evaluation on evaluation.employee_id = hiring.employee_id inner join shop on hiring.shop_id = shop.shop_id group by shop.name order by shop.name;
select count(employee.employee_id) as number_employees, shop.name from shop, employee where shop.name = employee.shop_id and employee.shop_id = shop.shop_id;
select sum(bonus) from evaluation where employee_id = 1;
select sum(bonus) from evaluation group by employee_idforeign_keys:employee.employee_id -> shop.shop_idshop.shop_id -> evaluation.employee_idevaluation.employee_id -> employee.employee_idprimary_keys:hiring.employee_id -> employee.employee_idhiring.shop_id -> shop.shop_idevaluation.employee_id -> employee.employee_idThe result should be:total_bonus = $1000I'm using the following code:require'sql_to_sql'schema = {  ;
SELECT * FROM hiring WHERE employee_id =?SELECT * FROM evaluation WHERE employee_id =?SELECT * FROM shop WHERE name =?SELECT * FROM employee WHERE name =?SELECT * FROM employee WHERE age =?SELECT * FROM employee WHERE city =?SELECT * FROM employee WHERE year_awarded =?SELECT * FROM employee WHERE bonus =?SELECT * FROM employee WHERE is_full_time =?SELECT * FROM employee WHERE manager_name =?SELECT * FROM employee WHERE name =?SELECT ;
select * from year_awarded where name =?query:what is all the information about city?;
select * from (select * from shop where number_products < 3000) union all select * from (select * from shop where number_products > 10000);
select * from districts where (count(district) < 3000) and (count(district) > 10000);
select count(*) from employee where age > 30 and department ='marketing' and years_with_company > 5query;
select count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shopselect count(*) from shop;
select count(*) from ref_template_types;
SELECT count(*) FROM documents;
select document_type_code,document_type_description from documents where document_type_code in (select document_;
select template_type_code, template_type_description from ref_template_types where template_type_code > 0 order by template_type_code, template_type_description limit;
SELECT document_name, template_id FROM documents WHERE document_name LIKE '%w%' AND template_id IN (SELECT template_id FROM templates WHERE template_type_code ='ref_template_types.ref_template_type_code');
select * from documents where document_description like '%w%';
SELECT document_id, template_id, document_name, document_description, other_details FROM documents WHERE document_name = 'robbin cv';
SELECT document_id, template_id, document_name, document_description FROM documents WHERE document_name = 'robbin cv'SELECT paragraph_id, paragraph_text, other_details FROM paragraphs WHERE paragraph_text = 'robbin cv'SELECT ref_template_types.template_type_code, ref_template_types.template_type_description FROM ref_template_types WHERE template_type_code = 'CV'SELECT templates.template_id, templates.version_number, templates.template_type_code, templates.date_effective_from, templates.date_effective_to, templates.template_details FROM templates WHERE template_type_code = 'CV;
select count(*) from documents join ref_template_types on documents.document_id = ref_template_types.document_id where template_type_code in (select template_type_code from ref;
select count(document_id) from documents where template_type_code in (select template_type_code from ref_template_types)select count(document_id) from documents where template_type_code in (select template_type_code from ref_template_types)select count(document_id) from documents where template_type_code in (select template_type_code from ref_template_types)select count(document_id) from documents where template_type_code in (select template_type_code from ref_template_types)select count(document_id) from documents where template_type_code in (select template_type_code from ref_;
select count(*) from documents where document_type_code = 'ppt' and document_id = '1234' and document_name ='my document';
select count(*) from documents where template_type_code = 'ppt'select count(*) from documents where template_type_code = 'ppt' and document_id = 1select count(*) from documents where template_type_code = 'ppt' and document_id = 1 and document_name = 'ppt'select count(*) from documents where template_type_code = 'ppt' and document_id = 1 and document_name = 'ppt' and other_details = 'ppt'select count(*) from documents where template_type_code = 'ppt' and document_id;
select template_id, count(*) from templates group by template_id;
select template;
select template_id,template_type_code from templates where template_type_code in (select template_type_code from ref_template_types where;
select template_id,template_type_code from templates where template_type_code in (select max(template_type_code) from templates group by document_id)select template_id,template_type_code from templates where template_type_code in (select max(template_type_code) from templates group by document_id)select template_id,template_type_code from templates where template_type_code in (select max(template_type_code) from templates group by document_id)select template_id,template_type_code from templates where template_type_code in (select max(template_type_code) from templates group by document_id);
select template_id, count(*) as count from templates group by template_id having count(*) > 1;
select paragraph_id from paragraphs where paragraph_type_code in (select paragraph_type_code from ref_paragraph_types where paragraph_type_code = 'paragraph;
select template_id from templates where not exists (select * from documents where documents.template_id = templates.template_id)select template_id, template_type_code, template_name, template_description from templates where template_type_code = 'document'select template_id, template_type_code, template_name, template_description from templates where template_type_code = 'paragraph'select template_id, template_type_code, template_name, template_description from templates where template_type_code ='ref_template_type'select template_id, template_type_code, template_name, template_description from templates where;
select template_id from templates where template_type_code not;
select count(*) from ref_template_types where template;
select count(*) from templatesselect count(*) from documentsselect count(*) from paragraphsselect count(*) from ref_template_typesselect count(*) from templatesselect count(*) from templatesselect count(*) from templatesselect count(*) from templatesselect count(*) from templatesselect count(*) from templatesselect count(*) from templatesselect count(*) from templatesselect count(*) from templatesselect count(*) from templatesselect count(*) from templatesselect count(*) from templatesselect count(*) from templatesselect count(*) from templatesselect count(*) from templatesselect count(*) from templatesselect count(*) from templatesselect count(*) from templatesselect;
select template_id, version_number, template_type_code from templates;
select template_id,version_number,template_type_code from templates where template_type_code in (select template_type_code from ref_template_types)select template_id,version_number,template_type_code from templates where template_type_code in (select template_type_code from ref_template_types)select template_id,version_number,template_type_code from templates where template_type_code in (select template_type_code from ref_template_types)select template_id,version_number,template_type_code from templates where template_type_code in (select template_type_code from ref_template_types);
select distinct template_type_code from templates;
select template_type_code from ref_template_types where template_type_code in ('1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62','63','64','65','66','67','68','69','70;
select template_id from templates where template_type_code = 'pp' or template_type_code = 'ppt';
select template_id from templates where template_type_code = 'pp' or template_type_code = 'ppt';
select count(*) from templates where template_type_code = 'cv' and template_id in (select template_id from templates where template_type_code = 'cv') and template_id in (select template_id from templates where template_type_code = 'cv')query:how many templates;
select count(*) from templates where template_type_code = 'cv'select * from templates where template_type_code = 'cv'select * from templates where template_type_code = 'cv' and template_id = 1select * from templates where template_type_code = 'cv' and template_id = 1 and template_details = 'cv'select * from templates where template_type_code = 'cv' and template_id = 1 and template_details = 'cv' and template_details = 'cv'select * from templates where template_type_code;
select template_id,version_number,template_type_code from templates where template_type_code = '5' and version_number > 5;
select template_type_code, count(*) as version_num from templates where template_type_code > 5 group by template_type_code order by template_type_code;
select template_type_code, count(*) from templates group by template_type_code;
select template_type_code, count(*) from templates group by template_type_code order by template_type_code;
select template_type_code, count(*) as num_templates from templates group by template_type_code having num_templates > (select count(*) from templates);
select template_type_code from ref_template_types where template_type_code in (select template_type_code from templates where document_id =?)query:return the template type;
select template_type_code from templates where template_type_code in (select template_type_code from templates where template_id in (select template_id from templates where document_id in (select document_id from documents where document_type_code = 'document')) and date_effective_from < date_effective_to)The query above returns the following result:template_type_code--------------------documentThe query above returns the following result:template_type_code--------------------documentThe query above returns the following result:template_type_code--------------------documentThe query above returns the following result:template_type_code--------------------;
select template_type_code from templates where template_type_code in (select distinct template_type_code from templates where template_id in (select template_id from templates where template_type_code in (select template_type_code from templates where template_type_code in (select template_type_code from templates where template_type_code in (select template_type_code from templates where template_type_code in (select template_type_code from templates where template_type_code in (select template_type_code from templates where template_type_code in (select template_type_code from templates where template_type_code in (select template_type_code from templates where template;
select template_id,version_number,template_type_code from templates where template_type_code in (select template_type_code from ref_template_types where template_id =?)select template_id,version_number,template_type_code from templates where template_type_code in (select template_type_code from ref_template_types where template_id =?)select template_id,version_number,template_type_code from templates where template_type_code in (select template_type_code from ref_template_types where template_id =?)select template_id,version_number,template_type_code from templates where template_;
select template_id, template_type_code from templates where template_type_code in (select template_type_code from ref_template_types where template_id =?)select template_id, template_type_code from templates where template_type_code in (select template_type_code from ref_template_types where template_id =?)select template_id, template_type_code from templates where template_type_code in (select template_type_code from ref_template_types where template_id =?)select template_id, template_type_code from templates where template_type_code in (select template_type_code from ref_;
SELECT template_type_code FROM templates WHERE template_type_code = 'data;
select template_type_code, template_type_description from templates where template_type_code = 'data;
select document_name from documents where document_type_code = 'bk'select document_name from documents where document_type_code = 'bk'select document_name from documents where document_type_code = 'bk'select document_name from documents where document_type_code = 'bk'select document_name from documents where document_type_code = 'bk'select document_name from documents where document_type_code = 'bk'select document_name from documents where document_type_code = 'bk'select document_name from documents where document_type_code;
select document_id,document_name from documents where template_type_code = 'bk';
select template_type_code, count(*) from templates group by template_type_code order by template_type_code;
select template_type_code, count(*) from templates group by template_type_code order by template_type_code;
select template_type_code from templates where template_type_code in (select template_type_code from templates group by template_type_code having count(*) > 1);
select template_type_code from ref_template_types where template_type_code = 'common'select template_type_code, template_type_description from ref_template_types where template_type_code = 'common'select template_type_code, template_type_description from ref_template_types where template_type_code = 'common'select template_type_code, template_type_description from ref_template_types where template_type_code = 'common'select template_type_code, template_type_description from ref_template_types where template_type_code = 'common'select template_type_code;
select template_type_code from templates where template_type_code not in (select template_type_code from documents where document_id = 1)select template_type_code, template_type_description from templates where template_type_code not in (select template_type_code from documents where document_id = 1)select template_type_code, template_type_description from templates where template_type_code not in (select template_type_code from documents where document_id = 1)select template_type_code, template_type_description from templates where template_type_code not in (select template_type_code from documents where document_id;
select template_type;
select template_type_code, template_type_description from ref_template_types;
;
select template_type_code, template_type_description from ref_template_types where template_type_code = 'ad';
select template_type_description from ref_template_types where template_type_code = 'ad'select * from templates where template_type_code = 'ad'select * from templates where template_type_code = 'ad' and template_id = 1select * from templates where template_type_code = 'ad' and template_id = 1 and document_id = 1select * from templates where template_type_code = 'ad' and template_id = 1 and document_id = 1 and paragraph_id = 1select * from templates where template_type;
select * from templates where template_type_code in ('book','magazine')primary_keys:what is the template type code for template type description ";
select * from templates where template_type_code in ('book','magazine', 'newspaper;
select distinct paragraph_text from paragraphs where paragraph_id in (select paragraph_id from ref_paragraphs where paragraph_type_code = 'paragraph')query:what are;
select template_type_code, template_type_description from templates where template_type_code in (select template_type_code from documents where document_id =?) and template_type_code <> 'template' order by template_type_code;
select template_id, template_type_code, template_details from templates where template_type_code = 'presentation'select document_id, document_name, document_description, other_details from documents where document_id = 1select paragraph_id, paragraph_text, other_details from paragraphs where paragraph_id = 1select ref_template_types.template_type_code, ref_template_types.template_type_description from ref_template_types where template_type_code = 'presentation'select templates.template_id, templates.version_number, templates.template_type_code, templates.date_effective_from, templates.;
select * from templates where template_description = 'presentation';
select count(*) from paragraphs where document_id =? and template_type_code =? and paragraph_text =? and other_details =?query:how many;
SELECT count(*) FROM paragraphs;
select count(*) from paragraphs;
select count(*) from paragraphs where document_name ='summer show';
select * from paragraphs where paragraph;
select * from paragraphs where paragraph_text like '%korea%';
select * from paragraphs where document_id = '1' and document_;
SELECT paragraph_id, paragraph_text FROM paragraphs WHERE document_id = '1' AND paragraph_text = 'welcome to ny';
select * from paragraphs where document_id = 'customer reviews' and template_id ='reviews' and paragraph_text = 'text 1'query:show all paragraph texts for the document "customer;
SELECT paragraph_text FROM paragraphs WHERE document_id = 'customer reviews';
SELECT document_id, COUNT(*) AS num_paragraphs FROM documents GROUP BY document_id ORDER BY document_id;
select document_id, count(*) as num_paragraphs from documents group by document_id order by document_id;
select document_id, document_name, count(*) as number_of_paragraphs from documents group by document_id;
SELECT document_id, document_name, document_description, count(*) AS number_of_paragraphs FROM documents GROUP BY document_id, document_name, document_description;
select document_id from documents where document_id in (select document_id from paragraphs where paragraph_text = 'This is a paragraph')select document_id from documents where document_id in (select document_id from paragraphs where paragraph_text = 'This is a paragraph')select document_id from documents where document_id in (select document_id from paragraphs where paragraph_text = 'This is a paragraph')select document_id from documents where document_id in (select document_id from paragraphs where paragraph_text = 'This is a paragraph')select document_id from documents where document_id in (select document_id from paragraphs where paragraph_text;
select document_id from documents where document_id in (select document_id from documents where paragraph_count > 1);
select document_id,document_name,count(*) as num_paragraphs from documents group by document_id,document_name having;
select document_id, document_name from documents where count(*) > (select count(*) from paragraphs)select document_id, document_name from documents where count(*) > (select count(*) from paragraphs)select document_id, document_name from documents where count(*) > (select count(*) from paragraphs)select document_id, document_name from documents where count(*) > (select count(*) from paragraphs)select document_id, document_name from documents where count(*) > (select count(*) from paragraphs)select document_id, document_name from documents where count(*) > (select count(*) from paragraphs)select document_id, document_name from;
select document_id,count(*) from paragraphs group by document_id having count(*) = 1 order by document_id desc limit 1;
select document_id from documents where count(paragraph_id) = (select count(*) from paragraphs where document_id = documents.document_id group by document_id having count(*) = 1)select document_id, document_name, document_description, other_details from documents where document_id = (select min(document_id) from documents)select document_id, document_name, document_description, other_details from documents where document_id = (select max(document_id) from documents)select document_id, document_name, document_description, other_details from documents where document_id = (select min(document_id) from documents;
select * from documents where document_id = 1 and paragraph_id in (select paragraph_id from paragraphs where document_id = 1);
SELECT * FROM documents WHERE template_id IN (SELECT template_id FROM ref_template_types WHERE template_type_code = 'paragraph') AND document_id IN (SELECT document_id FROM ref_template_types WHERE template_type_code = 'paragraph')The query above returns the following result:+----+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+------------;
SELECT document_id, paragraph_text, other_detailsFROM documentsWHERE document_id IN (SELECT document_id FROM documents WHERE template_id = 'brazil')AND paragraph_text = 'brazil'AND other_details = 'ireland'LIMIT 1SELECT document_id, paragraph_text, other_detailsFROM documentsWHERE document_id IN (SELECT document_id FROM documents WHERE template_id = 'ireland')AND paragraph_text = 'ireland'AND other_details = 'brazil'LIMIT 1SELECT document_id, paragraph_text, other_detailsFROM documentsWHERE;
select document_id from documents where document_name = 'brazil' and document_description = 'brazilian football team' and document_text = 'brazil' and document_id in (select document_id from documents where document_name = 'ireland' and document_description = 'irish football team');
;
select count(*) from course_arrange where course_arrange.course_id = 2query:what is the total count of;
select * from teacher order by age asc;
select name, age from teacher order by age desc;
select teacher.name, teacher.age, teacher.hometown from teacher, course_arrange where teacher.teacher_id = course_arrange.teacher_id and course_arrange.course_id = 1;
select course_arrange.teacher_id,course_arrange.course_id,course_arrange.grade,course_arrange.teacher.name,course_arrange.teacher.age,course_arrange.teacher.hometown from course_arrange,course,teacher where course_arrange.teacher_id = teacher.teacher_id and course_arrange.course_id = course.course_id order by course_arrange.grade desc limit 10;
select * from teacher where hometown <> 'little lever urban district';
select * from teacher where hometown <> 'little lever urban district';
select * from teacher where age = 32 or age = 33;
select * from teacher where age = (select min(age) from teacher) or age = (select max(age) from teacher);
select course_arrange.teacher_id,course_arrange.course_id,course_arrange.grade from course_arrange where course_arrange.teacher_id = 1 and course_arrange.course_id = 2 and course_arrange.grade = 'A';
select * from teacher where age < 30;
select teacher.hometown, count(teacher.teacher_id) as num from teacher group by teacher.hometown;
select count(teacher.teacher_id) from teacher, course_arrange where teacher.teacher_id = course_arrange.teacher_id and course_arrange.course_id = 'home';
select course_arrange.hometown, count(*) as cnt from course_arrange group by course_arrange.hometown order by cnt desc limit 10;
select course_arrange.hometown, count(*) from course_arrange group by course_arrange.hometown order by count(*) desc limit 10;
select teacher.name, teacher.hometownfrom teacherjoin course_arrange on teacher.teacher_id = course_arrange.teacher_idjoin course on course_arrange.course_id = course.course_idwhere course_arrange.course_id in (select course_id from course where teacher_id in (select teacher_id from teacher where name = 'John'))order by teacher.hometown;
select course_arrange.course_id,course_arrange.teacher_id,course_arrange.grade from course_arrange where course_arrange.teacher_id in (select teacher_id from teacher where teacher.hometown = 'Barcelona') and course_arrange.course_id in (select course_id from course where course.staring_date >= '2015-01-01') and course_arrange.course_id in (select course_id from course where course.staring_date <= '2015-12-31') and course_arrange.course_id in (select course_id from course where course.staring_date >=;
SELECT teacher.name, course.course_idFROM teacherINNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_idINNER JOIN course ON course_arrange.course_id = course.course_idWHERE course.course_id = 1ORDER BY teacher.name;
select course_arrange.teacher_id, course_arrange.course_id from course_arrange where course_arrange.teacher_id = 1 and course_arrange.course_id = 2;
SELECT teacher.name, course.course_idFROM teacherINNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_idORDER BY teacher.name ASCLIMIT 10;
select * from teacher, course_arrange where teacher.teacher_id = course_arrange.teacher_id order by course_arrange.course_id asc;
SELECT name FROM teacher WHERE course_id = 1;
select name from teacher where course_id in (select course_id from course_arrange where teacher_id = 1);
SELECT teacher.name, COUNT(course_arrange.course_id) AS num_coursesFROM teacherINNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_idGROUP BY teacher.nameORDER BY num_courses DESCLIMIT 10;
select name, count(*) from teacher group by name having count(*) > 1;
SELECT teacher.name, COUNT(course_arrange.course_id) AS num_coursesFROM teacherINNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_idGROUP BY teacher.nameHAVING num_courses >= 2;
select teacher.name, count(course_arrange.course_id) as num from teacher, course_arrange group by teacher.name having count(course_arrange.course_id) >= 2;
select * from teacher where not exists (select * from course_arrange where teacher_id = teacher.teacher_id and course_id = course.course_id);
select * from teacher where course_arrange.teacher_id is null;
select count(*);
SELECT visitor.name, visitor.level_of_membershipFROM visitorWHERE visitor.level_of_membership > 4ORDER BY visitor.level_of_membershipLIMIT 5The result should be:name | level_of_membership----+-------------John | 5Jane | 4Peter | 3Mary | 2Tom | 1The query should return the following result:name | level_of_membership----+-------------John | 5Jane | 4Peter | 3Mary | 2Tom | 1The query should return;
select avg(age) from visit where visitor.level_of_membership < 4;
select visitor.name, visitor.level_of_membership, visitor.agefrom visitorwhere visitor.level_of_membership > 4order by visitor.age desclimit 5;
select * from visit where visitor.level_of_membership ='staff' and museum.num_of_staff = (select max(num_of_staff) from museum);
SELECT avg(num_of_staff)FROM visitWHERE visit.open_year < 2009AND visit.museum_id IN (	SELECT museum_id	FROM museum	WHERE museum.open_year < 2009)GROUP BY museum_idORDER BY avg(num_of_staff) DESCLIMIT 10;
SELECT * FROM visit WHERE museum_id = 1 AND visitor_id = 1;
SELECT museum.name, COUNT(museum.id) AS num_of_staffFROM museumWHERE museum.num_of_staff > (SELECT MIN(museum.num_of_staff) FROM museum WHERE museum.open_year >= 2010)GROUP BY museum.nameHAVING COUNT(museum.id) > 1ORDER BY num_of_staff DESCLIMIT 10;
SELECT visitor.id, visitor.name, visitor.ageFROM visitorWHERE visitor.visit IN (    SELECT visit.museum_id    FROM visit    WHERE visit.visitor_id = 1)AND visitor.visit.museum_id IN (    SELECT museum_id    FROM museum    WHERE museum.open_year = 2010)ORDER BY visitor.id, visitor.name, visitor.ageLIMIT 10;
select visitor.name, visitor.level_of_membership, visitor.age, visitor.total_spent from visitor, visit where visitor.id = visit.visitor_id and visit.museum_id = 1 order by visitor.total_spent desc limit 1;
select * from visit where num_of_ticket > (select max(num_of_ticket) from visit);
select name from museum where not exists (select * from visit where visitor_id = 1);
SELECT visitor.name, visitor.ageFROM visitorWHERE visitor.total_spent = (    SELECT SUM(total_spent)    FROM visit    WHERE visit.museum_id = museum.museum_id    GROUP BY visit.museum_id    HAVING SUM(total_spent) = (        SELECT SUM(total_spent)        FROM visit        WHERE visit.museum_id = museum.museum_id        GROUP BY visit.museum_id        HAVING SUM(total_spent) > 10000    ))The query above is not working. I'm getting an error:Error: (1064,;
select avg(ticket) as avg_ticket, max(ticket) as max_ticket from visit group by museum_id;
select sum(total_spent) from visit where visitor.level_of_membership = 1;
select visitor.name from visit where visit.museum_id = 1 and visit.museum_id = 2 and visit.open_year >= 2009 and visit.open_year <= 2011;
select count(visitor.id) from visit where visit.;
select count(*) from visit where year(visit.open_year) >= 2013 and year(visit.open_year) <= 2008;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players;
SELECT COUNT(*) FROM players WHERE player_id =? AND winner_id ;
SELECT COUNT(*) FROM matches WHERE winner_id =?SELECT COUNT(*) FROM matches WHERE loser_id =?SELECT COUNT(*) FROM matches WHERE winner_id =? AND loser_id =?SELECT COUNT(*) FROM matches WHERE winner_id =? AND loser_id =?SELECT COUNT(*) FROM matches WHERE winner_id =? AND loser_id =? AND loser_id =?SELECT COUNT(*) FROM matches WHERE winner_id =? AND loser_id =? AND loser_id =? AND loser_id =?SELECT COUNT(*) FROM matches WHERE winner_id = ;
SELECT first_name, birth_dateFROM playersWHERE country_code = 'usa'ORDER BY first_name, birth_datequery:list the first name and birth date of all players from;
SELECT first_name,birth_date FROM players WHERE country_code = 'USA';
SELECT avg(loser_age) AS loser_age, avg(winner_age) AS winner_age FROM matches GROUP BY loser_id, winner_id;
SELECT avg(loser_age) AS loser_age, avg(winner_age) AS winner_age FROM matches GROUP BY loser_age, winner_age;
SELECT AVG(rank) AS avg_rankFROM matchesWHERE winner_id IN (SELECT player_id FROM players)GROUP BY;
select avg(rank) from matches where winner_id = 1;
SELECT * FROM matches WHERE loser_id IN (SELECT player_id FROM players WHERE player_id IN (SELECT player_id FROM matches WHERE winner_id = 1)) ORDER BY loser_rank DESC LIMIT 1;
select winner_id, winner_name, winner_rank_points, winner_seed, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, winner;
SELECT DISTINCT country_code FROM players;
select count(*) from matches where winner;
SELECT DISTINCT name FROM losers;
SELECT COUNT(DISTINCT loser_;
SELECT tourney_name FROM tourney WHERE num_;
SELECT DISTINCT tourney_name FROM tournaments WHERE tourney_id IN (SELECT tourney_id FROM matches WHERE winner_id;
SELECT winner_nameFROM matchesWHERE winner_id IN (SELECT winner_id FROM matches WHERE winner_id = 1)AND winner_id IN (SELECT winner_id FROM matches WHERE winner_id = 2)ORDER BY winner_name;
SELECT player_id, winner_name, winner_rank_points, winner_rank FROM matches WHERE winner_id = 1 AND winner_name = 'Roger Federer' AND winner_rank_points > 0 AND winner_rank > 0 ORDER BY winner_rank_points DESC, winner_rank LIMIT 1;
SELECT COUNT(*) FROM matches WHERE year >= 2013 AND year <= 2016 AND winner_;
select count(*) from matches where year = 2013 or year = 2016 and winner_id = 3query:;
SELECT country_code, first_name FROM players WHERE winner_id = 1 AND winner_name = 'Serena Williams' AND winner_hand = 'right' AND winner_ht = '6-0' AND winner_id = 2 AND winner_name = 'Maria Sharapova' AND winner_hand = 'right' AND winner_ht = '6-0' AND winner_id = 3 AND winner_name = 'Victoria Azarenka' AND winner_hand = 'right' AND winner_ht = '6-0' AND winner_id = 4 AND winner_name = 'Li Na' AND winner;
SELECT first_name, country_code FROM players WHERE winner_id = 1 AND winner_name = 'Serena Williams' AND winner_country_code = 'USA';
SELECT first_name, country_codeFROM playersWHERE birth_date = (SELECT max(birth_date) FROM players)ORDER BY birth_date;
select first_name, country_code from players where player_id = 1;
SELECT player_id, first_name, last_name, birth_dateFROM playersORDER BY birth_dateLIMIT 10;
SELECT first_name, last_name, birth_date FROM players ORDER BY birth_date;
SELECT player_id, first_name, last_name, hand, ranking_;
SELECT first_name, last_name FROM players WHERE hand = 'left' ORDER;
SELECT first_name, country_codeFROM playersWHERE matches.winner_id = players.player_idORDER BY matches.winner_rank_points DESCLIMIT 1foreign_keys:SELECT * FROM foreign_keysprimary_keys:SELECT * FROM primary_keysSQL query:SELECT * FROM matchesWHERE matches.loser_id = players.player_idORDER BY matches.loser_rank_points DESCLIMIT 1foreign_keys:SELECT * FROM foreign_keysprimary_keys:SELECT * FROM primary_keysSQL query:SELECT * FROM rankingsWHERE rankings.player_;
SELECT first_name, country_code FROM players WHERE player_id =;
SELECT year FROM matches WHERE matches.matches_count > (SELECT matches.matches_count FROM matches WHERE matches.matches_count > (SELECT matches.matches_count FROM matches WHERE matches.matches_count > (SELECT matches.matches_count FROM matches WHERE matches.matches_count > (SELECT matches.matches_count FROM matches WHERE matches.matches_count > (SELECT matches.matches_count FROM matches WHERE matches.matches_count > (SELECT matches.matches_count FROM matches WHERE matches.matches_count > (SELECT matches.matches_count FROM matches WHERE matches.matches_count > (SELECT matches.matches_count FROM matches WHERE matches.matches_count > (SELECT;
SELECT year, COUNT(*) FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;
SELECT winner_name, winner_rank_points FROM matches WHERE winner_id = 1;
SELECT winner_name, SUM(rank_points) AS rank_points FROM matches WHERE winner_id = 1 GROUP BY winner_name ORDER BY rank_points DESC LIMIT 1;
SELECT winner_name, winner_rank_points, winner_rank FROM matches WHERE winner_id = 1 AND winner_name = 'Roger Federer' ORDER BY winner_rank_points DESC LIMIT 1;
SELECT winner_name FROM matches WHERE;
SELECT winner.name, winner.country_code, winner.hand, winner.birth_date, winner.ranking_points, winner.tours, loser.name, loser.country_code, loser.hand, loser.birth_date, loser.ranking_points, loser.tours, winner.match_num, loser.match_num, winner.loser_id, loser.loser_id, winner.loser_name, loser.loser_name, winner.loser_name, loser.loser_name, winner.loser_name, loser.loser_name, winner.loser_name, loser.loser_name, winner.loser_name, loser.loser_name,;
SELECT winner_name,loser_name FROM matches WHERE winner_id = 1 OR loser_id = 1 ORDER BY winner_name,loser_name;
SELECT player_id, AVG(ranking) AS avg_ranking, first_nameFROM rankingsGROUP BY player_id, first_nameORDER BY avg_ranking DESCLIMIT 10SELECT player_id, AVG(ranking) AS avg_ranking, first_nameFROM rankingsGROUP BY player_id, first_nameORDER BY avg_ranking DESCLIMIT 10SELECT player_id, AVG(ranking) AS avg_ranking, first_nameFROM rankingsGROUP BY player_id, first_nameORDER BY avg_ranking DESCLIMIT 10SELECT player_id, AVG(ranking) AS avg_ranking, first_nameFROM rankings;
SELECT first_name, AVG(ranking) FROM players GROUP BY first_name;
SELECT player_id, SUM(ranking_points) AS total_ranking_points, first_nameFROM rankingsGROUP BY player_id, first_nameORDER BY total_ranking_points DESCLIMIT 10foreign_keys = [matches.winner_id = rankings.player_id,matches.loser_id = rankings.player_id]primary_keys = [matches.winner_id = rankings.player_id,matches.loser_id = rankings.player_id]def get_player_name(player_id):    return players.get(player_id).first_namedef get_player_age(player_;
SELECT first_name, SUM(ranking_points) AS total_ranking_points FROM players GROUP BY first_name ORDER BY total_ranking_points DESC;
SELECT country_code, COUNT(*) AS num_playersFROM playersGROUP BY country_codeORDER BY num_players DESCLIMIT 10table countries, columns = [*,country_code,country_name]table players, columns = [*,country_code,country_name,country_code,country_name,country_code,country_name,country_code,country_name,country_code,country_name,country_code,country_name,country_code,country_name,country_code,country_name,country_code,country_name,country_code,country_name,country_code,country_name,country_code,country_name,;
select country_code, count(*) as num_players from;
SELECT country_code, COUNT(*) AS num_playersFROM playersGROUP BY country_codeORDER BY num_players DESCLIMIT 1country_code:country_codenum_players:num_playersThe problem is that I get the following error:Error: (1064, "You have an error in your SQL syntax;
SELECT country_code, COUNT(*) FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country_code, COUNT(*) AS num_playersFROM playersGROUP BY country_codeHAVING num_players > 50ORDER BY num_players DESCLIMIT 10table countries, columns = [*,country_code,country_name]table players, columns = [*,country_code,country_name,country_code,country_name,country_code,country_name,country_code,country_name,country_code,country_name,country_code,country_name,country_code,country_name,country_code,country_name,country_code,country_name,country_code,country_name,country_code,country_;
SELECT country_code FROM countries WHERE players.country_code IN (SELECT country_code FROM countries WHERE players.country_code IS NOT NULL);
SELECT tourney_date, COUNT(*) AS total_toursFROM rankingsWHERE tourney_date >= '2015-01-01'GROUP BY tourney_dateORDER BY tourney_date;
select count(*) from rankings where ranking_date > '2018-01-01' and ranking;
SELECT year, COUNT(*) AS matches FROM matches GROUP BY year;
select count(*) from;
SELECT winner_name, winner_rank FROM matches WHERE winner_id IN (SELECT winner_id FROM matches WHERE winner_age < 25) ORDER BY winner_rank ASC;
SELECT winner_name,winner_rank FROM matches WHERE winner_id IN (SELECT player_id FROM players WHERE player_id = 1);
select count(distinct winner_id;
SELECT COUNT(DISTINCT winner_hand) AS "left_handed_winners" FROM matches WHERE winner_hand = 'left' AND winner_id IN (SELECT player_id FROM players WHERE player_id = 1)The query above returns the number of left handed winners who participated in the wta championships. @user2357112 I've added the query to the question. I'm not sure what you mean by "the query above returns the number of left handed winners who participated in the wta championships."  The query returns the number of left handed winners who participated in the wta championships.  The query returns the number of left handed winners who participated in the wta championships;
SELECT first_name, country_code, birth_date, ranking, player_idFROM rankingsWHERE ranking = (SELECT max(ranking) FROM rankings)AND player_id = (SELECT player_id FROM matches WHERE winner_id = ;
SELECT first_name, country_code, birth_date FROM rankings WHERE ranking = (SELECT max(ranking) FROM rankings) AND player_id = (SELECT player_id FROM matches WHERE winner_id = (SELECT winner_id FROM matches));
SELECT hand, COUNT(*) AS num FROM matches GROUP BY hand;
select count(*) from matches where hand = 'hand1' and winner_id = 'player1' and loser_id = 'player2' and loser_hand = 'hand2' and loser_ht = 'ht2' and loser_name = 'player3' and loser_rank = 'rank2' and loser_rank_points = 'rank2' and loser_seed ='seed2' and loser_tourney_date = 'tourney_date2' and loser_tourney_id = 'tourney_id2' and loser_tourney_level = 'level2' and loser_tourney_name ;
select count(*) from battle where lost_in_battle = 1 and disposition_of_ship = 'captured';
select * from battle, ship, death where battle.id = ship.id and ship.lost_in_battle = battle.id and death.caused_by_ship_id = ship.id order by name, tonnage desc;
SELECT battle.name, battle.date, battle.resultFROM battleWHERE battle.lost_in_battle = 1ORDER BY battle.dateLIMIT 10SELECT ship.name, ship.tonnage, ship.location, ship.disposition_of_shipFROM shipWHERE ship.lost_in_battle = 1ORDER BY ship.nameLIMIT 10SELECT battle.name, battle.date, battle.result, ship.name, ship.tonnage, ship.location, ship.disposition_of_shipFROM battleJOIN ship ON battle.lost_in_battle = ship.idWHERE battle.date = ;
select max(death.killed) as max_killed, min(death.killed) as min_killed from death group by 1 order by 1;
select avg(injured) from battle, death where battle.id = death.caused_by_ship_id and battle.lost_in_battle = 1 and death.killed = 1 and death.injured > 0 and death.note = 'injured';
SELECT * FROM death WHERE caused_by_ship_id = 't' AND note = 'battle';
SELECT * FROM battle WHERE name <> 'boril' AND name <> 'boril';
SELECT battle.id, battle.name, battle.date, battle.bulgarian_commander, battle.latin_commander, battle.result FROM battle WHERE battle.lost_in_battle = 1 AND battle.ship_type = 'brig';
SELECT battle.id, battle.name, battle.date, battle.bulgarian_commander, battle.latin_commander, battle.result FROM battle WHERE battle.lost_in_battle = 1 AND battle.killed > 10 AND battle.killed < 100;
SELECT ship.name, COUNT(ship.id) AS total_injuries FROM battle INNER JOIN ship ON battle.lost_in_battle = ship.id GROUP BY ship.name ORDER BY total_injuries DESC LIMIT 1;
SELECT DISTINCT battle.name FROM battle WHERE battle.bulgarian_commander = 'kaloyan' AND battle.latin_commander = 'baldwin i';
SELECT COUNT(*) FROM ship WHERE lost_in_battle = falsequery:how many different results are there for the ships that;
SELECT COUNT(battle.id) FROM battle WHERE battle.lost_in_battle = FALSE AND battle.tonnage = 225;
SELECT name, date FROM battle WHERE lost_in_battle = 'lettice' AND name = 'hms atalanta';
SELECT * FROM battle WHERE lost_in_battle = 0 AND name = 'english channel';
SELECT * FROM death WHERE note LIKE '%east%';
select department_id,department_name,department_description,other;
select * from sections;
select count(*) from student_enrolment where student_enrolment.student_enrolment_id =? and student_enrolment.semester_id =? and student;
select count(*) from student_enrolment_coursesquery:how;
select department_name from departments where department_id =;
select course_name,course_description from courses where course_name like ;
select zip_postcode from addresses where address_id =? and;
select zip_post;
select department_name,department_id from departments where department_name like '%degree%' order by count(department_id) desc limit 10;
select department_name, department_id from departments where count(student_enrolment_id) = (select max(count;
select count(distinct department_id) from departments where department_name = 'any'query:how many departments offer;
select count(distinct student_enrolment_id) from student_enrolment where student_enrolment_id in (select student_;
select count(distinct student_enrolment_id) from student_enrolment where degree_program_id = 1 and semester_id = 1 and student_enrolment_id in (select;
select count(*) from degree_programs where department_id = 1;
select department_name from degree_programs where department_id =? and count(degree;
select count(student_enrolment_id) from student_enrolment where semester_id = ;
select degree_program_name,degree_program_description from degree_programs where degree_program_id in (select degree_program_id from student_enrolment;
select degree_program_name,degree_program_description from degree_programs where degree_program_id in (select degree_program_id from student_enrolment;
select degree_program_name,degree_program_id from degree_programs where;
select course_name,course_id from courses where course_id in (select course_id from student_enrolment_courses where student_enrolment_id = 1) order by course_name;
select section_name from sections order by section_name desc limit 10;
;
select * from student_enrolment where semester_name = 'Fall 2018' order by count(*) desc limit 1;
select * from student_enrolment_courses where student_enrolment_id = (select max(student_enrolment_;
select * from departments where department_;
select department_name, department_description from departments where department_name like '%computer%'query:what is the department description for the one whose name has the word;
select first_name, middle_name, last_name, student_enrolment_courses.student_course_id from student_enrolment_courses where student_enrolment_courses.student_course_id = 2 and student_enrolment_courses.student_enrolment_id = 1;
select first_name, middle_name, last_name, student_enrolment_id from student_enrolment where student_enrolment.semester_id = 2 and student_enrolment.student_id = 1;
SELECT first_name, middle_name, last_nameFROM studentsWHERE student_enrolment.student_id = students.student_idAND student_enrolment.semester_id = semesters.semester_idAND student_enrolment.degree_program_id = degree_programs.degree_program_idAND student_enrolment.student_enrolment_id = student_enrolment_courses.student_enrolment_idAND student_enrolment.course_id = courses.course_idAND student_enrolment.student_course_id = student_enrolment_courses.student_course_id;
select first_name, middle_name, last_name from student_enrolment where student_enrolment.student_id = 1 and student_enrolment.semester_id = 1 and student_enrolment.degree_program_id = 1;
select count(distinct(student_enrolment.student_enrolment_id)) as "most_enrolled_program" from student_enrolment where student_enrolment.student_enrolment_id in (select student_enrol;
select degree_summary_name, count(*) as num_students from student_enrolment group by degree_summary_name order by num_students desc limit 1;
select * from student_enrolment where student_enrolment.student_id =? and student_enrolment.semester_id =? and student_enrolment.degree_program_id =? order by student_enrolment.student_enrolment_id desc limit 1;
select * from degree_programs where degree_summary_name = 'Computer Science' and count(student_enrolment_id) > 100;
select student_id, first_name, middle_name, last_name, count(*) as number_of_enrollments from student_enrolment group by student_id having count(*) > 3 order by number_of_enrollments desc;
select first_name, middle_name, last_name, count(*) as number_of_enrollments from student_enrolment group by first_name, middle_name, last_name having number_of_enrollments > 1 order by number_of_enrollments desc limit 1;
select semester_name from semesters where semester_id not in (select student_enrolment_id from student_enrolment_courses where student_course_id = '2019-2020-Spring');
select semester_name from semesters where semester_id =?query:what is the name of the semester with;
select course_name from courses where student_enrolment_id in (select student_enrolment_id from;
select department_name from departments where student_enrolment_id in (select student_enrolment_id from student_enrolment where student_enrolment_id in (select student_enrolment_;
select course_name from student_enrolment_courses where student_enrolment_courses.student_enrolment_id = 1;
select course_name from student_enrolment where student_enrolment;
select * from students where current_address_id is null and permanent_address_id is null and state_province_county = 'north carolina' and country = 'united states' and other_details = 'currently living in north carolina but not registered in any degree program';
select last_name from students where state_province_county = 'north carolina' and permanent_address_id is null;
SELECT transcript_contents.transcript_id,transcript_contents.student_course_id,transcript_contents.transcript_dateFROM transcript_contentsWHERE transcript_contents.student_course_id IN (SELECT student_course_id FROM student_enrolment_courses WHERE student_course_id = 2)AND transcript_contents.transcript_date >= '2018-01-01'ORDER BY transcript_contents.transcript_date DESC;
select transcript_contents.transcript_id,transcript_contents.student_course_id,transcript_contents.course_id,transcript_contents.student_course_id,transcript_contents.student_course_id,transcript_contents.student_course_id,transcript_contents.student_course_id,transcript_contents.student_course_id,transcript_contents.student_course_id,transcript_contents.student_course_id,transcript_contents.student_course_id,transcript_contents.student_course_id,transcript_contents.student_course_id,transcript_contents.student_course_id,transcript_contents.student_course_;
select * from student_enrolment_courses where student_enrolment_id = 1 and student_course_id = 2 and student_first_name = 'timmothy' and student_last_name = 'ward';
select student_enrolment.student_id,student_enrolment.student_enrolment_id,student_enrolment.student_course_id,student_enrolment.student_enrolment_id,student_enrolment.student_course_id,student_enrolment.student_id,student_enrolment.semester_id,student_enrolment.degree_program_id,student_enrolment.course_id,student_enrolment.course_name,student_enrolment.course_description,student_enrolment.other_details,student_enrolment.student_enrolment_id,student_enrolment.student_enrol;
select first_name, middle_name, last_name from student_enrolment where student_enrolment.student_id = 1 order by first_name, middle_name, last_name;
select first_name, middle_name, last_name from students where student_enrolment_id = 1;
select first_name, middle_name, last_name from student_enrolment where student_enrolment.student_id = 1 order by first_name, middle_name, last_name;
select first_name, middle_name, last_name from students where current_address_id = 1 order by first_name, middle_name, last_name limit 1;
SELECT first_nameFROM studentsWHERE permanent_address_id!= current_address_idORDER BY first_name;
select first_name from students where permanent_address_id <> current_address_id;
select address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details from addresses where address_id in (select address_id from student_enrolment_courses where student_enrolment_id = 1) order by count(*) desc limit 1;
select * from addresses where count(student_enrolment.student_id) = (;
select * from transcripts where student_enrolment_id =? and transcript_date >? order by transcript_date desc limit 1The problem is that I get the following error:ERROR:  column "transcript_id" must appear in the GROUP BY clause or be used in an aggregate functionLINE 1: select * from transcripts where student_enrolment_id =? and transcript_date >? order by transcript_date desc limit 1;
select avg(transcript_date) from transcript_contents group by student_course_id;
select transcript_contents.transcript_id, transcript_contents.student_course_id, transcript_contents.transcript_date from transcript_contents where transcript_contents.transcript_id = 1;
select * from transcript_contents where transcript_id = '1' and student_course_id = '1' order by transcript_date desc limit 1;
select count(*) from transcripts where transcript_date > '2018-01-01' and transcript_date < '2018-01-31' and transcript_id in (select transcript_id from transcripts where transcript_date > '2018-01-01' and transcript_date < '2018-01-31')query:how many;
select count(*) from transcripts where student_enrolment_id =?def get_transcripts(student_enrolment_id):    return [transcript.transcript_id for transcript in Transcript.objects.filter(student_enrolment_id=student_enrolment_id).order_by('-transcript_date')]def get_transcript_contents(transcript_id):    return [transcript_contents.transcript_id for transcript_contents in TranscriptContent.objects.filter(transcript_id=transcript_id).order_by('-transcript_date')]def get_transcript_contents_by_student_enrolment(;
select transcript_contents.transcript_id,transcript_contents.transcript_date from transcript_contents where transcript_contents.transcript_id = 123456789 and transcript_contents.transcript_;
select;
SELECT COUNT(DISTINCT transcript_contents.transcript_id) AS "how many times at most can a course enrollment result show in different transcripts?", transcript_contents.transcript_id, transcript_contents.student_course_idFROM transcript_contentsWHERE transcript_contents.transcript_id IN (SELECT transcript_id FROM transcripts WHERE student_course_id = student_enrolment_courses.student_course_id)GROUP BY transcript_contents.transcript_id, transcript_contents.student_course_idORDER BY transcript_contents.transcript_id;
select count(distinct transcript_contents.transcript_id) as max_transcript_id, transcript_contents.transcript_id from transcript_contents group by transcript_contents.transcript_id order by transcript_contents.transcript_id;
SELECT * FROM transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM transcripts)I'm not sure if I'm on the right track, but I'm trying to get the query to return the transcript with the least number of results. @jarlh I'm not sure how to do that. I'm not sure how to get the query to return the transcript with the least number of results. `SELECT * FROM transcripts WHERE transcript_date = (SELECT MIN(transcript_date) FROM transcripts)` I'm not sure how to get the query to return the transcript with the least number of results. `SELECT * FROM transcripts WHERE transcript_;
select transcript_id,transcript_date from transcript_contents where transcript_id = (select min(transcript_id) from transcript_contents) and transcript_id = (select min(transcript_id) from transcript_contents) and transcript_id = (select min(transcript_id) from transcript_contents) and transcript_id = (select min(transcript_id) from transcript_contents) and transcript_id = (select min(transcript_id) from transcript_contents) and transcript_id = (select min(transcript_id) from transcript_contents) and transcript_id = (select min(transcript_id) from transcript_contents);
SELECT * FROM student_enrolment WHERE student_enrolment.student_id = '1' AND student_enrolment.semester_id = '2018-2019'The problem is that I get the following error:SQLSTATE[42S22]: Column not found: 1054 Unknown column'student_enrolment.student_id' in 'where clause'I have tried to use the following code:SELECT * FROM student_enrolment WHERE student_enrolment.student_id = '1' AND student_enrolment.semester_id = '2018-2019'But it doesn't;
select * from student_enrolment where student_enrolment.student_enrolment_id in (select student_enrolment_id from student_enrolment where student_enrolment.student_id = '1' and student_enrolment.semester_id = '2018-2019');
select count(*) from student_enrolment where semester_id = 1 and course_id =;
select department_id,department_name,department_description,department_summary_name,department_summary_description,department_summary_id from departments where department_id in (select department_id from student_enrolment_courses where student_enrolment_id;
select * from student_enrol;
select * from student_enrolment where student_enrolment.student_id = 'Z' order by student_enrolment.student_id descquery:what other details;
select * from sections;
select course_name,course_description from courses where course_name = 'h';
select first_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details from students where permanent_address_id = 09700166582 or cell_mobile_number = 09700166582 or email_address = 09700166582 or ssn = 09700166582 or date_first_registered = '2018-01-01' or date_left = '2018-01-01' or other_student_details = 'haiti';
select first_name from students where permanent_address_id = 09700166582 or cell_mobile_number = 09700166582;
select *;
SELECT title FROM tv_series WHERE channel = 'cartoon' ORDER BY title;
SELECT * FROM cartoon WHERE;
SELECT * FROM tv_series WHERE directed_by = 'ben jones';
SELECT COUNT(*) FROM tv_series WHERE (cartoon.id = 1) AND (directed_by = 'joseph kuhr');
SELECT COUNT(*) FROM tv_series WHERE channel = 'cartoon' AND written_by = 'joseph kuhr';
select * from cartoon order by air_date desc;
SELECT * FROM tv_series WHERE channel = 'cartoon' ORDER BY air_date DESC;
SELECT title FROM cartoon WHERE director LIKE '%ben jones%' OR director LIKE '%brandon vietti%';
SELECT title FROM tv_series WHERE director = 'ben jones' OR director = 'brandon vietti';
select country, count(*) from tv_channel group by country order by count(*) desc limit 10;
select country, count(*) from tv_channel group by country order by count(*) desc limit 10;
select count(distinct series_name) as series_count, count(distinct content) as content_count from tv_channel group by series_name, content order by series_count desc, content_count desc limit 10;
select count(*) from tv_series where channel = ;
SELECT * FROM tv_channel WHERE channel ='sky radio';
SELECT * FROM tv_series WHERE channel ='sky radio';
SELECT * FROM tv_channel WHERE series_name ='sky radio' AND channel ='sky radio';
SELECT * FROM tv_series WHERE channel ='sky radio' AND series_name ='sky radio';
select count(*) from tv_channel where language = 'english';
select count(*) from tv_channel where language = 'english';
select * from tv_channel where language = 'english' order by number of tv channel desc limit 10;
select * from tv_channel where language = 'en' and count(distinct language) = 1;
select language, count(*) from tv_channel group by language order by count(*) desc limit 10table tv_channel, columns = [*,id,country,language,content,pixel_aspect_ratio_par,hight_definition_tv,pay_per_view_ppv,package_option]table tv_series, columns = [*,id,episode,air_date,rating,share,18_49_rating_share,viewers_m,weekly_rank,channel]foreign_keys = [tv_channel.id,tv_series.id,cartoon.id]primary_keys = [tv_series.channel = tv_channel.id,;
select count(*) as number_of_channels from tv_channel where language = 'en';
SELECT tv_channel.channel, tv_series.series_name FROM tv_channel INNER JOIN tv_series ON tv_channel.id = tv_series.channel WHERE tv_series.id = 1;
SELECT * FROM tv_series WHERE channel = 'cartoon' AND title = 'the rise of the blue beetle';
select * from tv_series where channel ='sky radio';
SELECT * FROM tv_series WHERE channel ='sky radio' AND series_name = 'cartools';
select * from tv_series order by rating desc limit 10;
SELECT * FROM tv_series WHERE rating > 7 ORDER BY rating DESC LIMIT 10;
SELECT * FROM tv_series WHERE rating > 8 ORDER BY rating DESC LIMIT 3;
SELECT * FROM tv_series WHERE rating = (SELECT MAX(rating) FROM tv_series) ORDER BY rating DESC LIMIT 3;
select * from tv_series where channel = 'Cartoon Network' and rating > 7.0 order by rating desc limit 10;
select max(share) as max_share, min(share) as min_share from tv_series group by id;
SELECT * FROM tv_series WHERE episode = 'a love of a lifetime' AND channel = 'cartoon';
select * from tv_series where id = 'a love of a lifetime';
SELECT * FROM tv_series WHERE episode = 'a love of a lifetime' AND rating > 8.0 ORDER BY weekly_rank DESC LIMIT 10;
SELECT * FROM tv_series WHERE id = 1 AND episode = 'a love of a lifetime' AND rating > 8.0 ORDER BY weekly_rank DESC LIMIT 1;
SELECT tv_channel.channel, tv_series.series_name FROM tv_series, tv_channel WHERE tv_series.channel = tv_channel.id AND tv_series.id = 1;
SELECT * FROM tv_series WHERE episode = 'a love of a lifetime';
select * from tv_series where channel ='sky radio';
SELECT * FROM tv_series WHERE channel ='sky radio' AND episode = 'episode 1';
SELECT COUNT(DISTINCT director) AS count FROM cartoon WHERE director IN (SELECT director FROM director_director WHERE director_id = 1)SELECT COUNT(DISTINCT director) AS count FROM cartoon WHERE director IN (SELECT director FROM director_director WHERE director_id = 2)SELECT COUNT(DISTINCT director) AS count FROM cartoon WHERE director IN (SELECT director FROM director_director WHERE director_id = 3)SELECT COUNT(DISTINCT director) AS count FROM cartoon WHERE director IN (SELECT director FROM director_director WHERE director_id = 4)SELECT COUNT(DISTINCT director) AS count FROM cartoon WHERE;
select count(*) from tv_series where director_id = 6query:how many;
SELECT * FROM tv_series WHERE id = 1;
SELECT * FROM tv_series WHERE channel = 'Cartoon Network' AND production_code = '2018-01-01';
select * from tv_channel where channel = 'HBO' and series_name = 'Game of Thrones';
SELECT * FROM tv_series WHERE channel = 'cartoon' AND (series_name = 'The Simpsons' OR series_name = 'Family Guy');
select * from tv_channel where series_name = 'the simpsons' and country = 'usa' and language = 'english' and content = 'comedy' and pixel_aspect_ratio_par = '1.333' and hight_definition_tv = 'true' and pay_per_view_ppv = 'false' and package_option = 'true' and rating > 8 and share > 0.5 and viewers_m > 0.5 and weekly_rank > 1000 and channel = 'fox';
SELECT country, COUNT(*) AS count FROM tv_series WHERE series_name = 'Cartoon Network' AND country IN ('United States', 'United Kingdom') GROUP BY country ORDER BY count DESC LIMIT 10;
select * from tv_series where (cartoon.id = 1) and (country = 'United States') and (not exists (select * from tv_channel where channel = 1));
SELECT country, COUNT(*) AS count FROM tv_series WHERE NOT EXISTS (SELECT * FROM tv_channel WHERE channel = 'cartoon') GROUP BY country ORDER BY count DESC LIMIT 10;
SELECT tv_series.series_name, tv_channel.country, tv_channel.language, tv_channel.content, tv_channel.pixel_aspect_ratio_par, tv_channel.hight_definition_tv, tv_channel.pay_per_view_ppv, tv_channel.package_optionFROM tv_seriesINNER JOIN tv_channel ON tv_series.channel = tv_channel.idWHERE tv_series.id IN (SELECT id FROM cartoon)AND tv_channel.id = 1ORDER BY tv_series.id, tv_channel.idLIMIT 1SELECT tv_series.series_name, tv_channel.country, tv;
SELECT tv_channel.series_name, tv_channel.country, tv_series.title, tv_series.directed_by, tv_series.written_by, tv_series.original_air_date, tv_series.production_code, tv_series.channel, tv_series.id, tv_series.hight_definition_tv, tv_series.pay_per_view_ppv, tv_series.package_option, tv_series.id, tv_series.id, tv_series.id, tv_series.id, tv_series.id, tv_series.id, tv_series.id, tv_series.id, tv_series.id, tv_series.id, tv;
SELECT * FROM tv_channel WHERE channel = 'Cartoon Network' AND country = 'United States'SELECT * FROM tv_channel WHERE channel = 'Cartoon Network' AND country = 'United States'SELECT * FROM tv_channel WHERE channel = 'Cartoon Network' AND country = 'United States'SELECT * FROM tv_channel WHERE channel = 'Cartoon Network' AND country = 'United States'SELECT * FROM tv_channel WHERE channel = 'Cartoon Network' AND country = 'United States'SELECT * FROM tv_channel WHERE channel = 'Cartoon Network' AND country;
SELECT * FROM tv_channel WHERE channel <> 'EN' AND country <> 'US' AND pixel_aspect_ratio_par <> '1.333' AND pixel_aspect_ratio_par <> '1.333' AND pixel_aspect_ratio_par <> '1.333' AND pixel_aspect_ratio_par <> '1.333' AND pixel_aspect_ratio_par <> '1.333' AND pixel_aspect_ratio_par <> '1.333' AND pixel_aspect_ratio_par <> '1.333' AND pixel_aspect_ratio_par <> '1.333' AND pixel_aspect_ratio_par ;
SELECT * FROM tv_channel WHERE country IN (SELECT country FROM tv_channel WHERE channel = 'Cartoon Network') AND (SELECT COUNT(*) FROM tv_channel WHERE country = 'United States' AND channel = 'Cartoon Network') > 2table tv_channel, columns = [*,id,country,channel]table tv_series, columns = [*,id,episode,air_date,rating,share,18_49_rating_share,viewers_m,weekly_rank,channel]foreign_keys = [tv_channel.id,tv_series.id,cartoon.id]primary_keys = [;
SELECT id FROM tv_channel WHERE id IN (SELECT id FROM tv_series WHERE channel = 'cartoon');
SELECT * FROM tv_channel WHERE NOT EXISTS (SELECT ;
SELECT id FROM tv_channel WHERE NOT EXISTS (SELECT id FROM tv_series WHERE tv_series.channel = tv_channel.id AND tv_series.director = 'ben jones');
SELECT * FROM tv_channel WHERE channel = 'Cartoon Network' AND NOT EXISTS (SELECT * FROM tv_series WHERE series_name = 'Ben 10' AND channel = 'Cartoon Network')The result should be:channel | series_name | package_option | rating | share | 18_49_rating_share | viewers_m | weekly_rank | channelCartoon | Ben 10 | | | | | | |I've tried to use the following code:SELECT * FROM tv_channel WHERE channel = 'Cartoon Network' AND NOT EXISTS (SELECT;
SELECT * FROM tv_channel WHERE NOT EXISTS (SELECT * FROM tv_series WHERE tv_series.channel = tv_channel.id AND tv_series.series_name = 'cartoon');
select count(*) from poker_player where nationality = 'American' and height > 180 and best_finish > 5 and money_rank > 10query:;
select count(*) from poker_player;
select * from poker_player where final_table_made = 'final table' order by earnings desc limit 10;
select * from poker_player where final_table_made = 'final table' order by earnings desc limit 10;
select * from poker_player where final_table_made = 'final table' and best_finish = 'winner';
select people.people_id,poker_player.final_table_made,poker_player.best_finish,poker_player.money_rank,poker_player.earnings from people,poker_player where people.people_id = poker_player.people_id and poker_player.final_table_made = 'final table' and poker_player.best_finish = 'winner' and poker_player.money_rank = '1st' and poker_player.earnings > 1000000;
select avg(earnings) from poker_player group by nationality;
select avg(earnings) from poker_player group by poker_player_id;
select poker_player.name, poker_player.money_rank from poker_player, people where poker_player.people_id = people.people_id and poker_player.money_rank = (select max(money_rank) from poker_player);
select * from poker_player where final_table_made = 1 order by earnings desc limit 1;
select * from poker_player where final_table_made < 200000 order by money_rank desc limit 1;
select max(final_table_made) from poker_player where final_table_made < 200000;
select name from poker_player where people_id = 1;
select * from poker_player where people_id = 1;
select * from poker_player where earnings > 300000;
select * from poker_player where earnings > 300000;
select * from poker_player order by final_table_made ascforeign_keys:poker_player.poker_player_id ;
select * from poker_player where people_id = 1 order by final_table_made asc;
select * from poker_player where final_table_made = 1 and best_finish = 1 and money_rank = 1 and earnings = 0 order by earnings desc limit 1;
select * from poker_player where final_table_made = 1 and best_finish = 2 order by earnings desc limit 1;
select poker_player.name, poker_player.money_rank from poker_player, people where poker_player.people_id = people.people_id and poker_player.final_table_made = 1 order by poker_player.money_rank desc limit 1;
select * from poker_player where height = (select max(height) from poker_player);
select avg(earnings) from poker_player where height > 200;
select avg(earnings) from poker_player where height > 200;
select * from poker_player where final_table_made = 'final table' order by earnings desc limit 10;
select * from poker_player order by earnings desc limit 10;
select nationality, count(*) from people group by nationality order by nationality;
select count(*) from people where nationality = 'American';
select nationality from people where nationality = 'American';
select nationality from people group by nationality having count(*) > 1 order by count(*) desc;
select nationality from poker_player where people.people_id in (select people_id from people where nationality = 'American');
select nationality from poker_player where people.people_id in (select people_id from poker_player where people.people_id = 1);
select people.name, people.birth_date from people order by people.name asc;
select name, birth_date from people order by name asc;
select * from people where nationality!= 'russia';
select name from people where nationality!= 'russian';
select name from people where people.people_id not in (select poker_player_id from poker_player);
select name from people where nationality = 'USA' and name not in (select name from poker_player where final_table_made = 'final table');
select count(distinct nationality) from poker_player;
select nationality from poker_player where nationality <> 'american';
select count(*) from votes where contestant_number = 4query:how many votes are;
select contestant_number,contestant_name from votes order by contestant_name desc;
SELECT votes.contestant_number, votes.phone_number, votes.state, contestants.contestant_number, area_code_state.stateFROM votesINNER JOIN contestantsON votes.contestant_number = contestants.contestant_numberINNER JOIN area_code_stateON votes.state = area_code_state.stateWHERE votes.contestant_number = 1ORDER BY votes.contestant_number, votes.phone_number, votes.state, contestants.contestant_number, area_code_state.stateLIMIT 10The query above returns the following result:contestant_number | phone_;
select max(phone_number) from votes where state = 'NY'select min(phone_number) from votes where state = 'NY'foreign_keys;
select * from votes where state = 'ca' and created > '2015-01-01';
SELECT * FROM votes WHERE contestant_number!= 'jessie alloway';
SELECT distinct(state), created FROM votes WHERE contestant_number = 1 ORDER BY created DESC LIMIT 10;
SELECT contestant_number,contestant_name FROM votes WHERE votes.contestant_number IN (SELECT contestant_number FROM contestants WHERE state = 'CA');
select contestant_number,contestant_name from votes where votes.contestant_number = contestants.contestant_number and votes.state = area_code_state.state order by votes.contestant_number desc limit 1;
SELECT COUNT(*) FROM votes WHERE state IN ('ny', 'ca');
select count(*) from votes where contestant_number not in (select contestant_number from contestants where state = 'NY');
select * from votes where state = 'NY' and contestant_number = '1';
SELECT * FROM votes WHERE contestant_number = 'tabatha gehling' AND state = 'California' AND phone_number = '555-555-5555';
select area_code from votes where contestant_number = 'tabatha gehling' and state = 'CA' and contestant_number = 'kelly clauss' and state = 'CA';
select contestant_name from contestants where contestant_name like '%al%';
select name from country where countrycode = 'AF' and year(indepyear) = 1950;
select name, countrycode, population from country where countrycode in (select countrycode from countrylanguage where countrycode = 'en') order by population desc limit 10;
select count(*) from country where country.governmentform ='republic';
select count(*) from country where country.governmentform ='republic';
select sum(area) from country where continent = 'caribbean' and name = 'dominican republic';
select sum(area) from country where country.continent = 'Caribbean' and country.region = 'Caribbean' and country.surfacearea > 0;
select continent from country where continent = 'anguilla';
SELECT continent FROM country WHERE continent = 'anguilla';
select * from country where continent = 'Asia' and region = 'Afghanistan';
select * from country where name = 'Afghanistan' and continent = 'Asia' and region = 'Central Asia';
select * from countrylanguage where countrycode = 'AUA' and language = 'PAL';
select name, iso2 from countrylanguage where countrycode = 'AUA' and language = 'PAL';
select * from country where countrycode = 'BR' and name = 'Brazil' and population > 10000000 and lifeexpectancy > 70;
SELECT country.name, country.continent, country.population, country.lifeexpectancy, country.gnp, country.gnpold, country.localname, country.governmentform, country.headofstate, country.capital, country.code2, country.isofficial, country.percentageFROM countryWHERE country.name = 'Brazil'ORDER BY country.name;
select country.name, country.continent, country.region, country.surfacearea, country.indepyear, country.population, country.lifeexpectancy, country.gnp, country.gnpold, country.localname, country.governmentform, country.headofstate, country.capital, country.code2 from country where country.code = 'ANG';
select country.name, country.continent, country.region, country.surfacearea, country.indepyear, country.population, country.lifeexpectancy, country.gnp, country.gnpold, country.localname, country.governmentform, country.headofstate, country.capital, country.code2 from country where country.code = 'ANG' and country.continent = 'Africa' and country.region = 'Southern Africa' and country.surfacearea > 1000000 order by country.population desc limit 10;
select avg(lifeexpectancy) from country where continent = 'central africa' and region = 'africa';
select avg(lifeexpectancy) from countrylanguage where countrycode = 'CMR' and countrycode = 'CMR' and countrycode = 'CMR' and countrycode = 'CMR' and countrycode = 'CMR' and countrycode = 'CMR' and countrycode = 'CMR' and countrycode = 'CMR' and countrycode = 'CMR' and countrycode = 'CMR' and countrycode = 'CMR' and countrycode = 'CMR' and countrycode = 'CMR' and countrycode = 'CMR' and countrycode = 'CMR';
select country, lifeexpectancy from countrylanguage where countrycode = 'asia' and lifeexpectancy = min(lifeexpectancy);
SELECT country.name, countrylanguage.name, country.continent, country.region, country.surfacearea, country.population, country.lifeexpectancy, country.gnp, country.gnpold, country.localname, country.governmentform, country.headofstate, country.capital, country.code2, countrylanguage.name, countrylanguage.isofficial, countrylanguage.percentageFROM country, countrylanguageWHERE country.continent = countrylanguage.continentAND countrylanguage.isofficial = 'official'AND countrylanguage.name = 'English'ORDER BY country.lifeexpectancy DESCLIMIT 1;
select country.name, country.continent, country.population, country.gnp, country.gnpold, country.localname, country.governmentform, country.headofstate, country.capital, country.code2, country.isofficial, country.percentage from country, countrylanguage where country.code = countrylanguage.countrycode and countrylanguage.isofficial = 'true' order by country.population desc limit 10;
select count(*) from country where continent = 'asia' and gnp > 10000000000;
select avg(lifeexpectancy) from country where continent = 'africa' and countrycode = 'AF';
select avg(lifeexpectancy) from country where continent = 'africa' and governmentform ='republic' and countrycode = 'AF';
select sum(area) from country where continent = 'asia' or continent = 'europe';
select sum(area) from country where continent = 'asia' or continent = 'europe';
select count(*) from countrylanguage where countrycode = 'nl' and language = 'Dutch';
select sum(population) from countrylanguage where countrycode = 'nl' and language = 'nl' and countrycode = 'nl' and countrycode = 'nl' and countrycode = 'nl' and countrycode = 'nl' and countrycode = 'nl' and countrycode = 'nl' and countrycode = 'nl' and countrycode = 'nl' and countrycode = 'nl' and countrycode = 'nl' and countrycode = 'nl' and countrycode = 'nl' and countrycode = 'nl' and countrycode = 'nl' and countrycode = 'nl';
select avg(population) as gnp, count(*) as total from country where countrycode = 'us' group by countrycode;
select country.name, country.continent, country.population, country.gnp, country.gnpold, country.localname, country.governmentform, country.headofstate, country.capital, country.code2, country.code, country.isofficial, country.percentage, countrylanguage.name, countrylanguage.isofficial, countrylanguage.percentage, countrylanguage.code, countrylanguage.seqfrom countryleft join countrylanguage on countrylanguage.countrycode = country.codewhere country.continent = 'america'group by country.name, country.continent, country.population, country.gnp, country.gnpold, country.localname, country.governmentform,;
select count(distinct language) from sqlite_sequence where name = 'countrylanguage';
select count(distinct language) from sqlite_sequence where name = 'countrylanguage';
select count(*) from country where continent = 'africa';
select count(*) from country where continent = 'africa' and governmentform <>'republic';
select count(*) from sqlite_sequence where name = 'countrylanguage';
select count(*) from sqlite_sequence where name = 'aruba';
select count(*) from sqlite_sequence where name = 'countrylanguage';
select count(*) from sqlite_sequence where name = 'countrylanguage';
select name, count(*) from countrylanguage group by name having count(*) > 1 order by count(*) desc limit 1;
select name, count(*) as total from sqlite_sequence group by name having total = (select count(*) from sqlite_sequence where name <> 'countrylanguage');
select * from countrylanguage where countrycode = 'US' and language = 'English' order by percentage desc limit 10;
select country.name, country.continent, countrylanguage.isofficial, countrylanguage.percentage from country, countrylanguage where country.code = countrylanguage.countrycode and countrylanguage.isofficial = 'yes' and countrylanguage.percentage > 0.5 order by country.name, countrylanguage.isofficial, countrylanguage.percentage;
select count(*) from countrylanguage where countrycode = 'NL' and language = 'EN' and countrycode = 'NL' and language = 'NL';
select count(country.code) from country, countrylanguage where country.code = countrylanguage.countrycode and countrylanguage.language = 'en' and countrylanguage.isofficial = 'english' and countrylanguage.percentage > 0.5;
select name from country where countrycode in (?,?) and language = 'english' and language = 'french';
select country.name, countrylanguage.name, country.population, countrylanguage.percentagefrom country, countrylanguagewhere countrylanguage.countrycode = country.codeand countrylanguage.language = 'english'and countrylanguage.language = 'french'order by country.population desclimit 10;
select name from country where code in (select countrycode from countrylanguage where countrycode in (select countrycode from country where code = 'GB'));
select country.name, countrylanguage.name, country.code, countrylanguage.code, country.population, countrylanguage.percentage, countrylanguage.isofficial, countrylanguage.localname, countrylanguage.governmentform, countrylanguage.headofstate, countrylanguage.capital, countrylanguage.code2, countrylanguage.seqfrom country, countrylanguagewhere country.code = countrylanguage.countrycodeand countrylanguage.isofficial = 'english'and countrylanguage.localname = 'english'and countrylanguage.percentage > 0.5order by country.population desclimit 10;
select distinct continent from countrylanguage where countrycode = 'CN' and language = 'zh';
select count(*) from countrylanguage where countrycode = 'CN' and language = 'zh';
select * from country where countrycode in (?,?) and language = 'en' or language = 'nl';
select * from countrylanguage where countrycode = 'NL' and language = 'Dutch' or countrycode = 'GB' and language = 'English';
select country.name, countrylanguage.isofficial, country.population from country, countrylanguage where country.code = countrylanguage.countrycode and countrylanguage.isofficial = 'english' or countrylanguage.isofficial = 'dutch' order by country.population desc limit 10;
select country.name, countrylanguage.name, country.population from country, countrylanguage where country.code = countrylanguage.countrycode and countrylanguage.language = 'english' or countrylanguage.language = 'dutch';
select * from countrylanguage where countrycode = 'AS' and language = 'en' order by percentage desc limit 1;
select name, count(*) from countrylanguage group by name having count(*) > 1 order by count(*) desc limit 1;
select country.name, countrylanguage.name, country.population, countrylanguage.percentage from country, countrylanguage where countrylanguage.countrycode = country.code and countrylanguage.countrycode = country.code order by country.population desc limit 10;
select country.name, countrylanguage.isofficial, countrylanguage.percentage from country, countrylanguage where country.code = countrylanguage.countrycode and countrylanguage.isofficial ='republic' and countrylanguage.percentage > 0.5;
select * from city where population > (select max(population) from city where countrycode = 'GB');
select * from city where name = 'London' and language = 'en' order by population desc limit 1;
select name, population, lifeexpectancy from country where continent = 'asia' and surfacearea > 10000000 order by lifeexpectancy desc limit 1;
SELECT name, population, life expectancy FROM country WHERE continent = 'asia' AND population > 100000000 ORDER BY population DESC LIMIT 1;
select avg(lifeexpectancy) from countrylanguage where countrycode = 'EN' and language = 'EN';
select country, mean(lifeexpectancy) from countrylanguage where countrycode = 'EN' and language = 'EN' order by mean(lifeexpectancy) desc limit 10;
select count(*) from country where countrycode!= 'en';
select count(*) from country where countrycode <> 'EN';
select name, isofficial from countrylanguage where countrycode = 'BE' and isofficial = 'Dutch';
select name, isofficial from countrylanguage where countrycode = 'NLD' and isofficial = 'Dutch';
select count(distinct(country.isofficial)) from country where country.founded < 1930;
select count(distinct(countrylanguage.language)) from countrylanguage where countrylanguage.countrycode = 'DE' and countrylanguage.isofficial = 'true';
select country.name, country.continent, country.surfacearea from country, countrylanguage where country.code = countrylanguage.countrycode and countrylanguage.isofficial = 'english' and countrylanguage.percentage > 0.5 order by country.surfacearea desc limit 10;
select country.name, country.continent, country.surfacearea from country, countrylanguage where country.code = countrylanguage.countrycode and countrylanguage.isofficial = 'english' and countrylanguage.percentage > 0.5 order by country.surfacearea desc limit 10;
select country.name, country.continent, country.population, country.code, country.name, country.code2, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country.name, country;
select country.name, country.population from country, countrylanguage where country.code = countrylanguage.countrycode and countrylanguage.isofficial = 'English' and countrylanguage.percentage < 0.1 order by country.population desc limit 10;
select country.name, country.population from country, countrylanguage where country.code = countrylanguage.countrycode and countrylanguage.isofficial = 'English' and countrylanguage.percentage > 0.5 order by country.population desc limit 10;
select country.name, country.population from country, countrylanguage where country.code = countrylanguage.countrycode and countrylanguage.isofficial = 'English' and countrylanguage.percentage > 0.5 order by country.population desc limit 10;
select countrycode, name from country where name <> 'english';
select countrycode from country where name <> 'english';
select countrycode, name from country where language <> 'english' order by countrycode;
select countrycode, name, populationfrom countrywhere name not in ('england', 'wales','scotland', 'ireland')and name not in ('france', 'germany', 'italy','spain', 'portugal','sweden', 'norway', 'denmark', 'netherlands', 'poland', 'czech', 'hungary','slovakia', 'romania', 'bulgaria','moldova', 'ukraine', 'georgia', 'azerbaijan', 'turkey', 'iran', 'azerbaijan',;
select country.code, country.name, countrylanguage.isofficial, countrylanguage.percentage from country, countrylanguage where country.code <> 'EN' and countrylanguage.isofficial <> 'REP' and countrylanguage.percentage > 0.5;
select countrycode, name from country where countrycode in (select countrycode from countrylanguage where countrycode = 'en') and name not like'republic%';
select * from countrylanguage where countrycode = 'GB' and language = 'en' and (isofficial = 'no' or percentage < 0.5);
select name from countrylanguage where countrycode = 'GB' and language = 'en' and isofficial = 'false';
select * from countrylanguage where countrycode = 'CN' and language = 'zh' and country.code = 'CN';
select * from city where countrycode = 'CN' and language = 'zh';
SELECT country.name, country.continent, country.population, country.surfacearea, country.indepyear FROM country WHERE country.population < 1000000 ORDER BY country.population DESC LIMIT 1;
SELECT country.name, country.continent, country.population, country.surfacearea, country.code, countrylanguage.localname, countrylanguage.governmentform, countrylanguage.headofstate, countrylanguage.capital, countrylanguage.code2, countrylanguage.percentageFROM countryLEFT JOIN countrylanguageON country.code = countrylanguage.codeWHERE countrylanguage.percentage = (SELECT COUNT(*) FROM countrylanguage WHERE countrylanguage.countrycode = country.code)ORDER BY country.population DESC, country.continent ASC, country.surfacearea DESC, country.code ASC, countrylanguage.localname ASC, countrylanguage.governmentform ASC, countrylanguage.headofstate ASC, countrylanguage;
select * from country where population > 10000000 order by population desc limit 1;
SELECT country.name, country.population, country.continent, country.code, country.name AS headofstate, country.code AS countrycodeFROM countryWHERE country.area > (SELECT SUM(area) FROM countrylanguage)ORDER BY country.area DESCLIMIT 1;
select country.name, count(countrylanguage.isofficial) as languages from country, countrylanguage where countrylanguage.isofficial = '3' group by country.name order by languages desc;
select name, count(*) from countrylanguage group by name having count(*) > 2;
select count(district) from city where population > (select avg(population) from city);
select city.name, country.name, countrylanguage.name, country.population, countrylanguage.percentage, country.continent, country.region, country.surfacearea, country.gnp, country.gnpold, country.localname, country.governmentform, country.headofstate, country.capital, country.code2, country.code, country.name, countrylanguage.name, countrylanguage.percentage, countrylanguage.isofficial, countrylanguage.percentage, countrylanguage.name, countrylanguage.code, countrylanguage.seq, countrylanguage.name, countrylanguage.code, countrylanguage.percentage, countrylanguage.code, countrylanguage.name, countrylanguage.code, countrylanguage.percentage, countrylanguage.;
select name, sum(population) as totalpopulation from country where lifeexpectancy > 72 group by name having totalpopulation > 100000;
select country.name, country.continent, country.population, country.lifeexpectancy, country.gnp, country.gnpold, country.localname, country.governmentform, country.headofstate, country.capital, country.code2, country.code, country.isofficial, country.percentage from country, countrylanguage where country.code = countrylanguage.countrycode and countrylanguage.name = 'English' and countrylanguage.isofficial = 'en' and countrylanguage.percentage > 72 group by country.name, country.continent, country.population, country.lifeexpectancy, country.gnp, country.gnpold, country.localname, country.governmentform,;
select continent, avg(lifeexpectancy) as lifeexpectancy, avg(population) as population from country where continent = 'Africa' and lifeexpectancy < 72 group by continent order by continent;
SELECT continent, COUNT(*) AS totalpop, AVG(lifeexpectancy) AS lifeexpectancy FROM country WHERE continent IN ('Africa', 'Asia', 'Europe', 'North America', 'South America') GROUP BY continent ORDER BY totalpop DESC, lifeexpectancy DESC LIMIT 10;
select name, area from country where area > 1000000 order by area desc limit 5;
select name, surfacearea from country where population > 10000000 order by surfacearea desc limit 5;
select name, population from country where population > 10000000 order by population desc limit 3;
select name, population from country where population > (select sum(population) from country) order by population desc limit 3;
select name from country where population < 1000000 order by population desc limit 3;
select name from country where population < 1000000 order by population desc limit 3;
select count(*) from country where continent ='southasia'query:how many countries are in europe and;
select count(*) from country where continent =;
SELECT country.name, country.continent, country.population FROM country WHERE country.population >= 80000 AND country.continent = 'Europe';
SELECT country.name, country.continent, country.population, country.code, countrylanguage.name, countrylanguage.isofficial, countrylanguage.percentage, countrylanguage.localname, countrylanguage.code2, countrylanguage.gnp, countrylanguage.gnpold, countrylanguage.localname, countrylanguage.code2, countrylanguage.percentage, countrylanguage.isofficial, countrylanguage.name, countrylanguage.code, countrylanguage.seq, countrylanguage.name, countrylanguage.code, countrylanguage.isofficial, countrylanguage.percentage, countrylanguage.localname, countrylanguage.code2, countrylanguage.gnp, countrylanguage.gnpold, countrylanguage.localname, countrylanguage.code2, country;
select country.name, country.continent, country.surfacearea, country.population, country.lifeexpectancy, country.gnp, country.gnpold, country.localname, country.governmentform, country.headofstate, country.capital, country.code2, country.isofficial, country.percentage from country, countrylanguage where country.code = countrylanguage.countrycode and countrylanguage.isofficial = 'english' and country.continent = 'north america' and country.surfacearea > 3000 order by country.population desc limit 10;
SELECT country.name, country.continent, country.region, country.surfacearea, country.population, country.lifeexpectancy, country.gnp, country.gnpold, country.localname, country.governmentform, country.headofstate, country.capital, country.code2, countrylanguage.name, countrylanguage.isofficial, countrylanguage.percentageFROM countryINNER JOIN countrylanguageON country.code = countrylanguage.codeWHERE country.continent = 'north america'AND country.surfacearea > 3000GROUP BY country.name, country.continent, country.region, country.surfacearea, country.population, country.lifeexpectancy, country.;
select * from city where population between 160000 and 900000;
select * from city where population between 160000 and 900000;
select country.name, countrylanguage.percentage from countrylanguage, country where countrylanguage.countrycode = country.code order by countrylanguage.percentage desc limit 1;
select country.name, countrylanguage.name, countrylanguage.percentagefrom country, countrylanguagewhere countrylanguage.countrycode = country.codegroup by country.name, countrylanguage.name, countrylanguage.percentageorder by country.name, countrylanguage.name, countrylanguage.percentagelimit 10;
select country.name, countrylanguage.percentage from country, countrylanguage where countrylanguage.countrycode = country.code order by percentage desc limit 10;
select countrycode, count(*) as cnt from countrylanguage group by countrycode order by cnt desc limit 10;
select count(country.code) from country, countrylanguage where country.code = countrylanguage.countrycode and countrylanguage.language = 'es' and countrylanguage.percentage > 50;
select count(country.code) from countrylanguage where country.code = 'ES' and language = 'es';
select countrycode, name, population from countrylanguage where countrycode = 'ES' and language = 'es' order by population desc limit 10;
select countrycode, name from country where language = 'es' and population > 10000000 order by population desc limit 10;
select count(*) from show where if_first_show = 'true' and orchestra.name = 'Bach;
SELECT COUNT(*) FROM conductor;
select * from conductor order by age desc limit 10;
select name, age from conductor order by age;
SELECT name FROM conductor WHERE nationality!= 'usa';
select * from conductor where nationality <> 'usa';
select orchestra.name, orchestra.year_of_founded, orchestra.record_company from orchestra, performance where orchestra.orchestra_id = performance.orchestra_id order by orchestra.year_of_founded desc limit 10;
select orchestra.name, orchestra.year_of_founded, orchestra.record_company from orchestra, record_company where orchestra.record_company = record_company.id order by orchestra.year_of_founded desc;
select avg(attendance) from show group by 1 order by 2 desc;
select avg(attendance) from show group by 1;
select * from performance where type!= 'live final' order by share desc limit 10;
select * from performance where type!= 'live final' order by share desc limit 1;
select count(distinct nationality) from conductor, orchestra where conductor.orchestra_id = orchestra.orchestra_id and conductor.nationality <> orchestra.nationality;
select count(distinct nationality) from conductor, orchestra where conductor.orchestra_id = orchestra.orchestra_id and conductor.nationality <> orchestra.nationality;
select * from show order by attendance desc;
;
select * from conductor where year_of_work = (select max(year_of_work) from conductor);
select * from conductor where conductor.name = 'Barenboim';
SELECT conductor.name, orchestra.name, COUNT(*) AS count FROM conductor INNER JOIN orchestra ON conductor.orchestra_id = orchestra.orchestra_id GROUP BY conductor.name, orchestra.name ORDER BY count DESC LIMIT 10;
select conductor.name, orchestra.name from conductor, orchestra where conductor.orchestra_id = orchestra.orchestra_id and conductor.conductor_id = 1;
SELECT conductor.name, orchestra.name, orchestra.orchestra_id, orchestra.year_of_founded, orchestra.major_record_formatFROM orchestraINNER JOIN conductor ON orchestra.conductor_id = conductor.conductor_idWHERE orchestra.year_of_founded > 2000AND orchestra.major_record_format = 'CD'AND conductor.name NOT IN (SELECT name FROM conductor)ORDER BY orchestra.year_of_founded ASC, conductor.name ASCLIMIT 10;
select conductor.name, orchestra.name, count(*) as cnt from conductor inner join orchestra on conductor.orchestra_id = orchestra.orchestra_id group by conductor.name, orchestra.name having cnt > 1;
SELECT * FROM show WHERE conductor = (SELECT conductor_id FROM conductor WHERE name = 'Barenboim')SELECT * FROM show WHERE conductor = (SELECT conductor_id FROM conductor WHERE name = 'Barenboim')SELECT * FROM show WHERE conductor = (SELECT conductor_id FROM conductor WHERE name = 'Barenboim')SELECT * FROM show WHERE conductor = (SELECT conductor_id FROM conductor WHERE name = 'Barenboim')SELECT * FROM show WHERE conductor = (SELECT conductor_id FROM conductor WHERE name = 'Barenboim')SELECT * FROM show WHERE conductor =;
select * from orchestra where conductor_id in (select conductor_id from conductor) order by count(*) desc limit 1;
SELECT * FROM orchestra WHERE orchestra.year_of_founded > 2008;
SELECT name FROM conductor WHERE year_of_founded > 2008;
SELECT * FROM orchestra WHERE orchestra.record_company = 'Sony'SELECT * FROM orchestra WHERE orchestra.record_company = 'EMI'SELECT * FROM orchestra WHERE orchestra.record_company = 'Decca'SELECT * FROM orchestra WHERE orchestra.record_company = 'Warner'SELECT * FROM orchestra WHERE orchestra.record_company = 'BMG'SELECT * FROM orchestra WHERE orchestra.record_company = 'Universal'SELECT * FROM orchestra WHERE orchestra.record_company = 'Polydor'SELECT * FROM orchestra WHERE orchestra.record_company = 'Capitol'SELECT * FROM orchestra WHERE orchestra.record;
select count(*) from orchestra where record_company = 'Sony' and orchestra.orchestra_id =;
select orchestra.name, orchestra.count from orchestra, performance, show where orchestra.orchestra_id = performance.orchestra_id and performance.show_id = show.show_id order by orchestra.count desc limit 10;
select orchestra.name, count(*) as frequency from orchestra group by orchestra.name order by frequency desc limit 10;
select * from orchestra where orchestra.record_company in (select orchestra.record_company from orchestra where orchestra.orchestra_id in (select orchestra_id from conductor where conductor.name = 'Bach'));
select orchestra.name, count(*) as num_orchestras from orchestra group by orchestra.name order by num_orchestras desc limit 10;
select orchestra.name from orchestra where orchestra.orchestra_id not in (select orchestra_id from performance);
select orchestra.name, orchestra.orchestra_id from orchestra, performance where orchestra.orchestra_id = performance.orchestra_id and performance.type = 'concert' and performance.date = '2015-01-01' and performance.official_ratings_ < 10000000 and performance.official_ratings_ > 0 order by orchestra.name;
select orchestra.name, orchestra.year_of_founded, orchestra.record_company, orchestra.major_record_format from orchestra where orchestra.year_of_founded between 2003 and 2007 and orchestra.record_company not in ('Sony', 'EMI') and orchestra.major_record_format = 'CD';
select orchestra.name, orchestra.year_of_founded, orchestra.record_company from orchestra, orchestra_record_company where orchestra.record_company = orchestra_record_company.record_company and orchestra.year_of_founded < 2003 and orchestra.year_of_founded > 2003 and orchestra.record_company <> 'Sony Classical' and orchestra.record_company <> 'Decca Classics' and orchestra.record_company <> 'EMI Classics' and orchestra.record_company <> 'Naxos' and orchestra.record_company <> 'BIS Records' and orchestra.record_company <> 'DG' and orchestra.record_company <> ;
select count(*) from orchestra where record_format = 'cd' or record_format = 'dvd';
select count(*) from orchestra where record_format = 'cd' or record_format = 'dvd';
SELECT orchestra.name, orchestra.year_of_founded, orchestra.major_record_format, orchestra.record_company, orchestra.orchestra_id, orchestra.orchestra.name, orchestra.orchestra.year_of_founded, orchestra.orchestra.major_record_format, orchestra.orchestra.record_company, orchestra.orchestra.orchestra_id, orchestra.orchestra.orchestra_id, orchestra.orchestra.name, orchestra.orchestra.year_of_founded, orchestra.orchestra.major_record_format, orchestra.orchestra.record_company, orchestra.orchestra.orchestra_id, orchestra.orche;
select orchestra.orchestra_id, orchestra.name, orchestra.year_of_founded, orchestra.record_company, orchestra.major_record_format, orchestra.type, orchestra.date, orchestra.official_ratings_millions, orchestra.weekly_rank, orchestra.share from orchestra inner join performance on orchestra.orchestra_id = performance.orchestra_id where performance.type = 'concert' and performance.official_ratings_millions > 0 and performance.date > '2010-01-01' group by orchestra.orchestra_id, orchestra.name, orchestra.year_of_founded, orchestra.record_company, orchestra.major_record_format, orchestra;
select count(*) from highschooler where student_id = 1 and grade = 'A' and name = 'John' and;
select count(*) from student,friend where student.id = friend.student_id and friend.student_id = 1query:count the number of students who have at least one friend;
select * from highschoolerselect * from likeswhere student_id = 1select * from friendwhere student_id = 1select * from friendwhere student_id = 2select * from friendwhere student_id = 3select * from friendwhere student_id = 4select * from friendwhere student_id = 5select * from friendwhere student_id = 6select * from friendwhere student_id = 7select * from friendwhere student_id = 8select * from friend;
select name, grade from highschooler where student_id in (select student_id from friend) and grade > 80;
SELECT * FROM highschooler WHERE grade > 80;
select * from highschooler where grade = 'A';
select * from likes where liked_id =? and student_id =?;
select * from highschooler where name = 'kyle';
SELECT * FROM highschooler WHERE grade = 10;
select name from highschooler where grade = 10;
SELECT * FROM highschooler WHERE name = 'kyle';
SELECT * FROM highschooler WHERE student_id =?;
;
select count(*) from highschooler where grade = 9 or grade = 10;
select count(student_id) from highschooler where grade = '9'select count(student_id) from highschooler where grade = '10'select count(student_id) from highschooler where grade = '11'select count(student_id) from highschooler where grade = '12'select count(student_id) from highschooler where grade = '13'select count(student_id) from highschooler where grade = '14'select count(student_id) from highschooler where grade = '15'select count(student_id) from highschooler where grade = '16';
select count(student_id) from highschooler where grade = '10' and student_id in (select student_id from likes where liked_id = '1') and student_id in (select student_id from likes where liked_id = '2');
select * from likes where liked_id in (select id from highschooler where student_id = 1);
select * from likes where student_id in (select student_id from highschooler) and liked_id in (select liked_id from highschooler) order by count(*) desc limit 1;
SELECT * FROM grades WHERE grade >= 4 AND student_id IN (SELECT student_id FROM likes WHERE liked_id = 1);
select * from likes where liked_id in (select id from highschooler where student_id = 1);
SELECT highschooler.student_id, highschooler.name, highschooler.grade, highschooler.id, highschooler.friend_id, highschooler.friend_id, highschooler.friend_id, highschooler.friend_id, highschooler.friend_id, highschooler.friend_id, highschooler.friend_id, highschooler.friend_id, highschooler.friend_id, highschooler.friend_id, highschooler.friend_id, highschooler.friend_id, highschooler.friend_id, highschooler.friend_id, highschooler.friend_id, highschooler.friend_id, highschooler.;
select count(*) from friend where friend.student_id = highschooler.idselect count(*) from friend where friend.student_id = highschooler.id and friend.student_id = highschooler.id and friend.student_id = highschooler.id and friend.student_id = highschooler.id and friend.student_id = highschooler.id and friend.student_id = highschooler.id and friend.student_id = highschooler.id and friend.student_id = highschooler.id and friend.student_id = highschooler.id and friend.student_id = highschooler.id and friend.student_id;
SELECT highschooler.name, COUNT(friend.student_id) AS friendsFROM highschooler, friendWHERE highschooler.id = friend.student_idGROUP BY highschooler.nameORDER BY highschooler.nameLIMIT 10;
select name, count(*) from highschooler group by name having count(*) > 1;
select * from highschooler where friend_count = (select max(friend_count) from highschooler);
select * from highschooler where count(friend.student_id) = (select max(count(friend.student_id)) from highschooler);
SELECT * FROM highschooler WHERE friend_count >= 3;
select name from highschooler where friend_count >= 3;
select * from highschooler where friend_id ;
select name from highschooler where student_id =? and name = 'kyle';
select count(*) from likes where liked_id =?;
select count(friend.student_id) from friend where friend.student_id = kyle.idselect count(friend.student_id) from friend where friend.student_id = kyle.idselect count(friend.student_id) from friend where friend.student_id = kyle.idselect count(friend.student_id) from friend where friend.student_id = kyle.idselect count(friend.student_id) from friend where friend.student_id = kyle.idselect count(friend.student_id) from friend where friend.student_id = kyle.idselect count(friend.student_id) from;
SELECT id FROM student WHERE NOT EXISTS (SELECT 1 FROM friend WHERE friend.student_id = student.id);
select id from highschooler where student_id not in (select student_id from friend);
SELECT * FROM highschooler WHERE NOT EXISTS (SELECT * FROM friend WHERE friend.student_id = highschooler.id);
select name from student where friend is null;
select * from highschooler where friend.student_id in (select student_id from friend) and friend.student_id in (select student_id from likes) and friend.student_id in (select student_id from likes);
select id from highschooler where student_id in (select student_id from friend) and liked_id in (select liked_id from likes);
select * from highschooler where friend.student_id in (select student_id from friend) and friend.liked_id in (select liked_id from likes);
select * from highschooler, likes where highschooler.id = likes.student_id and likes.liked_id = highschooler.id and likes.student_id = highschooler.id and likes.liked_id = highschooler.id and likes.student_id = highschooler.id and likes.liked_id = highschooler.id and likes.student_id = highschooler.id and likes.liked_id = highschooler.id and likes.student_id = highschooler.id and likes.liked_id = highschooler.id and likes.student_id = highschooler.id and likes.liked_id =;
select count(student_id) from likes where student_id in (select student_id from highschooler);
select count(*) from highschooler where friend_id in (select;
SELECT highschooler.name, COUNT(likes.liked_id) AS likes FROM highschooler, likes WHERE highschooler.id = likes.student_id GROUP BY highschooler.name ORDER BY likes.liked_id DESCSELECT highschooler.name, COUNT(likes.liked_id) AS likes FROM highschooler, likes WHERE highschooler.id = likes.student_id GROUP BY highschooler.name ORDER BY likes.liked_id DESCSELECT highschooler.name, COUNT(likes.liked_id) AS likes FROM highschooler, likes WHERE highschooler.id = likes.student_id GROUP BY highschooler.name ORDER BY;
select name, count(*) from likes group by name having count(*) > 1;
select * from likes where highschooler.id = 1 order by likes.liked_id desc limit 1;
SELECT * FROM likes WHERE student_id = (SELECT student_id FROM highschooler WHERE name = 'John Doe') ORDER BY likes.liked_id DESC LIMIT 1The output should be:John DoeThe query is not working. I'm getting an error:Error: (1064, "You have an error in your SQL syntax;
SELECT * FROM likes WHERE student_id IN (SELECT student_id FROM highschooler WHERE friend_id = 1)foreign_keys:highschooler:id = 1name = "John Doe"grade = "A"friend:id = 1student_id = 1likes:id = 1student_id = 1likes.student_id = 1likes.liked_id = 1friend:id = 2student_id = 2likes:id = 2student_id = 2likes;
select name from highschooler where friend_id in (select student_id from likes where liked_id in (select student_id from likes where student_id = 1));
SELECT name, COUNT(*) AS count FROM student WHERE grade > 5 AND COUNT(friend.student_id) >= 2SELECT name, COUNT(*) AS count FROM student WHERE grade > 5 AND COUNT(friend.student_id) >= 2SELECT name, COUNT(*) AS count FROM student WHERE grade > 5 AND COUNT(friend.student_id) >= 2SELECT name, COUNT(*) AS count FROM student WHERE grade > 5 AND COUNT(friend.student_id) >= 2SELECT name, COUNT(*) AS count FROM student WHERE grade > 5 AND COUNT(friend.student_id) >= 2;
SELECT name FROM highschooler WHERE grade > 5 AND friend_count >= 2;
select count(*) from high;
select count(*) from likes where highschooler.name = 'kyle';
select avg(grade) from student where friend_id in (select student_id from friend);
select avg(grade) from likes where student_id in (select student_id from highschooler where friend_id = 1);
select min(grade) from student where student.id not in (select student_id from friend);
select * from highschooler where grade = 'F' and friend is null;
select * from owners, professionals where owners.owner_id = professionals.professional_id and professionals.professional_id = 1 order by 1,2;
select * from owners, professionals where owners.owner_id = professionals.professional_id and professionals.professional_id = 1 order by 1,2;
select avg(age) from treatments group by breed, treatment_type_code order by breed, treatment_type_code;
select avg(age) from treatments group by breed;
select * from professionals where state = 'indiana' or count(treatment_id) > 2 and phone = '555-555-5555';
select * from professionals where state = 'indiana' or count(*) > 2;
select dogs.dog_id, dogs.breed_code, dogs.size_code, dogs.breed_name, dogs.owner_id, dogs.date_of_birth, dogs.date_of_adoption, dogs.date_of_departure, dogs.date_of_arrival, dogs.date_of_treatment, dogs.date_of_departure, dogs.date_of_arrival, dogs.date_of_adoption, dogs.date_of_birth, dogs.date_of_adoption, dogs.date_of_departure, dogs.date_of_arrival, dogs.date_of_treatment, dogs.date_of_departure, dogs;
select dog_id, name, breed_code, size_code, breed_name, breed_code, size_code, breed_name, breed_code, size_code, breed_name, breed_code, size_code, breed_name, breed_code, size_code, breed_name, breed_code, size_code, breed_name, breed_code, size_code, breed_name, breed_code, size_code, breed_name, breed_code, size_code, breed_name, breed_code, size_code, breed_name, breed_code, size_code, breed_name, breed_code, size_code, breed_name, breed_code, size_code, breed;
select first_name from professionals where first_name not in (select first_name from dogs);
select first_name from professionals where first_name not in (select first_name from dogs)select first_name from professionals where first_name not in (select first_name from owners)select first_name from professionals where first_name not in (select first_name from dogs)select first_name from professionals where first_name not in (select first_name from owners)select first_name from professionals where first_name not in (select first_name from dogs)select first_name from professionals where first_name not in (select first_name from owners)select first_name from professionals where first_name not in (select first_name from dogs)select first_;
select * from professionals where not exists (select * from treatments where treatment_type_code = '1' and professional_id = professionals.professional_id) order by professional_id, role, email_address;
SELECT * FROM professionals WHERE NOT EXISTS (SELECT * FROM treatments WHERE treatments.professional_id = professionals.professional_id)The query above returns the following result:id | role | email---+------+-------1  | 1    | [email protected]2  | 2    | [email protected]3  | 3    | [email protected]4  | 4    | [email protected]5  | 5    | [email protected]6  | 6    | [email protected]7  | 7    | [email protected]8  | 8    | [email protected];
select owner_id, first_name, last_name from owners where owner_id in (select dog_id from dogs) order by owner_id, first_name, last_name limit 10;
select * from dogs where count(*) > 0 group by owner_id, first_name, last_name;
select * from professionals where (select count(*) from treatments where treatment_type_code = '1') > 1 order by first_name, role;
select * from professionals where (count(treatment_id) > 1) and (count(treatment_id) < 3) and (count(treatment_id) > 0) and (count(treatment_id) < 2) and (count(treatment_id) > 0) and (count(treatment_id) < 2) and (count(treatment_id) > 0) and (count(treatment_id) < 2) and (count(treatment_id) > 0) and (count(treatment_id) < 2) and (count(treatment_id) > 0) and;
select breed_code,breed_name from breeds where breed_code in (select breed_code from breeds group by breed_code having count(*) > 1);
SELECT breed_code,breed_name FROM breeds WHERE breed_code IN (SELECT breed_code FROM dogs);
select owner_id,last_name from owners where owner_id in (select dog_id from treatments group by dog_id having count(*) > 1) order by owner_id,last_name;
SELECT owner_id,last_name,SUM(cost_of_treatment) AS cost_of_treatment FROM treatments GROUP BY owner_id,last_name ORDER BY cost_of_treatment DESC LIMIT 1;
select treatment_type_description, sum(cost) from treatments group by treatment_type_description order by cost desc limit 1;
SELECT treatment_type_descriptionFROM treatment_typesWHERE treatment_type_code IN (SELECT treatment_type_codeFROM treatmentsWHERE treatment_id IN (SELECT treatment_idFROM treatmentsWHERE dog_id = 1))The problem is that I get the following error:ERROR:  syntax error at or near "IN"LINE 1: SELECT treatment_type_description FROM treatment_types WHERE treatment_type_code IN (SELECT treatment_type_code FROM treatments WHERE treatment_id IN (SELECT treatment_id FROM treatments WHERE dog_id = 1))I've tried to use the following syntax:SELECT treatment_type_descriptionFROM treatment_types;
select owner_id,zip_code from owners where sum(cost_of_treatment) > 10000 group by zip_code order by sum(cost_of_treatment) desc limit 1;
select * from owners, dogs, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments, charges, owners, treatments,;
select * from professionals where (select count(*) from treatments where treatment_type_code in (1,2)) > 0 order by professional_id,cell_phone;
select * from professionals where (treatment_type_code in (?,?) or treatment_type_code in (?,?)) and (professional_id in (?,?) or professional_id in (?,?));
select first_name,last_name,sum(cost) as cost from treatments group by first_name,last_name having cost / sum(cost) < 0.5 order by cost desc limit 10;
select first_name,last_name from professionals where cost_of_treatment < (select avg(cost_of_treatment) from treatments) order by first_name,last_name;
select * from treatments where treatment_type_code = '1' order by date_of_treatment;
select * from treatments where treatment_type_code = '1' and treatment_id = '1' and date_of_treatment = '2010-01-01' and professional_id = '1' and treatment_type_code = '1' and treatment_id = '1' and date_of_treatment = '2010-01-01' and treatment_type_code = '1' and treatment_id = '1' and date_of_treatment = '2010-01-01' and treatment_type_code = '1' and treatment_id = '1' and date_of_treatment;
select treatment_type_description, sum(cost) as cost from treatments group by treatment_type_description order by treatment_type_description;
select treatment_type_description, sum(cost) as cost from treatments group by treatment_type_description order by treatment_type_description;
select first_name, last_name, size from owners where owner_id = 1;
select first_name, last_name, size_code from owners where owner_id = 1;
select * from dogs where owner_id =? and breed_code =? order by owner_id, dog_id;
select first_name, dogs.name from owners, dogs where owners.owner_id = dogs.owner_id and dogs.owner_id = 1;
select * from dogs where breed_code in (select breed_code from breeds where breed_code = 'rare') and date_of_treatment = (select max(date_of_treatment) from treatments where treatment_type_code = 'rare');
select * from dogs where breed_code in (select breed_code from breeds where breed_code = 'Pug') order by breed_code, name;
select owner.first_name, dogs.name from dogs, owners where dogs.owner_id = owners.owner_id and owners.state = 'VA' order by owner.first_name, dogs.name;
select first_name,count(*) as count from owners,dogs where owners.owner_id = dogs.owner_id and dogs.state = 'VA' group by first_name order by count desc limit 10;
select * from treatments where treatment_type_code = 'treatment_type_code' and treatment_id = 'treatment_id' and date_of_treatment = 'date_of_treatment' and date_of_departure = 'date_of_departure' and date_of_arrival = 'date_of_arrival' and date_of_adoption = 'date_of_adoption' and date_of_birth = 'date_of_birth' and breed_code = 'breed_code' and size_code ='size_code' and treatment_type_code = 'treatment_type_;
SELECT dogs.owner_id, dogs.breed_code, dogs.size_code, dogs.breed_name, dogs.abandoned_yn, dogs.date_of_birth, dogs.date_arrived, dogs.date_departed, dogs.date_adopted, dogs.date_of_treatment, dogs.date_of_treatment, dogs.date_of_treatment, dogs.date_of_treatment, dogs.date_of_treatment, dogs.date_of_treatment, dogs.date_of_treatment, dogs.date_of_treatment, dogs.date_of_treatment, dogs.date_of_treatment, dogs.date_of_treatment, dogs.date_of;
select last_name from owners where owner_id = (select owner_id from dogs where dog_id = (select dog_id from dogs where breed_code = 'pug' and size_code ='small'));
select last_name from owners where owner_id =? and breed_code = 'poodle';
select * from professionals where state = 'hawaii' or state = 'wisconsin';
select email_address from professionals where state = 'wisconsin' or state = 'hawaii';
select dog_id, date_arrived, date_departed from dogs where date_arrived > date_departed order by date_arrived desc limit 10query;
select * from dogs where date_arrived = date_departedselect * from dogs where date_arrived = date_departedselect * from dogs where date_arrived = date_departedselect * from dogs where date_arrived = date_departedselect * from dogs where date_arrived = date_departedselect * from dogs where date_arrived = date_departedselect * from dogs where date_arrived = date_departedselect * from dogs where date_arrived = date_departedselect * from dogs where date_;
select count(*) from treatments where treatments.treatment_type_code in ('spay', 'neuter')primary_keys = [dogs.owner_id = owners.owner_id,dogs.breed_code = breeds.breed_code,dogs.breed_name = breeds.breed_name,dogs.size_code = sizes.size_code,dogs.abandoned_yn = abandoned_yn,dogs.date_of_birth = date_of_birth,dogs.date_of_adoption = date_of_adoption,dogs.date_of_departure = date_of_departure,dogs.date_of_ar;
select count(*) from treatments where treatment_type_code ='spay';
select count(*) from treatments where treatments.treatment_type_code in ('spay', 'neuter');
select count(*) from professionals where dogs.professional_id = professionals.professional_iddef find_the_number_of_professionals_who_have_ever_treated_dogs(db):	return db.query(professionals.count()).filter(professionals.professional_id.in_(dogs.professional_id)).execute()def find_the_number_of_professionals_who_have_ever_treated_dogs_by_breed(db):	return db.query(professionals.count()).filter(professionals.professional_id.in_(breeds.professional_id)).execute()def find_the_number_of_professionals_who;
select * from professionals where city like '%west%' order by role, street, city, state;
select * from professionals where city like '%west%';
select first_name, last_name, email from owners where state = 'north' order by first_name, last_name;
select first_name, last_name, email from owners where state like '%north%' order by first_name, last_name, email limit 1;
select count(*) from dogs where age < (select avg(age) from dogs);
select count(*) from dogs where age < (select avg(age) from dogs)primary_keys = [dogs.owner_id = owners.owner_id,dogs.owner_id = owners.owner_id,dogs.breed_code = breeds.breed_code,dogs.breed_name = breeds.breed_name,dogs.size_code = sizes.size_code,dogs.breed_code = breeds.breed_code,dogs.breed_name = breeds.breed_name,dogs.breed_code = breeds.breed_code,dogs.breed_name = breeds.breed_name,dogs.bre;
select sum(cost) from treatments where treatment_type_code = '1' and treatment_id = '1';
SELECT treatment_id, treatment_type_code, date_of_treatment, COALESCE(SUM(cost_of_treatment), 0) AS cost_of_treatmentFROM treatmentsWHERE treatment_type_code = '1'GROUP BY treatment_id, treatment_type_code, date_of_treatmentORDER BY treatment_id, treatment_type_code, date_of_treatmentLIMIT 10;
select count(*) from dogs where not exists (select 1 from owners where dog_id = dogs.dog_id and professional_id = professionals.professional_id and adopted_yn = 'Y')query:how many;
select count(*) from dogs where not exists (select 1 from treatments where dog_id = dogs.dog_id and treatment_type_code = 'treatment_type_code');
select count(*) from dogs where abandoned_yn = 'yes' and adopted_yn = 'no'query:how many dogs are currently in the shelter that are not adopted and are not in the process of being adopted and are not in the process of;
select count(*) from dogs where adopted is null and shelter is nullquery:find the number of dogs that are not adopted and are not in;
select count(*) from treatments where treatment_type_code = 'TREATMENT_TYPE_CODE' and professional_id is null;
select count(*) from professionals where not exists (select 1 from treatments where treatments.professional_id = professionals.professional_id and treatments.treatment_type_code = 'dog');
select dog_name, dog_age, dog_weight from dogs where abandoned_yn = 1 order by dog_name;
SELECT dogs.dog_id, dogs.breed_code, dogs.size_code, dogs.breed_name, dogs.age, dogs.weight, dogs.date_of_birth, dogs.date_of_adoption, dogs.date_of_departure, dogs.date_of_arrival, dogs.date_of_death, dogs.abandoned_yn, dogs.breed_code, dogs.size_code, dogs.breed_name, dogs.age, dogs.weight, dogs.date_of_birth, dogs.date_of_adoption, dogs.date_of_departure, dogs.date_of_arrival, dogs.date_of_death,;
select avg(age) from dogs group by breed;
SELECT AVG(DOGS.DOG_AGE)FROM DOGSWHERE DOGS.DOG_ID IN (SELECT DOGS.DOG_ID FROM DOGS WHERE DOGS.ABANDONED_YN = 'Y')GROUP BY DOGS.DOG_IDORDER BY DOGS.DOG_ID;
select dog_id, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed from dogs where breed_code = 'Labrador Retriever' and size_code = 'Large' order by age desc limit 1;
select dog_id, breed_code, size_code, name, age, date_of_birth, gender, weight, date_arrived, date_adopted, date_departed from dogs where breed_code = 'Labrador' and size_code = 'Large' order by age desc limit 1;
select count(*) from dogs where breed_code = 'labrador' and breed_code = 'poodle' and breed_code = 'golden retriever';
select dog_id, name, age, weight from dogs group by dog_id, name, age, weight order by dog_id, name, age, weightquery:list each;
select sum(cost) from charges where charge_type ='most expensive';
select charge_amount from charges where charge_type ='surgery' order by charge_amount desc limit 1;
select * from professionals where role_code = 'professional' order by email_address, home_phone, cell_number;
select professional.email_address, professional.home_phone, professional.cell_number from professionals where professional.role_code ='veterinarian';
select breed_code,size_code,breed_name,size_description from breeds where breed_code in (select breed_code from breeds where breed_code ='small') and breed_code in (select breed_code from breeds where breed_code ='medium') and breed_code in (select breed_code from breeds where breed_code = 'large') and breed_code in (select breed_code from breeds where breed_code = 'giant') and breed_code in (select breed_code from breeds where breed_code = 'other') and breed_code in (select breed_code from breeds where breed_code ='mixed') and breed;
select distinct breed_code,size_code from breeds,sizes where breeds.breed_code = sizes.size_code and breeds.breed_code <> 'Unknown' and sizes.size_code <> 'Unknown'def find_breed_and_size_combinations(breeds,sizes):    breed_and_size_combinations = []    for breed in breeds:        for size in sizes:            if breed.breed_code == size.size_code:                breed_and_size_combinations.append((breed.breed_code,size.size_code))    return breed_and_size_combinationsdef find_breed_and_size;
select first_name, treatment_type_description from treatment_types where treatment_type_code in (1,2,3) order by treatment_type_description;
select first_name, treatment_type_description from treatment_types where treatment_type_code in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69;
select count(*) from song where singer_id =? and sales >= 1000000 and singer_id =? and sales >= 100;
SELECT COUNT(*) FROM singer;
select * from singer order by net_worth_millions asc;
select singer.name, singer.net_worth_millions from singer, song where song.singer_id = singer.singer_id order by net_worth_millions asc;
select birth_year, citizenship from singer where name = 'Elton John';
select birth_year, citizenship from singer where name = 'Elton John';
select * from singer where singer.citizenship!= 'france';
SELECT * FROM song WHERE singer_id NOT IN (SELECT singer_id FROM singer WHERE citizenship = 'FR');
select * from singer where birth_year = 1948 or birth_year = 1949;
select * from singer where birth_year >= 1948 or birth_year >= 1949;
select * from song where sales > (select max(sales) from song);
select * from song where sales > (select max(sales) from song);
select singer.singer_id, singer.name, singer.birth_year, singer.net_worth_millions, singer.citizenship, song.title, song.sales, song.highest_position, song.singer_id, song.song_id, song.sales, song.highest_position, song.singer_id, song.song_id, song.singer_id, song.name, song.birth_year, song.net_worth_millions, song.citizenship, song.title, song.sales, song.highest_position, song.singer_id, song.song_id, song.singer_id, song.name, song.birth_year,;
select count(*) from song where singer.citizenship = 'United States';
select singer.name, count(song.singer_id) as countfrom singer, songwhere singer.singer_id = song.singer_idgroup by singer.nameorder by count desclimit 10;
select * from song where singer_id = 1 and citizenship = 'American';
select singer.singer_id, singer.name, singer.birth_year, singer.net_worth_millions, singer.citizenship, song.title, song.singer_id, song.sales, song.highest_position, song.singer_id, song.song_id, song.title, song.singer_id, song.sales, song.highest_position, song.singer_id, song.song_id, song.title, song.singer_id, song.sales, song.highest_position, song.singer_id, song.song_id, song.title, song.singer_id, song.sales, song.highest_position, song.s;
select max(net_worth_millions) from song where singer_id = 1 and citizenship = 'US';
select title, namefrom songwhere singer_id = 1order by title;
SELECT title, name FROM song WHERE singer_id = 1;
SELECT DISTINCT name FROM song WHERE sales > 300000;
select * from song where sales > 300000;
select singer.name, count(*) as cntfrom singergroup by singer.namehaving cnt > 1order by cnt desclimit 10select singer.name, count(*) as cntfrom singergroup by singer.namehaving cnt > 1order by cnt desclimit 10select singer.name, count(*) as cntfrom singergroup by singer.namehaving cnt > 1order by cnt desclimit 10select singer.name, count(*) as cntfrom singergroup by singer.namehaving cnt > 1order by cnt desclimit 10select singer.;
select singer.name, count(*) as total_songs from singer group by singer.name having total_songs > 1;
select singer.name, sum(song.sales) as total_sales from singer, song group by singer, song order by total_sales desc limit 10;
select sum(sales) from song where singer_id = 1;
select * from singer where singer.singer_id not in (select singer_id from song);
select * from song where singer_id not in (select singer_id from song);
select singer.name, singer.birth_year, singer.citizenshipfrom singerwhere birth_year >= 1945 and birth_year <= 1955group by singer.name, singer.birth_year, singer.citizenshiporder by singer.name, singer.birth_year, singer.citizenshiplimit 10;
select * from song where birth_year > 1945 and birth_year < 1955;
select count(*) from available_features;
SELECT feature_type_name FROM ref_property_types WHERE property_type_code = 'living room'query:what is the feature type name of;
select *;
select * from properties where property_