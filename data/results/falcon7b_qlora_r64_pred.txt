select count(*) from singer;
select sum(t1.age) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id;
select song_name,  country,  age from singer order by age desc;
select song_name,  country,  age from singer order by age desc;
select avg(age),  min(age),  max(age) from singer where country  =  "france";
select avg(age),  min(age),  max(age) from singer where country  =  "france";
select t1.song_name,  t1.song_release_year from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id order by t2.age limit 1;
select song_name,  year from singer order by age limit 1;
select country from singer where age  >  20;
select country from singer where age  >  20;
select country,  count(*) from singer group by country;
select country,  count(*) from singer group by country;
select song_name from singer where age  >  ( select avg(age) from singer );
select song_name from singer where age  >  (select avg(age) from singer);
select t1.location,  t2.name from stadium as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.capacity between 5000 and 10000;
select location,  name from stadium where capacity between 5000 and 10000;
select max(capacity),  avg(capacity) from stadium;
select avg(capacity),  max(capacity) from stadium;
select t1.name,  t1.average from stadium as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id group by t1.stadium_id order by avg(t2.attendance) desc limit 1;
select t1.name,  t1.average from stadium as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id group by t1.stadium_id order by avg(t2.attendance) desc limit 1;
select count(*) from concert where year  =  2014 or year  =  2015;
select count(*) from concert where year  =  2014 or year  =  2015;
select t1.name,  count(*) from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id group by t1.name;
select count(*),  t1.name from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id group by t1.stadium_id;
select t1.name,  t2.capacity from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id where t2.year  >  2014 group by t1.name order by count(*) desc limit 1;
select t1.name,  t1.capacity from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id where t2.year  >  2013;
select year from concert group by year order by count(*) desc limit 1;
select year from concert order by count(*) desc limit 1;
select name from stadium except select t1.name from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id;
select name from stadium where stadium_id not in ( select stadium_id from concert );
select country from singer where age  >  40 intersect select country from singer where age  <  30;
select name from stadium where stadium_id not in ( select stadium_id from concert where year  =  2014 );
select name from stadium where stadium_id not in ( select stadium_id from concert where year  =  2014 );
select t1.concert_name,  t2.theme from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id group by t1.concert_id;
select t1.concert_name,  t2.theme,  count(*) from concert as t1 join singer as t2 on t1.concert_id  =  t2.concert_id group by t1.concert_id;
select t1.name,  count(*) from singer as t1 join concert as t2 on t1.singer_id  =  t2.singer_id group by t1.name;
select t1.name,  count(*) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id group by t1.name;
select t1.name from singer as t1 join concert as t2 on t1.singer_id  =  t2.concert_id where t2.year  =  2014;
select t1.name from singer as t1 join concert as t2 on t1.singer_id  =  t2.singer_id where t2.year  =  2014;
select t1.name,  t1.country from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where t2.song_name like '%hey%';
select t1.name,  t2.country from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where t2.song_name like '%hey%';
select t1.name,  t1.location from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id where t2.year  =  2014 intersect select t1.name,  t1.location from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id where t2.year  =  2015;
select t1.name,  t1.location from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id where t2.year  =  2014 intersect select t1.name,  t1.location from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id where t2.year  =  2015;
select count(*) from stadium where name  =  ( select stadium_name from stadium order by capacity desc limit 1; );
select count(*) from concert where stadium_id  =  ( select stadium_id from stadium order by capacity desc limit 1);
select count(*) from pets where weight  >  10;
select count(*) from pets where weight  >  10;
select weight from pets order by pet_age desc limit 1;
select min(weight) from pets where pet_age  =  'youngest';
select max(weight),  pet_type from pets group by pet_type;
select max(weight),  max(pet_type) from pets group by pet_type;
select count(*) from pets where age  >  20;
select count(*) from pets where stuid in ( select stuid from has_pet where age  >  20 );
select count(*) from pets where pet_type  =  "dog" and sex  =  "f";
select count(*) from pets where pettype  =  "dog" and sex  =  "female";
select count(distinct pet_type) from pets;
select count(distinct pettype) from pets;
select fname from student where stuid in ( select petid from has_pet where petid  =  'cat' or petid  =  'dog');
select fname from student where stuid in ( select petid from pets where pettype  =  "cat" or pettype  =  "dog");
select fname from student where stuid in ( select petid from has_pet where petid = "cat" intersect select petid from has_pet where petid = "dog");
select fname from student where pet_type  =  "cat" intersect select fname from student where pet_type  =  "dog";
select major,  age from student where stuid not in ( select stuid from has_pet where petid  =  "cat");
select major from student except select t1.major,  t2.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid in (select petid from pets where petid in (select petid from has_pet));
select stuid from student except select stuid from has_pet where petid in (select petid from pets where petid in (select petid from has_pet));
select stuid from student except select stuid from has_pet where petid in (select petid from pets where petid in (select petid from has_pet));
select fname,  age from student where stuid in ( select stuid from has_pet where petid = "dog" except select t1.fname,  t1.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.petid where t2.petid  =  "cat");
select fname from student where stuid in ( select petid from has_pet except select t1.fname from student as t1 join pets as t2 on t1.stuid  =  t2.petid where t2.petid in ( select petid from has_pet except select t1.fname from student as t1 join pets as t2 on t1.stuid  =  t2.petid where t2.petid in ( select petid from has_cat ));
select pet_type,  pet_weight from pets order by pet_age limit 1;
select t1.pet_type,  t2.weight from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid where t1.pet_age  =  (select min(pet_age) from pets);
select petid,  weight from pets where pet_age  >  1;
select petid,  weight from pets where pet_age  >  1;
select avg(age),  max(age),  pet_type from pets group by pet_type;
select avg(age),  max(age),  pet_type from pets group by pet_type;
select avg(weight),  pet_type from pets group by pet_type;
select avg(weight),  pet_type from pets group by pet_type;
select fname,  age from student where stuid in ( select petid from has_pet );
select distinct fname,  age from student where stuid in ( select petid from has_pet );
select stuid from pets where petid  =  (select petid from has_pet where stuid  = 'smith');
select t1.petid from pets as t1 join student as t2 on t1.petid  =  t2.petid where t2.lname  =  "smith";
select stuid,  count(*) from has_pet group by stuid;
select stuid,  count(*) from pets group by stuid;
select fname,  lname from student where stuid in ( select petid from has_pet group by stuid having count(*)  >  1);
select fname,  lname from student where stuid in ( select petid from has_pet );
select t1.lname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  "cat" and t2.petage  =  3;
select lname from student where stuid in ( select petid from has_pet where pettype  =  "cat" and pet_age  =  3);
select avg(age) from student where stuid not in (select stuid from has_pet);
select avg(age) from student where stuid not in (select stuid from has_pet);
select count(*) from continents;
select count(*) from continents;
select continentid,  continentname,  count(*) from countries group by continent;
select continentid,  continentname,  count(*) from countries group by continent;
select count(*) from countries;
select count(*) from countries;
select t1.maker,  count(*) from car_makers as t1 join car_makers as t2 on t1.id  =  t2.maker group by t1.maker;
select t1.fullname,  t2.id,  count(*) from car_makers as t1 join car_names as t2 on t1.id  =  t2.maker group by t1.id;
select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.horsepower limit 1;
select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.hp limit 1;
select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id where t2.weight  <  ( select avg(weight) from cars_data );
select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id where t2.weight  <  ( select avg(weight) from cars_data );
select t1.maker from car_makers as t1 join cars_data as t2 on t1.id  =  t2.id where t2.year  =  1970;
select distinct t1.maker from car_makers as t1 join car_names as t2 on t1.id  =  t2.makeid where t2.year  =  1970;
select t1.maker,  t1.year from car_makers as t1 join cars_data as t2 on t1.id  =  t2.id where t2.year  =  (select min(year) from cars_data);
select t1.maker,  t1.year from car_makers as t1 join cars_data as t2 on t1.id  =  t2.id where t2.year  =  (select min(year) from cars_data);
select distinct t1.model from car_makers as t1 join car_names as t2 on t1.id  =  t2.makeid where year  >  1980;
select distinct model from car_makers where year  >  1980;
select continent,  count(*) from car_makers group by continent;
select continent,  count(*) from car_makers group by continent;
select t1.countryname from countries as t1 join car_makers as t2 on t1.contid  =  t2.country;
select t1.countryname from countries as t1 join car_makers as t2 on t1.contid  =  t2.country;
select count(*),  t1.fullname from car_makers as t1 join car_names as t2 on t1.id  =  t2.maker group by t1.maker;
select count(*),  t1.maker,  t2.fullname from car_makers as t1 join car_names as t2 on t1.id  =  t2.makeid group by t1.maker;
select accelerate from car_names where make  =  "amc hornet sportabout";
select accelerate from cars_data where make  =  "amc hornet sportabout";
select count(*) from car_makers where country  =  "france";
select count(*) from car_makers where country  =  "france";
select count(*) from car_makers where country  =  "usa";
select count(*) from car_makers where country  =  'united states';
select avg(mpg) from cars_data where cyl  =  4;
select avg(mpg) from cars_data where cyl  =  4;
select min(weight) from cars_data where year  =  1974 and cylinders  =  8;
select min(t1.weight) from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t2.year  =  1974 and t2.cylinders  =  8;
select maker,  model from car_makers;
select maker,  model from car_makers;
select countryname,  count(*) from car_makers group by countryname having count(*)  >=  1;
select t1.countryname,  t1.countryid from countries as t1 join car_makers as t2 on t1.continent  =  t2.countryid group by t1.countryname having count(*)  >=  1;
select count(*) from cars_data where horsepower  >  150;
select count(*) from cars_data where horsepower  >  150;
select avg(weight) from cars_data;
select avg(weight),  avg(year) from cars_data group by year;
select country from countries where continent  =  'europe' group by country having count(*)  >=  3;
select country from countries where continent  =  "europe" group by country having count(*)  >=  3;
select max(hp),  t1.make from car_names as t1 join car_makers as t2 on t1.makeid  =  t2.id where t2.cylinder  =  3;
select max(hp),  t1.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t2.cylinders  =  3 group by t1.id;
select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id group by t1.model order by sum(t2.mpg) desc limit 1;
select t1.model from car_names as t1 join car_names as t2 on t1.makeid  =  t2.makeid where t2.mpg  =  ( select max(mpg) from car_names );
select avg(hp) from cars_data where year  <  1980;
select avg(hp) from cars_data where year  <  1980;
select avg(edispl) from car_names where make  =  "volvo";
select avg(edispl) from cars_data where make  =  "volvo";
select max(accelerate),  cyl 0 from cars_data group by cyl;
select max(accelerate) from cars_data group by cylinders;
select t1.model from car_names as t1 join car_makers as t2 on t1.makeid  =  t2.id group by t2.model order by count(*) desc limit 1;
select t1.model from car_makers as t1 join car_names as t2 on t1.id  =  t2.makeid group by t1.model order by count(*) desc limit 1;
select count(*) from car_names where cyl  >  4;
select count(*) from car_names where cyl  >  4;
select count(*) from car_makers where year  =  1980;
select count(*) from car_makers where year  =  1980;
select count(*) from car_makers as t1 join car_makers as t2 on t1.id  =  t2.maker where t1.fullname  =  "american motor company";
select count(*) from car_makers as t1 join car_makers as t2 on t1.id  =  t2.maker where t1.country  =  "american";
select t1.fullname,  t1.maker from car_makers as t1 join car_makers as t2 on t1.id  =  t2.id group by t1.maker having count(*)  >  3;
select t1.maker,  t1.id from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.maker having count(*)  >  3;
select distinct t1.model from car_makers as t1 join cars_data as t2 on t1.id  =  t2.id where t2.maker  =  "general motors" and t2.weight  >  3500;
select distinct t1.model from car_makers as t1 join car_names as t2 on t1.id  =  t2.makeid where t2.maker  =  "general motors" intersect select distinct t1.model from car_makers as t1 join car_names as t2 on t1.id  =  t2.makeid where t2.weight  >  3500;
select year from cars_data where weight between 3000 and 4000;
select distinct year from cars_data where weight  <  4000 intersect select distinct year from cars_data where weight  >  3000;
select max(accelerate) from cars_data;
select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t2.accelerate  =  ( select max(accelerate) from cars_data as t3 on t3.id  =  t2.makeid );
select t1.cylinder from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id where t2.model  =  "volvo" order by t2.accelerate limit 1;
select t1.cylinder from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.makeid where t2.accelerate  =  (select min(accelerate) from cars_data as t3 on t3.makeid  =  t2.makeid);
select count(*) from cars_data where accelerate  >  ( select max(accelerate) from cars_data );
select count(*) from cars_data where accelerate  >  ( select max(accelerate) from cars_data );
select count(*) from car_makers group by country having count(distinct maker)  >  2;
select count(*) from car_makers group by country having count(*)  >  2;
select count(*) from car_names where cyl  >  6;
select count(*) from car_names where cylinders  >  6;
select t1.make from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id where t2.cylinders  =  4 group by t1.make order by sum(t2.hp) desc limit 1;
select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id where t2.cylinders  =  4 group by t1.model order by sum(t2.hp) desc limit 1;
select t1.maker,  t1.fullname from car_names as t1 join cars_data as t2 on t1.id  =  t2.id where t2.horsepower  >  ( select min(horsepower) from cars_data );
select t1.makeid,  t1.make from car_names as t1 join cars_data as t2 on t1.model  =  t2.model where t2.horsepower  <  4 group by t1.makeid having count(*)  >  4;
select max(t1.mpg) from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t2.cylinders  =  8 and t2.year  <  1980;
select max(mpg) from cars_data where cylinders  =  8 and year  <  1980;
select t1.model from car_names as t1 join car_makers as t2 on t1.makeid  =  t2.id where t2.weight  <  3500 except select t1.model from car_names as t1 join car_makers as t2 on t1.makeid  =  t2.id where t2.maker  =  "ford motor company";
select distinct t1.model from car_names as t1 join car_makers as t2 on t1.makeid  =  t2.id where t2.weight  <  3500 except select distinct t1.model from car_names as t1 join car_makers as t2 on t1.makeid  =  t2.id where t2.weight  <  3500;
select countryname from countries except select t1.countryname from countries as t1 join car_makers as t2 on t1.contid  =  t2.countryid;
select countryname from countries where countryid not in ( select country from car_makers );
select t1.id,  t1.maker from car_makers as t1 join car_makers as t2 on t1.id  =  t2.maker where t2.makeid  >  2 group by t1.id having count(*)  >  3;
select t1.id,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker where t2.model  >  2 intersect select t1.id,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker where t2.model  >  3;
select t1.countryid,  t2.countryname from countries as t1 join car_makers as t2 on t1.continent  =  t2.country where t2.maker  >  3 or t2.model  =  "fiat";
select countryid,  countryname from countries where count(distinct maker)  >  3 union select countryid,  countryname from countries where make  =  'fiat';
select country from airlines as t1 join countries as t2 on t1.country  =  t2.country where t1.airline  =  "jetblue airways";
select t1.country from airlines as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.airline  =  "jetblue airways";
select abbreviviation from airlines where airline  =  "jetblue airways";
select abbreviviation from airlines where airline  =  "jetblue airways";
select t1.airline,  t2.abbreviation from airlines as t1 join airports as t2 on t1.airline  =  t2.airportcode where country  =  'usa';
select t1.airline,  t2.abbreviation from airlines as t1 join airlines as t2 on t1.airline  =  t2.airline where country  =  'usa';
select t1.airportcode,  t2.airportname from airports as t1 join cities as t2 on t1.city  =  t2.city where t2.airportname  =  'anthony';
select t1.airportcode,  t2.airportname from airports as t1 join cities as t2 on t1.city  =  t2.city where t2.city  =  'anthony';
select count(*) from airlines;
select count(*) from airlines;
select count(*) from airports;
select count(*) from airports;
select count(*) from flights;
select count(*) from flights;
select t1.abbreviation from airlines as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.airline  =  'ual';
select t1.airline from airlines as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.airline  =  'ual';
select count(*) from airlines where country  =  'usa';
select count(*) from airlines where country  =  'usa';
select t1.city,  t1.country from airports as t1 join airports as t2 on t1.airportcode  =  t2.airportcode where t2.airportname  =  'alton';
select city,  country from airports where airportcode  =  'alton';
select airportname from airports where airportname  =  "ako";
select airportname from airports where airportcode  =  'ako';
select airportname from airports where city  =  'aberdeen';
select airportname from airports where city  =  "aberdeen";
select count(*) from flights where sourceairport  =  'apg';
select count(*) from flights where sourceairport  =  "apg";
select count(*) from flights where destairport  =  "ato";
select count(*) from flights where destairport  =  'ato';
select count(*) from flights where sourceairport  =  'aberdeen';
select count(*) from flights where sourceairport  =  'aberdeen';
select count(*) from flights where sourceairport  =  "aberdeen";
select count(*) from flights where destairport  =  'aberdeen';
select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.city  =  'aberdeen' and t1.sourceairport  =  'ashley';
select count(*) from flights where sourceairport  =  'ashley' and destairport  =  'aberdeen';
select count(*) from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t1.airline  =  'jetblue airways';
select count(*) from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t1.airline  =  "jetblue airways";
select count(*) from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t1.airline  =  'united airlines' and t2.destairport  =  'asy';
select count(*) from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t2.destairport  =  "asy";
select count(*) from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t1.airline  =  'united airlines' and t2.destairport  =  'ahd';
select count(*) from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t1.airportcode  =  "ahd";
select count(*) from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t1.airline  =  'united';
select count(*) from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'aberdeen';
select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.city order by count(*) desc limit 1;
select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.city order by count(*) desc limit 1;
select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.city order by count(*) desc limit 1;
select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.city order by count(*) desc limit 1;
select airportcode from airports order by count(*) desc limit 1;
select airportcode from airports order by flightno desc limit 1;
select airportcode from airports order by count(*) asc limit 1;
select airportcode from airports order by count(*) limit 1;
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline group by t1.airline order by count(*) desc limit 1;
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline group by t1.airline order by count(*) desc limit 1;
select abbreviviation,  country from airlines order by count(*) asc limit 1;
select t1.abbreviation,  t2.country from airlines as t1 join flights as t2 on t1.uid  =  t2.airline group by t1.airline order by count(*) limit 1;
select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'ahd';
select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.sourceairport  =  'ahmedabad';
select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'ahd';
select distinct airline from flights where destairport  =  'ahd';
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'apg' intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'cvo';
select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'apg' intersect select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'cvo';
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'cvo' except select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'apg';
select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport in (select airportcode from airports where country  =  'cvo') except select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport in (select airportcode from airports where country  =  'apg');
select airline from airlines where flightno  >=  10;
select airline from airlines group by airline having count(*)  >=  10;
select distinct airline from airlines where uid in ( select airline from flights group by airline having count(*)  <  200);
select distinct airline from flights where flightno  <  200;
select flightno from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airline  =  "united airlines";
select flightno from flights where airline  =  'united';
select flightno from flights where sourceairport  =  "apg";
select flightno from flights where sourceairport  =  'apg';
select flightno from flights where sourceairport  =  "apg";
select flightno from flights where destairport  =  'apg';
select flightno from flights where sourceairport  =  "aberdeen";
select flightno from flights where sourceairport  =  'aberdeen';
select flightno from flights where sourceairport  =  "aberdeen";
select t1.flightno from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.city  =  'aberdeen';
select count(*) from flights where sourceairport  =  "aberdeen" or sourceairport  =  "abilene";
select count(*) from flights where destairport  =  "aberdeen" or destairport  =  "abilene";
select airportname from airports where airportcode not in ( select sourceairport from flights );
select airportname from airports except select airportname from flights;
select count(*) from employee;
select count(*) from employee;
select name from employee order by age asc;
select name from employee order by age asc;
select count(*),  city from employee group by city;
select count(*),  city from employee group by city;
select city from employee where age  <=  30 group by city having count(*)  >  1;
select city from employee where age  <  30 group by city having count(*)  >  1;
select count(*),  district from shop group by district;
select count(*),  district from shop group by district;
select t1.manager_name,  t2.district from shop as t1 join employee as t2 on t1.shop_id  =  t2.shop_id order by t2.number_products desc limit 1;
select t1.manager_name,  t2.district from shop as t1 join shop as t2 on t1.shop_id  =  t2.shop_id group by t2.shop_id order by count(*) desc limit 1;
select min(number_products),  max(number_products) from shop;
select min(number_products),  max(number_products) from shop;
select name,  location,  district from shop order by number_products desc;
select t1.name,  t1.location,  t1.district from shop as t1 join shop as t2 on t1.shop_id  =  t2.shop_id group by t2.shop_id order by count(*) desc;
select name from shop where number_products  >  (select avg(number_products) from shop);
select t1.name from shop as t1 join evaluation as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id having avg(t2.number_products)  >  0;
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t1.employee_id order by count(*) desc limit 1;
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t1.employee_id order by sum(t2.bonus) desc limit 1;
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id order by t2.bonus desc limit 1;
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t1.name order by sum(t2.bonus) desc limit 1;
select name from employee except select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id;
select name from employee where employee_id not in ( select employee_id from evaluation );
select t1.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.name order by count(*) desc limit 1;
select t1.name from shop as t1 join employee as t2 on t1.shop_id  =  t2.shop_id group by t1.name order by count(*) desc limit 1;
select name from shop where shop_id not in ( select shop_id from hiring );
select name from shop where shop_id not in ( select shop_id from employee );
select count(*),  t1.shop_name from employee as t1 join hiring as t2 on t1.employee_id  =  t2.employee_id group by t2.shop_id;
select count(*),  t1.name from shop as t1 join employee as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id;
select sum(bonus) from evaluation;
select sum(bonus) from evaluation;
select * from hiring;
select * from hiring;
select district from shop where number_products  <  3000 intersect select district from shop where number_products  >  10000;
select district from shop where number_products  <  3000 intersect select district from shop where number_products  >  10000;
select count(district) from shop;
select count(district) from shop;
select count(*) from documents;
select count(*) from documents;
select document_id,  document_name,  document_description from documents;
select document_id,  document_name,  document_description from documents;
select t1.document_name,  t2.document_id from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id where t1.document_description like '%w%';
select document_name,  t1.template_id from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id where t1.document_description like '%w%';
select t1.document_id,  t2.template_id,  t3.document_description from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id join templates as t3 on t2.template_id  =  t3.template_id where t1.document_name  =  "robbin cv";
select t1.document_id,  t2.template_id,  t3.document_description from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id join templates as t3 on t2.template_id  =  t3.template_id where t1.document_name  =  "robbin cv";
select count(distinct template_id) from documents;
select count(distinct template_id) from documents;
select count(*) from documents as t1 join ref_template_types as t2 on t1.document_id  =  t2.template_id where t2.template_type_code  =  "ppt";
select count(*) from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id where t2.template_type_code  =  "ppt";
select t1.template_id,  count(*) from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t2.template_id;
select t1.template_id,  count(*) from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id group by t2.template_id;
select t1.template_id,  t2.template_type_code from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id group by t1.template_id order by count(*) desc limit 1;
select t1.template_id,  t2.template_type_code from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id group by t2.template_id order by count(*) desc limit 1;
select t1.template_id from templates as t1 join documents as t2 on t1.template_id  =  t2.template_id group by t1.template_id having count(*)  >  1;
select t1.template_id from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id group by t2.template_id having count(*)  >  1;
select template_id from templates except select t1.template_id from templates as t1 join documents as t2 on t1.template_id  =  t2.template_id;
select template_id from templates except select t1.template_id from templates as t1 join documents as t2 on t1.template_id  =  t2.template_id;
select count(*) from templates;
select count(*) from templates;
select t1.template_id,  t2.version_number,  t3.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_id  =  t2.template_id join ref_template_types as t3 on t3.template_type_code  =  t2.template_type_code;
select t1.template_id,  t2.version_number,  t3.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_id  =  t2.template_id join ref_template_types as t3 on t3.template_type_code  =  t2.template_type_code;
select distinct template_type_code from templates;
select distinct template_type_code from templates;
select t1.template_id from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id where t2.template_type_code  =  "pp" or t2.template_type_code  =  "ppt";
select template_id from templates where template_type_code  =  "pp" union select template_id from templates where template_type_code  =  "ppt";
select count(*) from templates where template_type_code  =  "cv";
select count(*) from templates where template_type_code  =  "cv";
select version_number,  template_type_code from templates where template_id  >  5;
select t1.version_number,  t2.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t2.version_number  >  5;
select t1.template_type_code,  count(*) from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code group by t1.template_type_code;
select t1.template_type_code,  count(*) from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code group by t2.template_type_code;
select t1.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code group by t2.template_type_code order by count(*) desc limit 1;
select t1.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code group by t1.template_type_code order by count(*) desc limit 1;
select template_type_code from ref_template_types group by template_type_code having count(*)  <  3;
select template_type_code from ref_template_types group by template_type_code having count(*)  <  3;
select min(version_number),  template_type_code from templates;
select min(version_number),  template_type_code from templates group by template_type_code;
select t1.template_type_code from ref_template_types as t1 join documents as t2 on t1.template_id  =  t2.template_id where t2.document_name  =  "data base";
select t1.template_type_code from ref_template_types as t1 join documents as t2 on t1.template_id  =  t2.template_id where t2.document_name  =  "data base";
select t1.document_name from documents as t1 join ref_template_types as t2 on t1.document_id  =  t2.template_id where t2.template_type_code  =  "bk";
select t1.document_name from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id where t2.template_type_code  =  "bk";
select t1.template_type_code,  count(*) from ref_template_types as t1 join documents as t2 on t1.template_id  =  t2.template_id group by t1.template_type_code;
select t1.template_type_code,  count(*) from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id group by t2.template_type_code;
select t1.template_type_code from ref_template_types as t1 join documents as t2 on t1.template_id  =  t2.template_id group by t1.template_type_code order by count(*) desc limit 1;
select t1.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code group by t1.template_type_code order by count(*) desc limit 1;
select template_type_code from ref_template_types except select template_type_code from documents;
select template_type_code from ref_template_types except select template_type_code from documents;
select template_type_code,  template_type_description from ref_template_types;
select t1.template_type_code,  t2.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code;
select t2.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_code  =  "ad";
select t2.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_code  =  "ad";
select t1.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_description  =  "book";
select template_type_code from ref_template_types where template_type_description  =  "book";
select distinct t1.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_id  =  t2.template_id;
select distinct t1.document_description from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id where t2.template_type_code  =  "ref_template_types";
select t1.template_id from documents as t1 join ref_template_types as t2 on t1.document_id  =  t2.template_id where t2.template_type_description  =  "presentation";
select t1.template_id from documents as t1 join ref_template_types as t2 on t1.document_id  =  t2.template_id where t2.template_details  =  "presentation";
select count(*) from paragraphs;
select count(*) from paragraphs;
select count(*) from documents where document_name  =  "summer show";
select count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  "summer show";
select t1.other_details from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t2.paragraph_text  =  "korea";
select t1.other_details from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t2.paragraph_text  =  "korea";
select t1.document_id,  t2.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  "welcome to ny";
select t1.paragraph_id,  t2.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_title  =  "welcome to ny";
select t1.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t2.document_name  =  "customer reviews";
select t1.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  "customer reviews";
select document_id,  count(*) from documents group by document_id;
select document_id,  count(*) from documents group by document_id order by count(*) desc;
select document_id,  document_name,  count(*) from documents group by document_id;
select t1.document_id,  t1.document_name,  count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id;
select document_id from documents group by document_id having count(*)  >=  2;
select document_id from documents group by document_id having count(*)  >=  2;
select t1.document_id,  t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by count(*) desc limit 1;
select t1.document_id,  t2.document_name from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by count(*) desc limit 1;
select document_id from documents order by count(*) limit 1;
select document_id from documents order by count(*) limit 1;
select document_id from documents group by document_id having count(*)  <=  2;
select document_id from documents where paragraph_count  <=  2;
select t1.document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t2.paragraph_text  =  'brazil' intersect select t1.document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t2.paragraph_text  =  'ireland';
select document_id from documents where document_description  =  "brazil" intersect select document_id from documents where document_description  =  "ireland";
select count(*) from teacher;
select sum(teacher_id) from teacher;
select name from teacher order by age asc;
select name from teacher order by age asc;
select age,  hometown from teacher;
select age,  hometown from teacher;
select name from teacher where hometown!= "little lever urban district";
select name from teacher where hometown!= "little lever urban district";
select name from teacher where age  =  32 or age  =  33;
select name from teacher where age  =  32 or age  =  33;
select hometown from teacher order by age desc limit 1;
select name from teacher order by age desc limit 1;
select hometown,  count(*) from teacher group by hometown;
select hometown,  count(*) from teacher group by hometown;
select hometown from teacher group by hometown order by count(*) desc limit 1;
select hometown from teacher group by hometown order by count(*) desc limit 1;
select hometown from teacher group by hometown having count(*)  >=  2;
select t2.hometown from course as t1 join teacher as t2 on t1.course_id  =  t2.teacher_id group by t1.hometown having count(*)  >=  2;
select t1.name,  t2.course from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id;
select t1.name,  t2.course from teacher as t1 join course as t2 on t1.teacher_id  =  t2.teacher_id;
select t1.name,  t2.course from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id order by t1.name;
select t1.name,  t2.course from teacher as t1 join course as t2 on t1.teacher_id  =  t2.teacher_id order by t1.name asc;
select t2.name from course as t1 join teacher as t2 on t1.course_id  =  t2.teacher_id where t1.course  =  "math";
select name from teacher where teacher_id in ( select teacher_id from course_arrange as t1 join course as t2 on t1.course_id  =  t2.course_id where t2.course  =  "math");
select t1.name,  count(*) from course as t1 join teacher as t2 on t1.course_id  =  t2.teacher_id group by t2.name;
select t1.name,  count(*) from course as t1 join teacher as t2 on t1.course_id  =  t2.teacher_id group by t2.name;
select t1.name from course as t1 join teacher as t2 on t1.course_id  =  t2.teacher_id group by t2.name having count(*)  >=  2;
select t1.name from course as t1 join teacher as t2 on t1.course_id  =  t2.teacher_id group by t2.name having count(*)  >=  2;
select name from teacher where teacher_id not in (select teacher_id from course_arrange);
select name from teacher where teacher_id not in (select teacher_id from course_arrange);
select count(*) from visitor where age  <  30;
select name from visitor where level_of_membership  >  4 order by level_of_membership desc;
select avg(age) from visitor where level_of_membership!= 4;
select t1.name,  t1.level_of_membership from visitor as t1 join museum as t2 on t1.museum_id  =  t2.museum_id where t2.level_of_membership  >  4 order by t1.age;
select m1.museum_id,  m1.name from museum as m1 join museum as m2 on m1.museum_id  =  m2.museum_id group by m1.museum_id order by count(*) desc limit 1;
select avg(num_of_staff) from museum where open_year  <  2009;
select open_year,  num_of_staff from museum where name  =  "plaza museum";
select name from museum where num_of_staff  >  (select min(num_of_staff) from museum where open_year  >  2010);
select t1.id,  t2.name,  t3.age from visitor as t1 join visit as t2 on t1.visitor_id  =  t2.visitor_id join museum as t3 on t2.museum_id  =  t3.museum_id group by t3.museum_id having count(*)  >  1;
select t1.id,  t2.name,  t3.level_of_membership from visitor as t1 join visit as t2 on t1.id  =  t2.visitor_id join museum as t3 on t2.museum_id  =  t3.museum_id group by t3.name order by sum(t3.total_spent) desc limit 1;
select t1.museum_id,  t2.name from museum as t1 join visit as t2 on t1.museum_id  =  t2.museum_id group by t1.museum_id order by count(*) desc limit 1;
select name from museum where museum_id not in ( select museum_id from visit );
select t1.name,  t1.age from visitor as t1 join visit as t2 on t1.id  =  t2.visitor_id group by t1.id order by sum(t2.total_spent) desc limit 1;
select avg(num_of_ticket),  max(num_of_ticket) from visit;
select sum(t2.total_spent) from visit as t1 join visitor as t2 on t1.visitor_id  =  t2.id where t2.level_of_membership  =  1;
select t2.name from visit as t1 join visitor as t2 on t1.visitor_id  =  t2.id where t1.museum_id in (select museum_id from museum where open_year  <  2009 intersect select museum_id from museum where open_year  >  2011);
select count(*) from visitor where id not in ( select visitor_id from visit where open_year  >  2010);
select count(*) from museum where open_year  >  2013 or open_year  <  2008;
select count(*) from players;
select count(*) from players;
select count(*) from matches;
select count(*) from matches;
select t1.first_name,  t1.birth_date from players as t1 join countries as t2 on t1.country_code  =  t2.country_code where t2.country_code  =  "usa";
select t1.forename,  t1.birth_date from players as t1 join players as t2 on t1.player_id  =  t2.player_id where country_code  =  'usa';
select avg(loser_age) from matches;
select avg(loser_age) from matches;
select avg(winner_rank) from matches;
select avg(winner_rank) from matches;
select max(rank) from matches;
select max(loser_rank) from matches;
select count(distinct country_code) from players;
select count(distinct country_code) from players;
select count(distinct loser_name) from matches;
select count(distinct loser_name) from matches;
select t1.tourney_name from matches as t1 join tourney_name as t2 on t1.tourney_id  =  t2.tourney_id group by t2.tourney_name having count(*)  >  10;
select t1.tourney_name from matches as t1 join rankings as t2 on t1.winner_id  =  t2.tourney_id group by t2.tourney_name having count(*)  >  10;
select winner_name from matches where year  =  2013 intersect select winner_name from matches where year  =  2016;
select t1.name from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id where t2.year  =  2013 intersect select t1.name from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id where t2.year  =  2016;
select count(*) from matches where year  =  2013 or year  =  2016;
select count(*) from matches where year  =  2013 or year  =  2016;
select t1.country_code,  t1.first_name from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id where t2.tourney_name  =  "wta championships" intersect select t1.country_code,  t1.first_name from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id where t2.tourney_name  =  "australian open";
select t1.first_name,  t1.country_code from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id where t2.tourney_name  =  "wta championships" intersect select t1.first_name,  t1.country_code from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id where t2.tourney_name  =  "australian open";
select t1.first_name,  t1.country_code from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id order by t2.winner_age limit 1;
select t1.first_name,  t1.country_code from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id order by t2.winner_age limit 1;
select t1.first_name,  t1.last_name from players as t1 join players as t2 on t1.player_id  =  t2.player_id order by t1.birth_date;
select first_name,  last_name from players order by birth_date;
select t1.first_name,  t1.last_name from players as t1 join ranking as t2 on t1.player_id  =  t2.player_id where t2.hand  =  "left" order by birth_date;
select t1.full_name from players as t1 join players as t2 on t1.player_id  =  t2.player_id where t2.hand  =  "left";
select t1.forename,  t2.country_code from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.forename order by count(*) desc limit 1;
select t1.forename,  t2.country_code from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.player_id order by count(*) desc limit 1;
select year from matches group by year order by count(*) desc limit 1;
select t1.year from matches as t1 join matches as t2 on t1.winner_id  =  t2.winner_id group by t1.year order by count(*) desc limit 1;
select t1.winner_name,  t1.winner_rank_points from matches as t1 join players as t2 on t1.winner_id  =  t2.player_id group by t1.winner_id order by count(*) desc limit 1;
select t1.winner_name,  sum(t2.ranking_points) from matches as t1 join players as t2 on t1.winner_id  =  t2.player_id group by t1.winner_id order by count(*) desc limit 1;
select t1.winner_name from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id order by t2.ranking desc limit 1;
select t1.winner_name from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id where t2.tourney_name  =  "australian open";
select t1.loser_name,  t2.winner_name from matches as t1 join players as t2 on t1.loser_id  =  t2.player_id group by t1.loser_id order by sum(t1.minutes) limit 1;
select t1.winner_name,  t2.loser_name from matches as t1 join players as t2 on t1.winner_id  =  t2.player_id order by t1.match_num limit 1;
select avg(ranking),  t1.first_name from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.first_name;
select t1.first_name,  avg(ranking) from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.first_name;
select sum(ranking_points),  t1.first_name from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.first_name;
select t1.first_name,  sum(ranking_points) from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id;
select count(*),  country_code from players group by country_code;
select count(*),  country_code from players group by country_code;
select country_code from players group by country_code order by count(*) desc limit 1;
select country_code from players group by country_code order by count(*) desc limit 1;
select country_code from players group by country_code having count(*)  >  50;
select country_code from players group by country_code having count(*)  >  50;
select sum(tours),  ranking from rankings group by ranking;
select count(*),  ranking from rankings group by ranking;
select count(*),  t1.year from matches as t1 join matches as t2 on t1.winner_id  =  t2.winner_id group by t1.year;
select count(*),  t1.year from matches as t1 join matches as t2 on t1.winner_id  =  t2.winner_id group by t1.year;
select winner_name,  winner_rank from matches order by winner_age limit 3;
select winner_name,  winner_rank from matches order by winner_age limit 3;
select count(distinct winner_id) from matches where tourney_name  =  "wta championships" and hand  =  "left";
select count(*) from matches where winner_hand  =  "left";
select t1.first_name,  t1.country_code,  t1.birth_date from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id group by t2.winner_id order by sum(t2.ranking_points) limit 1;
select t1.first_name,  t1.country_code,  t1.birth_date from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id group by t2.winner_id order by sum(t2.winner_rank_points) limit 1;
select count(*),  hand from players group by hand;
select count(*),  hand from players group by hand;
select count(*) from ship where disposition_of_ship  =  'captured';
select name,  tonnage from ship order by name desc;
select t1.name,  t2.date,  t3.result from battle as t1 join ship as t2 on t1.id  =  t2.id join death as t3 on t1.id  =  t3.caused_by_ship_id;
select max(t1.killed),  min(t1.killed) from ship as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id;
select avg(injured) from death;
select t1.note,  t2.injured from ship as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id where t1.tonnage  =  't';
select t1.name,  t1.result from battle as t1 join battle as t2 on t1.id  =  t2.id where t2.bulgarian_commander!= 'boril';
select distinct id,  name from battle where ship_type  =  'brig';
select t1.id,  t1.name from battle as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id group by t1.id having sum(t2.killed)  >  10;
select t1.id,  t2.name from ship as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id group by t1.id order by sum(t2.injured) desc limit 1;
select distinct t1.name from battle as t1 join ship as t2 on t1.id  =  t2.id where t2.latin_commander  =  'baldwin i' and t1.bulgarian_commander  =  'kaloyan';
select count(distinct result) from battle;
select count(*) from battle where id not in (select lost_in_battle from ship where tonnage  =  225);
select t1.name,  t1.date from battle as t1 join ship as t2 on t1.id  =  t2.id where t2.name  =  'lettice' intersect select t1.name,  t1.date from battle as t1 join ship as t2 on t1.id  =  t2.id where t2.name  =  'hms atalanta';
select name,  result,  bulgarian_commander from battle where lost_in_battle = "english channel";
select note from death where note like '%east%';
select address_id from addresses union select address_id from addresses where line_1!= "line 1" and line_2!= "line 2";
select t1.line_1,  t1.line_2 from addresses as t1 join addresses as t2 on t1.address_id  =  t2.address_id;
select count(*) from courses;
select count(*) from courses;
select t2.course_description from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id where t1.course_name  =  "math";
select t1.course_description from courses as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id where t2.degree_title  =  "math";
select t1.zip_postcode from addresses as t1 join addresses as t2 on t1.address_id  =  t2.address_id where t2.city  =  "port chelsea";
select t1.zip_postcode from addresses as t1 join city as t2 on t1.address_id  =  t2.city where t2.city  =  "port chelsea";
select t1.department_name,  t1.department_id from departments as t1 join degree_programs as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1;
select t1.department_name,  t1.department_id from departments as t1 join degree_programs as t2 on t1.department_id  =  t2.department_id group by t2.department_id order by count(*) desc limit 1;
select count(*) from departments as t1 join degree_programs as t2 on t1.department_id  =  t2.department_id where t2.degree_program_name  =  "any";
select count(distinct department_id) from degree_programs;
select count(distinct degree_program_name) from degree_programs;
select count(distinct degree_program_id) from degree_programs;
select count(*) from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id where t1.degree_name  =  "engineering";
select count(*) from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id where t1.degree_name  =  "engineering";
select section_name,  section_description from sections;
select section_name,  section_description from sections;
select t1.course_name,  t1.course_id from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id group by t1.course_id having count(*)  <=  2;
select t1.course_name,  t1.course_id from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id group by t1.course_id having count(*)  <  2;
select t1.section_name from courses as t1 join sections as t2 on t1.course_id  =  t2.course_id order by t2.section_name;
select section_name from sections order by section_name desc;
select t1.semester_id,  t1.semester_name from student_enrolment as t1 join semesters as t2 on t1.semester_id  =  t2.semester_id group by t2.semester_id order by count(*) desc limit 1;
select t1.semester_name,  t1.semester_id from semesters as t1 join student_enrolment_courses as t2 on t1.semester_id  =  t2.semester_id group by t1.semester_id order by count(*) desc limit 1;
select department_description from departments where department_name like "%computer%";
select t2.department_description from departments as t1 join departments as t2 on t1.department_id  =  t2.department_id where t1.department_name like "%computer%";
select t1.first_name,  t1.middle_name,  t1.last_name,  t1.student_id from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.semester_id  =  1;
select t1.first_name,  t1.middle_name,  t1.last_name,  t1.student_enrolment_id from students as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id where t2.semester_id  =  "2" union select t1.first_name,  t1.middle_name,  t1.last_name,  t1.student_enrolment_id from students as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id
select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.degree_program_id  =  "bachelor";
select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.degree_program_id  =  'bachelor';
select t1.kind_of_program from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.kind_of_program order by count(*) desc limit 1;
select t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_summary_name order by count(*) desc limit 1;
select t1.program_id,  t1.program_summary_name from degree_programs as t1 join student_enrolment_courses as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_program_id order by count(*) desc limit 1;
select t1.degree_program_id,  t2.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_program_id order by count(*) desc limit 1;
select t1.student_id,  t1.first_name,  t1.middle_name,  t1.last_name,  count(*) from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id group by t1.student_id order by count(*) desc limit 1;
select t1.first_name,  t1.middle_name,  t1.last_name,  count(*) from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id group by t1.student_enrolment_id order by sum(t2.enrollment_count) limit 1;
select t1.semester_name from semesters as t1 join student_enrolment as t2 on t1.semester_id  =  t2.semester_id where t2.student_enrolment_id is null;
select semester_name from semesters where semester_id not in ( select semester_id from student_enrolment_courses );
select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id where t2.student_enrolment_id  =  "true";
select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id where t2.student_enrolment_id  =  "true";
select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id group by t1.course_name order by count(*) desc limit 1;
select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id group by t1.course_name order by count(*) desc limit 1;
select t1.last_name from students as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id where t2.state_province_county  =  "north carolina" except select t1.last_name from students as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id where t2.state_province_county  =  "north carolina";
select t1.last_name from students as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id where t2.state_province_county  =  "north carolina" except select t1.last_name from students as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id where t2.state_province_county  =  "north carolina";
select t1.transcript_date,  t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.student_enrolment_id group by t2.student_enrolment_id having count(*)  >=  2;
select t1.transcript_date,  t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.student_enrolment_id group by t2.student_enrolment_id having count(*)  >=  2;
select t1.phone_number from addresses as t1 join students as t2 on t1.address_id  =  t2.student_id where t2.first_name  =  "timothy" and t2.last_name  =  "ward";
select t1.mobile_phone_number from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.student_enrolment_name  =  "timmothy ward";
select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.student_enrolment_id  =  "1";
select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.student_enrolment_id  =  ( select student_enrolment_id from student_enrolment order by student_enrolment_id limit 1);
select t1.first_name,  t1.middle_name,  t1.last_name from graduates as t1 join students as t2 on t1.student_id  =  t2.student_id where t2.graduation_date  =  "latest";
select t1.first_name,  t1.middle_name,  t1.last_name from graduates as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id order by t2.student_course_id limit 1;
select t1.first_name from addresses as t1 join permanent_address_id as t2 on t1.address_id  =  t2.permanent_address_id where t2.address_id!= t1.address_id;
select t1.first_name from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.permanent_address_id where t2.current_address_id!= t2.permanent_address_id;
select t1.address_id,  t1.line_1,  t1.line_2,  t1.line_3 from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.address_id group by t1.address_id order by count(*) desc limit 1;
select address_id,  line_1,  line_2 from addresses order by count(*) desc limit 1;
select avg(printing_date) from transcripts;
select avg(transcript_date) from transcripts;
select t1.transcript_date,  t1.other_details from student_enrolment as t1 join transcripts as t2 on t1.transcript_id  =  t2.transcript_id where t2.transcript_date  =  "null";
select t1.transcript_date_release from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.student_enrolment_id where t2.date_release  =  (select min(date_release) from transcripts);
select count(*) from transcripts as t1 join transcripts as t2 on t1.transcript_id  =  t2.transcript_id where t1.status_released  =  'yes';
select count(*) from transcripts;
select t1.transcript_release_date from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.transcript_id;
select transcript_released_date from transcripts order by transcript_released_date limit 1;
select t1.transcript_id from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id group by t1.transcript_id having count(*)  <=  1;
select max(transcript_id),  t1.course_id from student_enrolment as t1 join courses as t2 on t1.course_id  =  t2.course_id group by t2.course_id;
select t1.transcript_date from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.student_course_id group by t2.student_course_id order by count(*) limit 1;
select t1.transcript_date,  t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.student_enrolment_id group by t2.student_enrolment_id order by count(*) limit 1;
select t1.semester_name from semesters as t1 join student_enrolment_courses as t2 on t1.semester_id  =  t2.semester_id where t2.student_enrolment_type  =  "master" intersect select t1.semester_name from semesters as t1 join student_enrolment_courses as t2 on t1.semester_id  =  t2.semester_id where t2.student_enrolment_type  =  "bachelor";
select t1.semester_id from semesters as t1 join student_enrolment_courses as t2 on t1.semester_id  =  t2.semester_id where t2.student_enrolment_id  =  (select student_enrolment_id from student_enrolment_courses where t1.course_id  =  "masters" intersect select student_enrolment_id from student_enrolment_courses where t1.course_id  =  "bachelors");
select count(distinct address_id) from addresses;
select distinct address_id from addresses where address_id in ( select distinct address_id from student_enrolment_courses );
select * from student_enrolment order by student_enrolment_id desc;
select other_details from students order by other_details reverse;
select t1.section_name from departments as t1 join sections as t2 on t1.department_id  =  t2.department_id;
select section_description from sections where section_name  =  "h";
select t1.first_name from students as t1 join permanent_address_id as t2 on t1.permanent_address_id  =  t2.permanent_address_id where t2.country  =  "haiti" or t1.cell_mobile_number  =  09700166582;
select t1.first_name from students as t1 join permanent_address_id as t2 on t1.permanent_address_id  =  t2.permanent_address_id where t2.country  =  "haiti" or t2.cell_mobile_number  =  09700166582;
select title from cartoon order by title;
select title from cartoon order by title;
select directed_by from cartoon where directed_by  =  "ben jones";
select title from cartoon where directed_by  =  "ben jones";
select count(*) from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.original_air_date  =  "joseph kuhr";
select count(*) from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.written_by  =  "joseph kuhr";
select title,  directed_by from cartoon order by original_air_date;
select title,  directed_by from cartoon order by original_air_date;
select t1.title from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.directed_by  =  "ben jones" or t2.directed_by  =  "brandon vietti";
select title from cartoon where directed_by  =  "ben jones" or directed_by  =  "brandon vietti";
select country,  count(*) from tv_channel group by country order by count(*) desc limit 1;
select country,  count(*) from tv_channel group by country order by count(*) desc limit 1;
select count(distinct title),  count(distinct content) from tv_channel;
select count(distinct series_name),  count(distinct content) from tv_channel;
select content from tv_channel where id  =  "sky radio";
select content from tv_channel where series_name  =  "sky radio";
select package_option from tv_channel where id  =  "sky radio";
select package_option from tv_channel where series_name  =  "sky radio";
select count(*) from tv_channel where language  =  'english';
select count(*) from tv_channel where language  =  'english';
select t1.language,  count(*) from tv_channel as t1 join tv_channel as t2 on t1.id  =  t2.id group by language order by count(*) desc limit 1;
select t1.language from tv_channel as t1 join tv_channel as t2 on t1.id  =  t2.id group by t2.language order by count(*) limit 1;
select language,  count(*) from tv_channel group by language;
select t1.language,  count(*) from tv_channel as t1 join tv_channel as t2 on t1.id  =  t2.id group by t2.language;
select t1.series_name from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where title  =  "the rise of the blue beetle!";
select t1.series_name from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where title  =  "the rise of the blue beetle";
select t1.title from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.series_name  =  "sky radio";
select t1.title from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.series_name  =  "sky radio";
select episode from tv_series order by rating;
select episode from tv_series order by rating;
select t1.episode,  t2.rating from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id order by t2.rating desc limit 3;
select t1.episode,  t2.rating from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id group by t1.episode order by count(*) desc limit 3;
select min(share),  max(share) from tv_series;
select max(share),  min(share) from tv_series;
select air_date from tv_series where episode  =  "a love of a lifetime";
select air_date from tv_series where episode  =  "a love of a lifetime";
select t1.weekly_rank from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id where t2.episode  =  "a love of a lifetime";
select t1.weekly_rank from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id where t2.episode  =  "a love of a lifetime";
select t2.series_name from tv_series as t1 join tv_channel as t2 on t1.channel  =  t2.id where t1.episode  =  "a love of a lifetime";
select title from tv_series where episode  =  "a love of a lifetime";
select t2.episode from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.series_name  =  "sky radio";
select t2.episode from tv_series as t1 join tv_channel as t2 on t1.channel  =  t2.id where t1.title  =  "sky radio";
select count(*),  directed_by from cartoon group by directed_by;
select directed_by,  count(*) from cartoon group by directed_by;
select t1.production_code,  t2.channel from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id order by t1.air_date desc limit 1;
select t1.prod_code,  t2.channel from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id order by t1.original_air_date desc limit 1;
select package_option,  t1.series_name from tv_channel as t1 join tv_channel as t2 on t1.id  =  t2.id where t2.high_definition_tv  =  'yes';
select package_option,  t1.series_name from tv_channel as t1 join tv_channel as t2 on t1.id  =  t2.id where t2.high_definition_tv  =  'yes';
select t1.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t2.written_by  =  "todd casey";
select country from cartoon where directed_by  =  "todd casey";
select country from tv_channel except select t1.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t2.directed_by  =  "todd casey";
select country from tv_channel except select country from tv_channel where written_by  =  "todd casey";
select t1.title,  t2.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t2.directed_by  =  "ben jones" intersect select t1.title,  t2.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t2.directed_by  =  "michael chang";
select t1.series_name,  t2.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t2.directed_by  =  "ben jones" intersect select t1.series_name,  t2.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t2.directed_by  =  "michael chang";
select pixel_aspect_ratio_par,  country from tv_channel where language!= 'english';
select pixel_aspect_ratio_par,  country from tv_channel where language!= 'english';
select id from tv_channel group by country having count(*)  >  2;
select id from tv_channel where channel  >  2;
select distinct channel from tv_channel except select t1.channel from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t2.directed_by  =  "ben jones";
select id from tv_channel where id not in ( select channel from cartoon where directed_by  =  'ben jones');
select package_option from tv_channel where id not in ( select channel from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.directed_by  =  'ben jones');
select distinct package_option from tv_channel where id not in ( select channel from cartoon );
select count(*) from people;
select count(*) from people;
select earnings from poker_player order by earnings desc;
select earnings from poker_player order by earnings desc;
select t1.final_table_made,  t2.best_finish from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id;
select t1.final_table_made,  t2.best_finish from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id;
select avg(earnings) from poker_player;
select avg(earnings) from poker_player;
select money_rank from poker_player order by earnings desc limit 1;
select money_rank from people order by earnings desc limit 1;
select max(final_table_made) from poker_player where earnings  <  200000;
select max(final_table_made) from poker_player where earnings  <  200000;
select name from people where people_id in ( select people_id from poker_player);
select name from people;
select name from poker_player where earnings  >  300000;
select t1.name from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id where t2.earnings  >  300000;
select name from people order by final_table_made asc;
select t2.name from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by count(*) desc;
select birth_date from poker_player order by earnings desc limit 1;
select birth_date from poker_player order by earnings desc limit 1;
select money_rank from people order by height desc limit 1;
select money_rank from people order by height desc limit 1;
select avg(earnings) from people where height  >  200;
select avg(earnings) from people where height  >  200;
select name from poker_player order by earnings desc;
select name from poker_player order by earnings desc;
select nationality,  count(*) from people group by nationality;
select count(*),  nationality from people group by nationality;
select nationality from people group by nationality order by count(*) desc limit 1;
select nationality from people group by nationality order by count(*) desc limit 1;
select nationality from people group by nationality having count(*)  >=  2;
select nationality from people group by nationality having count(*)  >=  2;
select name,  birth_date from people order by name asc;
select name,  birth_date from people order by name;
select name from people where nationality!= "russia";
select name from people where nationality!= 'russia';
select name from people except select t1.name from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id;
select name from people where people_id not in ( select people_id from poker_player);
select count(distinct nationality) from people;
select count(distinct nationality) from people;
select count(*) from area_code_state;
select contestant_number,  contestant_name from contestants order by contestant_name desc;
select vote_id,  phone_number,  state from votes;
select max(area_code),  min(area_code) from area_code_state;
select created from votes where state  =  "ca" order by created desc limit 1;
select contestant_name from contestants except select t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number where t2.contestant_name  =  "jessie alloway";
select distinct state,  created from votes;
select t1.contestant_number,  t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number group by t1.contestant_number having count(*)  >=  2;
select t1.contestant_number,  t2.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number group by t1.contestant_number order by count(*) limit 1;
select count(*) from votes where state  =  "ny" or state  =  "ca";
select count(*) from contestants where contestant_number not in ( select contestant_number from votes );
select t1.area_code from area_code_state as t1 join votes as t2 on t1.state  =  t2.state group by t1.state order by count(*) desc limit 1;
select created,  state,  phone_number from votes where contestant_name  =  "tabatha gehling";
select distinct t1.area_code from area_code_state as t1 join votes as t2 on t1.state  =  t2.state where t2.contestant_number  =  1 intersect select distinct t1.area_code from area_code_state as t1 join votes as t2 on t1.state  =  t2.state where t2.contestant_number  =  2;
select distinct contestant_name from contestants where contestant_name like '%al%';
select name from country where continent  =  "independent" and year  >  1950;
select name from country where indepyear  >  1950;
select count(*) from country where governmentform  =  "republic";
select count(*) from country where governmentform  = 'republic';
select sum(surfacearea) from country where continent  =  "caribbean";
select sum(surfacearea) from country where continent  =  "carribean";
select continent from country where name  =  "anguilla";
select continent from country where code  =  "anguilla";
select region from city where name  =  "kabul";
select region from country where name  =  "kabul";
select language from country where countrycode  =  "aruba" group by language order by count(*) desc limit 1;
select language from country where countrycode  =  "aruba" group by language order by count(*) desc limit 1;
select t1.population,  t1.lifeexpectancy from city as t1 join country as t2 on t1.countrycode  =  t2.code where t2.name  =  "brazil";
select t1.population,  t1.lifeexpectancy from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.countrycode  =  'brazil';
select region,  population from country where name  =  "angola";
select t1.region,  t1.population from country as t1 join country as t2 on t1.code  =  t2.code where t2.name  =  "angola";
select avg(lifeexpectancy) from country where continent  =  "central africa";
select avg(lifeexpectancy) from country where region  =  "central africa";
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.region  =  "asia" order by t2.lifeexpectancy limit 1;
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode order by t2.lifeexpectancy limit 1;
select sum(population),  max(gnp) from country where continent  =  "asia";
select count(*),  max(gnp) from country where continent  =  "asia";
select avg(lifeexpectancy) from country where continent  =  "africa" and governmentform  =  "republic";
select avg(lifeexpectancy) from country where continent  =  "africa" and governmentform  =  "republic";
select sum(surfacearea) from country where continent  =  "asia" intersect select sum(surfacearea) from country where continent  =  "europe";
select sum(surfacearea) from country where continent  =  "asia" or continent  =  "europe";
select count(*) from city where district  =  "gelderland";
select sum(population) from city where district  =  "gelderland";
select avg(gnp),  sum(gnp) from country where government  =  "us territory";
select avg(gnp),  sum(gnp) from country where code  =  'us';
select count(distinct language) from country;
select count(distinct language) from country;
select count(distinct governmentform) from country where continent  =  "africa";
select count(distinct governmentform) from country where continent  =  "africa";
select sum(t1.percentage) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t2.name  =  "aruba";
select count(distinct language) from country where countrycode  =  "aruba";
select count(distinct language) from countrylanguage where countrycode  =  "afghanistan";
select count(distinct language) from country where countrycode  =  "afghanistan";
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.name order by count(*) desc limit 1;
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.name order by count(*) desc limit 1;
select continent from country group by continent order by count(*) desc limit 1;
select continent from country group by continent order by count(*) desc limit 1;
select count(distinct language) from country where countrycode in (select countrycode from country where language  =  "english" intersect select countrycode from country where language  =  "dutch");
select count(distinct nation) from country where language  =  "english" intersect select count(distinct nation) from country where language  =  "dutch";
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "french";
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "french";
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "french";
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "french";
select count(distinct continent) from country where language  =  "chinese";
select count(distinct continent) from country where language  =  'chinese';
select region from country where language  =  "english" union select region from country where language  =  "dutch";
select region from country where language  =  "dutch" or language  =  "english";
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch";
select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" intersect select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch";
select language from country where continent  =  'asian' group by language order by count(*) desc limit 1;
select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  =  (select max(percentage) from countrylanguage where continent  =  "asian");
select language from country where governmentform  =  "republic" group by language having count(*)  =  1;
select language from country where governmentform  =  "republic" group by language having count(*)  =  1;
select name from city where population  =  (select max(population) from city where language  =  'english');
select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.language  =  "english" order by t1.population desc limit 1;
select t1.name,  t1.population,  t1.lifeexpectancy from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.continent  =  "asian" group by t1.name order by sum(t2.lifeexpectancy) desc limit 1;
select t1.name,  t1.population,  t1.lifeexpectancy from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.continent  =  "asian" order by t2.surfacearea desc limit 1;
select avg(lifeexpectancy) from country where language!= "english";
select avg(lifeexpectancy) from country where language!= "english";
select sum(population) from country where code2!= "eng";
select count(*) from country where code2 not in ( select countrycode from country language where language  =  'english');
select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.headofstate  =  'beatrix';
select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.headofstate  =  "beatrix";
select sum(t1.percentage) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t2.founded  <  1930;
select count(distinct language) from country where year  <  1930;
select distinct t1.name from country as t1 join country as t2 on t1.code  =  t2.code where t2.continent  =  "europe" group by t1.name order by sum(t1.surfacearea) desc limit 1;
select countrycode from country where continent  =  "europe" group by countrycode order by surfacearea desc limit 1;
select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.continent  =  "africa" except select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.continent  =  "asia";
select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  <  (select min(percentage) from country where continent  =  "africa");
select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.continent  =  "asian" except select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.continent  =  "africa";
select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  >  (select max(percentage) from country where continent  =  "africa");
select countrycode from country where language!= 'english';
select countrycode from country where language!= 'english';
select countrycode from country where language!= 'english';
select countrycode from country where language!= 'english';
select code from country where language!= 'english' and governmentform!='republic';
select distinct countrycode from country where language!= 'english' and governmentform!='republic';
select distinct t1.name from city as t1 join country as t2 on t1.countrycode  =  t2.code where t2.region  =  "europe" except select t1.name from city as t1 join country as t2 on t1.countrycode  =  t2.code where t2.official  =  "english";
select name from city where continent  =  "europe" except select t1.name from city as t1 join country as t2 on t1.countrycode  =  t2.code where t2.language  =  "english";
select distinct t1.name from city as t1 join country as t2 on t1.countrycode  =  t2.code where t2.region  =  "asian" and t2.language  =  "chinese";
select distinct t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.language  =  "chinese";
select t1.name,  t1.indepyear,  t1.surfacearea from country as t1 join country as t2 on t1.code  =  t2.code order by t2.population limit 1;
select t1.name,  t1.indepyear,  t1.surfacearea from country as t1 join country as t2 on t1.code  =  t2.code order by t2.population limit 1;
select t1.name,  t1.population,  t1.leader from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.countrycode order by surfacearea desc limit 1;
select t1.name,  t1.population,  t1.headofstate from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode order by surfacearea desc limit 1;
select t1.name,  count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.countrycode having count(*)  >=  3;
select t1.name,  count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.name having count(*)  >  2;
select district,  count(*) from city where population  >  ( select avg(population) from city );
select count(*),  district from city where population  >  ( select avg(population) from city );
select governmentform,  sum(lifeexpectancy) from country group by governmentform;
select sum(lifeexpectancy),  sum(governmentform) from country group by governmentform;
select continent,  avg(lifeexpectancy),  sum(population) from country group by continent;
select continent,  sum(population),  avg(lifeexpectancy) from country group by continent;
select name,  surfacearea from country order by surfacearea desc limit 5;
select name,  surfacearea from country order by population desc limit 5;
select name from country order by population desc limit 3;
select name from city order by population desc limit 3;
select name from country order by population limit 3;
select name from country order by population asc limit 3;
select count(*) from country where continent  =  "asia";
select count(*) from country where continent  =  "asia";
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.continent  =  "europe" and t1.population  =  80000;
select name from country where continent  =  "europe" and population  =  80000;
select sum(population),  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000;
select sum(population),  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000;
select name from city where population between 160000 and 900000;
select name from city where population between 160000 and 900000;
select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t2.language order by count(*) desc limit 1;
select language from country order by percentage desc limit 1;
select t1.language,  max(percentage) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code group by t2.countrycode;
select t1.countrycode,  t2.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.countrycode order by sum(t2.percentage) limit 10;
select sum(percentage) from countrylanguage group by percentage order by count(*) desc limit 1;
select count(*) from country where language  =  "spanish" group by language;
select code from country where language  =  "spanish" group by code order by sum(percentage) desc limit 1;
select countrycode from country where language  =  "spanish" group by countrycode order by sum(percentage) desc limit 1;
select count(*) from conductor;
select count(*) from conductor;
select name from conductor order by age asc;
select name from conductor order by age;
select name from conductor where nationality!= "usa";
select name from conductor where nationality!= "usa";
select record_company from orchestra order by year_of_founded desc;
select record_company from orchestra order by year_of_founded desc;
select avg(attendance) from show;
select avg(attendance) from show;
select max(share),  min(share) from performance where type!= "live final";
select max(share),  min(share) from performance where type!= "live final";
select count(distinct nationality) from conductor;
select count(distinct nationality) from conductor;
select name from conductor order by year_of_work desc;
select name from conductor order by year_of_work desc;
select name from conductor order by year_of_work desc limit 1;
select t1.name from conductor as t1 join conductor as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name order by count(*) desc limit 1;
select t1.name,  t2.orchestra from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.orchestra_id;
select t1.name,  t2.orchestra from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.orchestra_id;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name having count(*)  >  1;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name having count(*)  >  1;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name order by count(*) desc limit 1;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name order by count(*) desc limit 1;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id where t2.year_of_founded  >  2008;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id where t2.year_of_founded  >  2008;
select record_company,  count(*) from orchestra group by record_company;
select count(*),  t1.record_company from orchestra as t1 join orchestra as t2 on t1.orchestra_id  =  t2.orchestra_id group by t2.record_company;
select major_record_format from orchestra group by major_record_format order by count(*) asc;
select major_record_format from orchestra group by major_record_format order by count(*) desc;
select record_company from orchestra group by record_company order by count(*) desc limit 1;
select record_company from orchestra group by record_company order by count(*) desc limit 1;
select name from orchestra where orchestra_id not in (select orchestra_id from performance);
select orchestra from orchestra except select orchestra from orchestra;
select t1.record_company from orchestra as t1 join orchestra as t2 on t1.orchestra_id  =  t2.orchestra_id where t2.year_of_founded  >  2003 intersect select t1.record_company from orchestra as t1 join orchestra as t2 on t1.orchestra_id  =  t2.orchestra_id where t2.year_of_founded  <  2003;
select t1.record_company from orchestra as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id where t2.year_of_founded  >  2003 intersect select t1.record_company from orchestra as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id where t2.year_of_founded  <  2003;
select count(*) from orchestra where record_format  =  "cd" or record_format  =  "dvd";
select count(*) from orchestra where record_format  =  "cd" union select count(*) from orchestra where record_format  =  "dvd";
select year_of_founded from orchestra where conductor_id in ( select conductor_id from performance group by conductor_id having count(*)  >  1);
select year_of_founded from orchestra where major_record_format  >  1;
select count(*) from highschooler;
select count(*) from highschooler;
select name,  grade from highschooler;
select name,  grade from highschooler;
select grade from highschooler;
select grade from highschooler;
select grade from student_id where name  =  "kyle";
select grade from highschooler where name  =  "kyle";
select name from highschooler where grade  =  10;
select name from highschooler where grade  =  10;
select id from highschooler where name  =  "kyle";
select student_id from friend where friend_id  =  "kyle";
select count(*) from highschooler where grade  =  9 or grade  =  10;
select count(*) from highschooler where grade  =  9 or grade  =  10;
select count(*),  grade from highschooler group by grade;
select count(*),  grade from highschooler group by grade;
select grade from highschooler group by grade order by count(*) desc limit 1;
select grade from highschooler group by grade order by count(*) desc limit 1;
select grade from student group by grade having count(*)  >=  4;
select grade from highschooler group by grade having count(*)  >=  4;
select t1.student_id,  count(*) from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id group by t1.student_id;
select count(*),  t1.student_id from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id group by t1.student_id;
select t1.name,  count(*) from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.name;
select t1.name,  count(*) from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.name;
select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.name order by count(*) desc limit 1;
select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.name order by count(*) desc limit 1;
select name from highschooler where id in ( select friend_id from friend group by friend_id having count(*)  >=  3);
select name from highschooler where grade  >=  3;
select name from friend where friend_id  =  "kyle";
select t1.name from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t2.name  =  'kyle';
select count(*) from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t2.name  =  'kyle';
select count(*) from friend as t1 join friend_id as t2 on t1.friend_id  =  t2.friend_id where t1.name  =  'kyle';
select student_id from friend except select student_id from friend;
select student_id from highschooler except select student_id from friend;
select name from highschooler where id not in (select student_id from friend);
select name from student where id not in (select student_id from friend);
select t1.id from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id where t2.liked_id is null intersect select t1.id from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id where t2.liked_id is not null;
select student_id from friend intersect select student_id from likes;
select t1.name from student as t1 join friend as t2 on t1.student_id  =  t2.student_id where t2.liked_id is not null;
select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id where t2.liked_id  =  t1.id;
select count(*),  t1.student_id from likes as t1 join highschooler as t2 on t1.student_id  =  t2.id group by t2.student_id;
select count(*),  t1.student_id from likes as t1 join highschooler as t2 on t1.student_id  =  t2.id group by t2.student_id;
select t1.name,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.name;
select t1.name,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.name;
select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.name order by count(*) desc limit 1;
select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.name order by count(*) desc limit 1;
select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.name having count(*)  >=  2;
select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.name having count(*)  >  2;
select name from student where grade  >  5 intersect select t1.name from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id group by t2.name having count(*)  >=  2;
select name from highschooler where grade  >  5 and count(*)  >=  2;
select count(*) from likes as t1 join highschooler as t2 on t1.student_id  =  t2.id where t2.name  =  'kyle';
select count(*) from likes as t1 join highschooler as t2 on t1.student_id  =  t2.id where t2.name  =  "kyle";
select avg(grade) from friend;
select avg(grade) from friend;
select min(grade) from student where student_id not in (select student_id from friend);
select min(grade) from student where student_id not in (select student_id from friend);
select state from owners intersect select state from professionals;
select state from owners intersect select state from professionals;
select avg(t1.age) from dogs as t1 join treatments as t2 on t1.owner_id  =  t2.owner_id;
select avg(t1.age) from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id;
select professional_id,  last_name,  cell_phone from professionals where state  =  "indiana" intersect select professional_id,  last_name,  cell_phone from professionals where treatment_type_code  =  "treatment_type_code" group by professional_id;
select professional_id,  last_name,  cell_number from professionals where state  =  "indiana" intersect select professional_id,  last_name,  cell_number from professionals where professional_id in (select professional_id from professionals where state  =  "indiana" and treatment_type_code  =  "treatment_type_code");
select t1.name from dogs as t1 join treatments as t2 on t1.owner_id  =  t2.owner_id where t2.cost_of_treatment  >  1000;
select t1.name from dogs as t1 join treatments as t2 on t1.owner_id  =  t2.owner_id where t2.cost_of_treatment  >  1000;
select distinct t1.first_name from owners as t1 join professionals as t2 on t1.owner_id  =  t2.owner_id where t2.first_name is null intersect select distinct t1.first_name from owners as t1 join professionals as t2 on t1.owner_id  =  t2.owner_id where t2.first_name is null;
select t1.first_name from owners as t1 join professionals as t2 on t1.owner_id  =  t2.owner_id where t2.professional_id is null intersect select t1.first_name from owners as t1 join professionals as t2 on t1.owner_id  =  t2.owner_id where t2.professional_id is null;
select professional_id,  role_code,  email_address from professionals except select t1.professional_id,  t2.role_code,  t3.email_address from owners as t1 join professionals as t2 on t1.owner_id  =  t2.owner_id join treatment_types as t3 on t2.professional_id  =  t3.professional_id where t3.treatment_type_code  =  "dogs";
select professional_id,  role_code,  email_address from professionals except select professional_id,  role_code,  email_address from professionals where treatment_type_code  =  "dog";
select owner_id,  first_name,  last_name from dogs order by count(*) desc limit 1;
select t1.owner_id,  t1.first_name,  t1.last_name from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id group by t2.owner_id order by count(*) desc limit 1;
select t1.professional_id,  t2.role_code,  t3.first_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id join owners as t3 on t2.owner_id  =  t3.owner_id group by t1.professional_id having count(*)  >=  2;
select t1.professional_id,  t2.role_code,  t3.first_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id join owners as t3 on t2.owner_id  =  t3.owner_id group by t1.professional_id having count(*)  >=  2;
select breed_name from breeds order by count(*) desc limit 1;
select t1.breed_name from breeds as t1 join dogs as t2 on t1.breed_code  =  t2.breed_code group by t1.breed_name order by count(*) desc limit 1;
select t1.owner_id,  t1.last_name from owners as t1 join treatments as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t2.cost_of_treatment) desc limit 1;
select t1.owner_id,  t2.last_name from owners as t1 join treatments as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t2.cost_of_treatment) desc limit 1;
select t1.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code group by t2.treatment_type_code order by sum(t2.cost_of_treatment) limit 1;
select t1.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code group by t2.treatment_type_code order by sum(t2.cost_of_treatment) limit 1;
select t1.owner_id,  t2.zip_code from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t2.charge_amount) desc limit 1;
select t1.owner_id,  sum(t2.zip_code) from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t1.cost_of_treatment) desc limit 1;
select t1.professional_id,  t2.cell_phone from owners as t1 join professionals as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id having count(*)  >=  2;
select professional_id,  cell_phone from treatments group by professional_id having count(*)  >=  2;
select t1.first_name,  t1.last_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where t2.cost_of_treatment  <  (select avg(cost_of_treatment) from treatments);
select t1.first_name,  t1.last_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where t2.cost_of_treatment  <  ( select avg(cost_of_treatment) from treatments );
select t1.date_of_treatment,  t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id  =  t2.professional_id;
select t1.date_of_treatment,  t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id  =  t2.professional_id;
select t1.treatment_type_description,  t2.treatment_type_code from treatments as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code;
select t1.cost_of_treatment,  t2.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code;
select t1.first_name,  t1.last_name,  t3.size_code from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id join sizes as t3 on t2.dog_id  =  t3.dog_id;
select t1.first_name,  t1.last_name,  t3.size_code from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id join sizes as t3 on t2.dog_id  =  t3.dog_id;
select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;
select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;
select t1.breed_name,  t2.date_of_treatment from breeds as t1 join treatments as t2 on t1.breed_code  =  t2.breed_code where t1.breed_name  =  ( select breed_name from breeds order by breed_code desc limit 1);
select t1.name,  t2.date_of_treatment from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id where t1.breed_code  =  "rare";
select t1.first_name,  t2.dog_name from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where t2.state  =  "virginia";
select t1.first_name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id where t1.state  =  "virginia";
select t1.date_arrived,  t1.date_departed from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id;
select t1.date_arrived,  t1.date_departed from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id;
select t1.last_name from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id order by t1.date_of_birth limit 1;
select t1.last_name from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id order by t1.date_of_birth limit 1;
select email_address from owners where state  =  "hawaii" intersect select email_address from owners where state  =  "wisconsin";
select email_address from owners where state  =  "hawaii" intersect select email_address from owners where state  =  "wisconsin";
select t1.date_arrived,  t2.date_departed from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id;
select t1.date_arrived,  t2.date_departed from dogs as t1 join dates as t2 on t1.date_arrived  =  t2.date_arrived;
select count(*) from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id;
select count(*) from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id where t2.treatment_type_code  =  "treatment_type_code";
select count(*) from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where t1.treatment_type_code  =  "dog";
select count(*) from dogs as t1 join professionals as t2 on t1.owner_id  =  t2.owner_id where t1.breed_code  =  "dog";
select role_code,  street,  city,  state from professionals where city like '%west%';
select t1.role_code,  t2.street,  t3.city,  t4.state from professionals as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where t2.city like '%west%';
select t1.first_name,  t1.last_name,  t3.email_address from owners as t1 join states as t2 on t1.state  =  t2.name where t2.state like '%north%';
select t1.first_name,  t1.last_name,  t1.email_address from owners as t1 join states as t2 on t1.state  =  t2.name where t2.state like '%north%';
select count(*) from dogs where age  <  (select avg(age) from dogs);
select count(*) from dogs where age  <  (select avg(age) from dogs);
select t1.treatment_amount from treatments as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code order by t2.treatment_amount limit 1;
select cost_of_treatment from treatments order by date_of_treatment desc limit 1;
select count(*) from dogs where breed_code not in ( select breed_code from treatments );
select count(*) from dogs where dog_id not in ( select dog_id from treatments);
select count(*) from owners where owner_id not in ( select owner_id from dogs );
select count(*) from owners where owner_id not in ( select owner_id from dogs );
select count(*) from professionals where professional_id not in ( select professional_id from treatments);
select count(*) from professionals except select count(*) from professionals where professional_id in (select professional_id from treatments);
select t2.name,  t2.age,  t2.weight from dogs as t1 join dogs as t2 on t1.dog_id  =  t2.dog_id where t1.abandoned_yn  =  "1";
select t2.name,  t2.age,  t2.weight from dogs as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id where t1.abandoned_yn  =  '1';
select avg(age) from dogs;
select avg(age) from dogs;
select age from dogs order by date_of_birth desc limit 1;
select age from dogs order by date_of_birth desc limit 1;
select charge_type_code,  cost_of_treatment from treatments group by charge_type_code;
select charge_type_code,  charge_amount from charges group by charge_type_code;
select cost_of_treatment from treatments order by cost_of_treatment desc limit 1;
select charge_amount from charges order by charge_amount desc limit 1;
select email_address,  cell_number,  home_phone from professionals;
select email_address,  cell_phone,  home_phone from professionals;
select distinct breed_type_code,  size_code from breeds;
select distinct breed_type_code,  size_type_code from dogs;
select t1.first_name,  t1.treatment_description from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id;
select t1.first_name,  t1.treatment_description from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id;
select count(*) from singer;
select count(*) from singer;
select name from singer order by net_worth_millions asc;
select name from singer order by net_worth_millions asc;
select birth_year,  citizenship from singer;
select birth_year,  citizenship from singer;
select name from singer where citizenship!= "france";
select name from singer where citizenship!= 'french';
select name from singer where birth_year  =  1948 or birth_year  =  1949;
select name from singer where birth_year  =  1948 or birth_year  =  1949;
select name from singer order by net_worth_millions desc limit 1;
select name from singer order by net_worth_millions desc limit 1;
select citizenship,  count(*) from singer group by citizenship;
select citizenship,  count(*) from singer group by citizenship;
select citizenship from singer group by citizenship order by count(*) desc limit 1;
select citizenship from singer group by citizenship order by count(*) desc limit 1;
select citizenship,  max(net_worth_millions) from singer group by citizenship;
select max(net_worth_millions),  citizenship from singer group by citizenship;
select title,  name from song where sales  =  (select max(sales) from song);
select title,  name from song;
select distinct t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t2.sales  >  300000;
select distinct name from singer where sales  >  300000;
select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.name having count(*)  >  1;
select name from singer where name in( select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.name having count(*)  >  1;
select t1.name,  sum(t2.sales) from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id;
select sum(sales),  t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.name;
select name from singer where singer_id not in ( select singer_id from song );
select name from singer where singer_id not in ( select singer_id from song);
select citizenship from singer where birth_year  <  1945 intersect select citizenship from singer where birth_year  >  1955;
select citizenship from singer where birth_year  <  1945 intersect select citizenship from singer where birth_year  >  1955;
select count(*) from other_available_features;
select t1.feature_type_name from ref_feature_types as t1 join other_available_features as t2 on t1.feature_type_code  =  t2.feature_type_code where t2.feature_name  =  "aircon";
select t1.property_type_description from properties as t1 join ref_property_types as t2 on t1.property_type_code  =  t2.property_type_code where t1.property_type_code  =  "other_property_features";
select property_name from properties where property_type_code  =  "house" intersect select property_name from properties where property_type_code  =  "apartment" group by property_name having count(*)  >  1;
